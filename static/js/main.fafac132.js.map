{"version":3,"file":"static/js/main.fafac132.js","mappings":"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","sources":["app|sync|/^(?:/)(?%21(?:(?:(?:.*/+api)%7C(?:/+(html%7Cnative-intent))))/.[tj]sx?$).*(?:/.android%7C/.ios%7C/.native)?/.[tj]sx?$","app/(tabs)/login.tsx","app/(tabs)/game.tsx","app/(tabs)/archive.tsx","app/(tabs)/404.tsx","app/_layout.tsx","app/index.tsx","app/(tabs)/register.tsx","app/(tabs)/reset.tsx","app/(tabs)/settings.tsx","app/(tabs)/profile.tsx","app/+not-found.tsx","app/(tabs)/forgot.tsx","app/(tabs)/dashboard.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["var map = {\n\t\"./(tabs)/404.tsx\": 3296,\n\t\"./(tabs)/archive.tsx\": 2782,\n\t\"./(tabs)/dashboard.tsx\": 9140,\n\t\"./(tabs)/forgot.tsx\": 9099,\n\t\"./(tabs)/game.tsx\": 2608,\n\t\"./(tabs)/login.tsx\": 1739,\n\t\"./(tabs)/profile.tsx\": 8415,\n\t\"./(tabs)/register.tsx\": 5445,\n\t\"./(tabs)/reset.tsx\": 7353,\n\t\"./(tabs)/settings.tsx\": 7901,\n\t\"./+not-found.tsx\": 8973,\n\t\"./_layout.tsx\": 5111,\n\t\"./index.tsx\": 5250\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 685;","import { ScrollView, useWindowDimensions, StyleSheet, Text, View, TextInput, TouchableOpacity, Image } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Link, useRouter } from 'expo-router';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst LoginScreen = () => {\r\n    const [validating, setValidating] = useState(true);\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isValid, setIsValid] = useState({username: false, password: false});\r\n    const [serverCode, setServerCode] = useState('0');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const router = useRouter();\r\n    const server = 'chessmate-production.up.railway.app';\r\n\r\n    const verifyToken = async () => {\r\n        let response;\r\n\r\n        try {\r\n            const token = await AsyncStorage.getItem('token');\r\n            response = await fetch('https://' + server + '/verify?token=' + token);\r\n            setValidating(false);\r\n        } catch (err) {\r\n            setValidating(false);\r\n\r\n            return;\r\n        }\r\n\r\n        response.json().then((code) => {\r\n            if (code.code === '0') {\r\n                router.push('dashboard');\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (validating) {\r\n            verifyToken();\r\n        }\r\n    }, []);\r\n\r\n    const handleLogin = async () => {\r\n        const valid = {username: false, password: false};\r\n        let invalid = false;\r\n        const usernameRegex = /^[A-Za-z][A-Za-z0-9_]{2,14}$/;\r\n\r\n        if (!usernameRegex.test(username)) {\r\n            valid.username = true;\r\n            setServerCode('0');\r\n            invalid = true;\r\n        }\r\n\r\n        const passwordRegex = /^[A-Za-z0-9_]{8,32}$/;\r\n\r\n        if (!passwordRegex.test(password)) {\r\n            valid.password = true;\r\n            setServerCode('0');\r\n            invalid = true;\r\n        }\r\n\r\n        setIsValid(valid);\r\n\r\n        if (invalid) return;\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await fetch('https://' + server + '/login', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ username, password }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                await AsyncStorage.setItem('token', data.message);\r\n                router.push('dashboard');\r\n            } else {\r\n                const error = await response.json();\r\n                setServerCode(error.error);\r\n            }\r\n        } catch (error) {\r\n            setServerCode('4');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ScrollView>\r\n            <View style={[styles.container, { minHeight: useWindowDimensions().height }]}>\r\n                <Text style={styles.title}>ChessMate</Text>\r\n                <Image source={{ uri: 'https://' + server + '/uploads/cm.png' }} style={styles.profileImage} />\r\n                \r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"USERNAME\"\r\n                    placeholderTextColor=\"#bbb\"\r\n                    value={username}\r\n                    onChangeText={setUsername}\r\n                />\r\n\r\n                {isValid.username && <Text style={styles.warning}>\r\n                    Invalid username.\r\n                </Text>}\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"PASSWORD\"\r\n                    placeholderTextColor=\"#bbb\"\r\n                    value={password}\r\n                    onChangeText={setPassword}\r\n                    secureTextEntry={true}\r\n                />\r\n\r\n                {isValid.password && <Text style={styles.warning}>\r\n                    Invalid password.\r\n                </Text>}\r\n\r\n                <TouchableOpacity style={styles.button} onPress={handleLogin} disabled={isLoading}>\r\n                    <Text style={styles.buttonText}>{isLoading ? 'Logging in...' : 'LOGIN'}</Text>\r\n                </TouchableOpacity>\r\n\r\n                {(serverCode !== '0') && <Text style={styles.warning}>\r\n                    {serverCode === '1' ? 'Account not confirmed by email yet.' : (serverCode === '2' ? 'Wrong password.' : (serverCode === '3' ? 'User doesn\\'t exist.' : 'Unknown error.'))}\r\n                </Text>}\r\n\r\n                <Link href=\"forgot\" style={styles.linkText}>\r\n                    <Text style={styles.linkText}>Forgot password?</Text>\r\n                </Link>\r\n\r\n                <Link href=\"register\" style={styles.linkText}>\r\n                    <Text style={styles.linkText}>Don't have an account yet? Register.</Text>\r\n                </Link>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        overflow: 'hidden',\r\n        backgroundColor: '#444'\r\n    },\r\n    title: {\r\n        fontSize: 32,\r\n        fontWeight: 'bold',\r\n        marginBottom: 10,\r\n        color: '#fff'\r\n    },\r\n    profileImage: {\r\n        width: 200,\r\n        height: 200,\r\n        borderRadius: 50,\r\n        marginBottom: 10\r\n    },\r\n    input: {\r\n        width: '80%',\r\n        height: 50,\r\n        backgroundColor: '#444',\r\n        color: '#ccc',\r\n        borderColor: '#ccc',\r\n        borderWidth: 2,\r\n        borderRadius: 2,\r\n        paddingHorizontal: 15,\r\n        marginBottom: 5,\r\n        fontSize: 16\r\n    },\r\n    warning: {\r\n        width: '80%',\r\n        color: '#f00',\r\n        marginBottom: 10,\r\n        fontSize: 16,\r\n        fontWeight: 'bold'\r\n    },\r\n    button: {\r\n        width: '80%',\r\n        height: 50,\r\n        backgroundColor: '#fff',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 5,\r\n        marginBottom: 5\r\n    },\r\n    buttonText: {\r\n        color: '#00f',\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    },\r\n    linkText: {\r\n        color: '#00f',\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        marginVertical: 10\r\n    }\r\n});\r\n\r\nexport default LoginScreen;","import { View, Text, StyleSheet, useWindowDimensions, ScrollView, TouchableOpacity, Image, TextInput } from 'react-native';\r\nimport { Link, useRouter, useLocalSearchParams, useNavigation } from 'expo-router';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport Svg, { Rect } from 'react-native-svg';\r\n\r\n// Types for the chess pieces\r\ntype PieceKey = 'P' | 'N' | 'B' | 'R' | 'Q' | 'K' | 'p' | 'n' | 'b' | 'r' | 'q' | 'k';\r\ntype BoardState = (PieceKey | '')[][];\r\n\r\n// Server ip\r\nconst server = 'chessmate-production.up.railway.app';\r\n\r\n// Local PNG images for chess pieces\r\nconst pieces: Record<PieceKey, any> = {\r\n  'P': 'https://' + server + '/uploads/wp.png',\r\n  'N': 'https://' + server + '/uploads/wn.png',\r\n  'B': 'https://' + server + '/uploads/wb.png',\r\n  'R': 'https://' + server + '/uploads/wr.png',\r\n  'Q': 'https://' + server + '/uploads/wq.png',\r\n  'K': 'https://' + server + '/uploads/wk.png',\r\n  'p': 'https://' + server + '/uploads/bp.png',\r\n  'n': 'https://' + server + '/uploads/bn.png',\r\n  'b': 'https://' + server + '/uploads/bb.png',\r\n  'r': 'https://' + server + '/uploads/br.png',\r\n  'q': 'https://' + server + '/uploads/bq.png',\r\n  'k': 'https://' + server + '/uploads/bk.png'\r\n};\r\n\r\n// Piece types\r\nconst whiteKeys: Array<string> = ['P', 'N', 'B', 'R', 'Q', 'K'];\r\nconst blackKeys: Array<string> = ['p', 'n', 'b', 'r', 'q', 'k'];\r\n\r\n// Initial board setup\r\nconst initialBoard: BoardState = [\r\n  ['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'],\r\n  ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],\r\n  ['' , '' , '' , '' , '' , '' , '' , '' ],\r\n  ['' , '' , '' , '' , '' , '' , '' , '' ],\r\n  ['' , '' , '' , '' , '' , '' , '' , '' ],\r\n  ['' , '' , '' , '' , '' , '' , '' , '' ],\r\n  ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],\r\n  ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R']\r\n];\r\n\r\n// Interface for chessboard\r\ninterface ChessBoardInterface {\r\n  boardSize: number;\r\n  boardState: BoardState;\r\n  onSquarePress: (row: number, col: number) => void;\r\n  selectedPiece: { row: number; col: number; piece: PieceKey } | null;\r\n  fliped: boolean;\r\n  epFlags: {start: { row: number; col: number } | null; target: { row: number; col: number } | null};\r\n  castleFlags: { whiteKingside: boolean; blackKingside: boolean; whiteQueenside: boolean; blackQueenside: boolean };\r\n}\r\n\r\n// Check if a square is under attack\r\nconst isSquareUnderAttack = (row: number, col: number, boardState: BoardState, isWhite: boolean,\r\n  epFlags: {start: { row: number; col: number } | null; target: { row: number; col: number } | null},\r\n  castleFlags: { whiteKingside: boolean; blackKingside: boolean; whiteQueenside: boolean; blackQueenside: boolean }\r\n): boolean => {\r\n  for (let r = 0; r < 8; r++) {\r\n    for (let c = 0; c < 8; c++) {\r\n      const piece = boardState[r][c];\r\n\r\n      if (piece && (isWhite ? blackKeys.includes(piece) : whiteKeys.includes(piece))) {\r\n        const moves = getLegalMoves(r, c, piece, boardState, true, false, epFlags, castleFlags);\r\n\r\n        if (moves.some(move => move.row === row && move.col === col)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\n// Simulate making a move\r\nconst simulateMove = (boardState: BoardState, from: { row: number; col: number },  to: { row: number; col: number }): BoardState => {\r\n  const newBoard = boardState.map((row) => [...row]);\r\n  const piece = newBoard[from.row][from.col];\r\n  newBoard[from.row][from.col] = '';\r\n  newBoard[to.row][to.col] = piece;\r\n\r\n  return newBoard;\r\n};\r\n\r\n// Check if king is in check\r\nconst isInCheck = (boardState: BoardState, isWhite: boolean,\r\n  epFlags: {start: { row: number; col: number } | null; target: { row: number; col: number } | null},\r\n  castleFlags: { whiteKingside: boolean; blackKingside: boolean; whiteQueenside: boolean; blackQueenside: boolean }\r\n): boolean => {\r\n  const king = isWhite ? 'K' : 'k';\r\n  let kingRow = -1;\r\n  let kingCol = -1;\r\n\r\n  for (let row = 0; row < 8; row++) {\r\n    for (let col = 0; col < 8; col++) {\r\n      if (boardState[row][col] === king) {\r\n        kingRow = row;\r\n        kingCol = col;\r\n\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (kingRow !== -1) break;\r\n  }\r\n\r\n  for (let row = 0; row < 8; row++) {\r\n    for (let col = 0; col < 8; col++) {\r\n      const piece = boardState[row][col];\r\n\r\n      if (piece && (isWhite ? blackKeys.includes(piece) : whiteKeys.includes(piece))) {\r\n        const moves = getLegalMoves(row, col, piece, boardState, true, false, epFlags, castleFlags);\r\n\r\n        if (moves.some((move) => move.row === kingRow && move.col === kingCol)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\n// Function to get legal moves for a piece\r\nconst getLegalMoves = (row: number, col: number, piece: PieceKey, boardState: BoardState, capture: boolean, check: boolean,\r\n  epFlags: {start: { row: number; col: number } | null; target: { row: number; col: number } | null},\r\n  castleFlags: { whiteKingside: boolean; blackKingside: boolean; whiteQueenside: boolean; blackQueenside: boolean }): { row: number; col: number}[] => {\r\n  const moves: { row: number; col: number}[] = [];\r\n  const isWhite = piece === piece.toUpperCase();\r\n\r\n  // Helper function to check if a square is within the board\r\n  const isWithinBoard = (r: number, c: number) => r > -1 && r < 8 && c > -1 && c < 8;\r\n\r\n  // Helper function to check if a square is empty or contains an opponent's piece\r\n  const canMoveTo = (r: number, c: number) => {\r\n    const targetPiece = boardState[r][c];\r\n\r\n    return !targetPiece || (isWhite ? targetPiece === targetPiece.toLowerCase() : targetPiece === targetPiece.toUpperCase());\r\n  };\r\n\r\n  // Helper function to add a move if it's valid\r\n  const addMove = (r: number, c: number) => {\r\n    if (isWithinBoard(r, c)) {\r\n      moves.push({ row: r, col: c});\r\n    }\r\n  };\r\n\r\n  // Movement logic for each piece\r\n  switch (piece.toUpperCase()) {\r\n    case 'P':\r\n      // Pawn moves\r\n      const direction = isWhite ? -1 : 1;\r\n      const startRow = isWhite ? 6 : 1;\r\n\r\n      // Move forward one square\r\n      if (!capture && isWithinBoard(row + direction, col) && !boardState[row + direction][col]) {\r\n        addMove(row + direction, col);\r\n\r\n        // Move forward two squares\r\n        if (row === startRow && !boardState[row + 2 * direction][col]) {\r\n          addMove(row + 2 * direction, col);\r\n        }\r\n      }\r\n\r\n      // Capture diagonally\r\n      if (isWithinBoard(row + direction, col - 1) && boardState[row + direction][col - 1] && canMoveTo(row + direction, col - 1)) {\r\n        addMove(row + direction, col - 1);\r\n      }\r\n\r\n      // Capture diagonally\r\n      if (isWithinBoard(row + direction, col + 1) && boardState[row + direction][col + 1] && canMoveTo(row + direction, col + 1)) {\r\n        addMove(row + direction, col + 1);\r\n      }\r\n\r\n      // En passant capture\r\n      if (!capture && epFlags.start && epFlags.target) {\r\n        const { from, to }: any = { from: epFlags.start, to: epFlags.target };\r\n        const lastMovedPiece = boardState[to.row][to.col];\r\n\r\n        // Check if the move corresponds to EnPassant\r\n        if (lastMovedPiece.toLowerCase() === 'p' && Math.abs(from.row - to.row) === 2 && to.row === row && (to.col === col - 1 || to.col === col + 1)) {\r\n          addMove(row + direction, to.col);\r\n        }\r\n      }\r\n\r\n      break;\r\n    case 'N':\r\n      // Knight moves\r\n      const knightMoves = [\r\n        { row: row - 2, col: col - 1 },\r\n        { row: row - 2, col: col + 1 },\r\n        { row: row - 1, col: col - 2 },\r\n        { row: row - 1, col: col + 2 },\r\n        { row: row + 1, col: col - 2 },\r\n        { row: row + 1, col: col + 2 },\r\n        { row: row + 2, col: col - 1 },\r\n        { row: row + 2, col: col + 1 },\r\n      ];\r\n\r\n      knightMoves.forEach((move) => {\r\n        if (isWithinBoard(move.row, move.col) && canMoveTo(move.row, move.col)) {\r\n          addMove(move.row, move.col);\r\n        }\r\n      });\r\n\r\n      break;\r\n    case 'B':\r\n      // Diagonal moves\r\n      for (let i = 1; i < 8; i++) {\r\n        if (!isWithinBoard(row + i, col + i)) break;\r\n\r\n        if (boardState[row + i][col + i]) {\r\n          if (canMoveTo(row + i, col + i)) addMove(row + i, col + i);\r\n\r\n          break;\r\n        }\r\n\r\n        addMove(row + i, col + i);\r\n      }\r\n\r\n      for (let i = 1; i < 8; i++) {\r\n        if (!isWithinBoard(row + i, col - i)) break;\r\n\r\n        if (boardState[row + i][col - i]) {\r\n          if (canMoveTo(row + i, col - i)) addMove(row + i, col - i);\r\n\r\n          break;\r\n        }\r\n\r\n        addMove(row + i, col - i);\r\n      }\r\n\r\n      for (let i = 1; i < 8; i++) {\r\n        if (!isWithinBoard(row - i, col + i)) break;\r\n\r\n        if (boardState[row - i][col + i]) {\r\n          if (canMoveTo(row - i, col + i)) addMove(row - i, col + i);\r\n\r\n          break;\r\n        }\r\n\r\n        addMove(row - i, col + i);\r\n      }\r\n\r\n      for (let i = 1; i < 8; i++) {\r\n        if (!isWithinBoard(row - i, col - i)) break;\r\n\r\n        if (boardState[row - i][col - i]) {\r\n          if (canMoveTo(row - i, col - i)) addMove(row - i, col - i);\r\n\r\n          break;\r\n        }\r\n\r\n        addMove(row - i, col - i);\r\n      }\r\n\r\n      break;\r\n    case 'R': // Rook\r\n      // Orthogonal moves\r\n      for (let i = 1; i < 8; i++) {\r\n        if (!isWithinBoard(row + i, col)) break;\r\n\r\n        if (boardState[row + i][col]) {\r\n          if (canMoveTo(row + i, col)) addMove(row + i, col);\r\n\r\n          break;\r\n        }\r\n\r\n        addMove(row + i, col);\r\n      }\r\n      for (let i = 1; i < 8; i++) {\r\n        if (!isWithinBoard(row - i, col)) break;\r\n\r\n        if (boardState[row - i][col]) {\r\n          if (canMoveTo(row - i, col)) addMove(row - i, col);\r\n\r\n          break;\r\n        }\r\n\r\n        addMove(row - i, col);\r\n      }\r\n      for (let i = 1; i < 8; i++) {\r\n        if (!isWithinBoard(row, col + i)) break;\r\n\r\n        if (boardState[row][col + i]) {\r\n          if (canMoveTo(row, col + i)) addMove(row, col + i);\r\n\r\n          break;\r\n        }\r\n\r\n        addMove(row, col + i);\r\n      }\r\n      for (let i = 1; i < 8; i++) {\r\n        if (!isWithinBoard(row, col - i)) break;\r\n\r\n        if (boardState[row][col - i]) {\r\n          if (canMoveTo(row, col - i)) addMove(row, col - i);\r\n\r\n          break;\r\n        }\r\n\r\n        addMove(row, col - i);\r\n      }\r\n\r\n      break;\r\n    case 'Q':\r\n      // Combine orthogonal and diagonal moves\r\n      getLegalMoves(row, col, isWhite ? 'R' : 'r', boardState, false, check, epFlags, castleFlags).forEach((move) => addMove(move.row, move.col));\r\n      getLegalMoves(row, col, isWhite ? 'B' : 'b', boardState, false, check, epFlags, castleFlags).forEach((move) => addMove(move.row, move.col));\r\n\r\n      break;\r\n    case 'K':\r\n      // King moves\r\n      const kingMoves = [\r\n        { row: row - 1, col: col - 1 },\r\n        { row: row - 1, col: col },\r\n        { row: row - 1, col: col + 1 },\r\n        { row: row, col: col - 1 },\r\n        { row: row, col: col + 1 },\r\n        { row: row + 1, col: col - 1 },\r\n        { row: row + 1, col: col },\r\n        { row: row + 1, col: col + 1 },\r\n      ];\r\n    \r\n      kingMoves.forEach((move) => {\r\n        if (isWithinBoard(move.row, move.col) && canMoveTo(move.row, move.col)) {\r\n          addMove(move.row, move.col);\r\n        }\r\n      });\r\n\r\n      if (!capture) {\r\n        // Kingside castling\r\n        if ((isWhite && !castleFlags.whiteKingside || !isWhite && !castleFlags.blackKingside) &&\r\n          !boardState[row][col + 1] && !boardState[row][col + 2] &&\r\n          !isSquareUnderAttack(row, col, boardState, isWhite, epFlags, castleFlags) &&\r\n          !isSquareUnderAttack(row, col + 1, boardState, isWhite, epFlags, castleFlags) &&\r\n          !isSquareUnderAttack(row, col + 2, boardState, isWhite, epFlags, castleFlags)) {\r\n          addMove(row, col + 2);\r\n        }\r\n    \r\n        // Queenside castling\r\n        if ((isWhite && !castleFlags.whiteQueenside || !isWhite && !castleFlags.blackQueenside) &&\r\n          !boardState[row][col - 1] && !boardState[row][col - 2] && !boardState[row][col - 3] &&\r\n          !isSquareUnderAttack(row, col, boardState, isWhite, epFlags, castleFlags) &&\r\n          !isSquareUnderAttack(row, col - 1, boardState, isWhite, epFlags, castleFlags) &&\r\n          !isSquareUnderAttack(row, col - 2, boardState, isWhite, epFlags, castleFlags)) {\r\n          addMove(row, col - 2);\r\n        }\r\n      }\r\n\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  // Filter out illegal moves\r\n  if (check) {\r\n    const legalMoves = moves.filter((move) => {\r\n      const newBoard = simulateMove(boardState, { row, col }, move);\r\n\r\n      return !isInCheck(newBoard, isWhite, epFlags, castleFlags);\r\n    });\r\n\r\n    return legalMoves;\r\n  }\r\n\r\n  return moves;\r\n};\r\n\r\nconst ChessBoard: React.FC<ChessBoardInterface> = React.memo(({ boardSize, boardState, onSquarePress, selectedPiece, fliped, epFlags, castleFlags }) => {\r\n  // Size of square\r\n  const squareSize = boardSize / 8;\r\n\r\n  // Rotate board\r\n  const rotateCoordinates = (row: number, col: number) => {\r\n    return fliped ? { row: 7 - row, col: 7 - col } : { row, col };\r\n  };\r\n\r\n  // Square rendering\r\n  const renderSquares = () => {\r\n    const squares = [];\r\n\r\n    const legalMoves = useMemo(() => {\r\n      if (!selectedPiece) return [];\r\n      return getLegalMoves(selectedPiece.row, selectedPiece.col, selectedPiece.piece, boardState, false, true, epFlags, castleFlags);\r\n    }, [selectedPiece, boardState, epFlags, castleFlags]);\r\n\r\n    for (let row = 0; row < 8; row++) {\r\n      for (let col = 0; col < 8; col++) {\r\n        const { row: displayRow, col: displayCol } = rotateCoordinates(row, col);\r\n        const x = displayCol * squareSize;\r\n        const y = displayRow * squareSize;\r\n        const color = (row + col) % 2 === 0 ? '#c3c2c2' : '#504d55';\r\n        const startColor = (row + col) % 2 === 0 ? '#fc8' : '#fc4';\r\n        const targetColor = (row + col) % 2 === 0 ? '#c00' : '#800';\r\n        const isLegalMove = legalMoves.some(move => move.row === row && move.col === col);\r\n\r\n        squares.push(\r\n          <Rect\r\n            key={`square-${row}-${col}`}\r\n            x={x}\r\n            y={y}\r\n            width={squareSize}\r\n            height={squareSize}\r\n            fill={isLegalMove ? targetColor : ((epFlags.start && epFlags.start.row === row && epFlags.start.col === col ||\r\n              epFlags.target && epFlags.target.row === row && epFlags.target.col === col ||\r\n              selectedPiece && selectedPiece.row === row && selectedPiece.col === col) ? startColor : color)}\r\n          />\r\n        );\r\n      }\r\n    }\r\n\r\n    return squares;\r\n  };\r\n\r\n  // Piece rendering\r\n  const renderPieces = () => {\r\n    const pieceComponents = [];\r\n\r\n    for (let row = 0; row < 8; row++) {\r\n      for (let col = 0; col < 8; col++) {\r\n        const piece = boardState[row][col];\r\n\r\n        if (piece) {\r\n          const { row: displayRow, col: displayCol } = rotateCoordinates(row, col);\r\n          const x = displayCol * squareSize;\r\n          const y = displayRow * squareSize;\r\n\r\n          pieceComponents.push(\r\n            <Image\r\n              key={`piece-${row}-${col}`}\r\n              source={{ uri: pieces[piece] }}\r\n              style={{ position: 'absolute', left: x, top: y, width: squareSize, height: squareSize}}\r\n            />\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    return pieceComponents;\r\n  };\r\n\r\n  // Touchable overlay rendering\r\n  const renderTouchableOverlay = () => {\r\n    const touchables = [];\r\n\r\n    for (let row = 0; row < 8; row++) {\r\n      for (let col = 0; col < 8; col++) {\r\n        const { row: displayRow, col: displayCol } = rotateCoordinates(row, col);\r\n        const x = displayCol * squareSize;\r\n        const y = displayRow * squareSize;\r\n\r\n        touchables.push(\r\n          <TouchableOpacity\r\n            key={`touchable-${row}-${col}`}\r\n            style={{\r\n              position: 'absolute',\r\n              left: x,\r\n              top: y,\r\n              width: squareSize,\r\n              height: squareSize,\r\n            }}\r\n            onPress={() => onSquarePress(row, col)}\r\n          />\r\n        );\r\n      }\r\n    }\r\n\r\n    return touchables;\r\n  };\r\n\r\n  return (\r\n    <View style={{ width: boardSize, height: boardSize }}>\r\n      <Svg width={boardSize} height={boardSize}>\r\n        {renderSquares()}\r\n      </Svg>\r\n\r\n      {renderPieces()}\r\n\r\n      {renderTouchableOverlay()}\r\n    </View>\r\n  );\r\n});\r\n\r\nconst PromotionMenu: React.FC<{\r\n  isWhite: boolean;\r\n  onSelect: (piece: PieceKey) => void;\r\n  boardSize: number;\r\n}> = ({ isWhite, onSelect, boardSize }) => {\r\n  // Promotion options\r\n  const promotionPieces: PieceKey[] = isWhite ? ['Q', 'R', 'B', 'N'] : ['q', 'r', 'b', 'n'];\r\n  const squareSize = boardSize / 8;\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.promotionMenu, {\r\n          width: boardSize,\r\n          height: squareSize * 1.5,\r\n          transform: [\r\n            { translateX: -boardSize / 2 },\r\n            { translateY: -squareSize * 0.75 }\r\n          ]\r\n        }\r\n      ]}\r\n    >\r\n      {promotionPieces.map((piece) => (\r\n        <TouchableOpacity\r\n          key={piece}\r\n          style={styles.promotionOption}\r\n          onPress={() => onSelect(piece)}\r\n        >\r\n          <Image\r\n            source={{ uri: pieces[piece] }}\r\n            style={{ width: squareSize, height: squareSize }}\r\n          />\r\n        </TouchableOpacity>\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst GameScreen: React.FC = () => {\r\n  const params = useLocalSearchParams();\r\n  const gameId = params.gameId;\r\n  const playerColor = params.color;\r\n  const playerName = params.name;\r\n  const playerImage = params.image;\r\n  const playerRating = params.rating;\r\n  const [validating, setValidating] = useState(true);\r\n  const [whiteUsername, setWhiteUsername] = useState('????');\r\n  const [whiteImageUrl, setWhiteImageUrl] = useState('https://' + server + '/uploads/_.png');\r\n  const [whiteRating, setWhiteRating] = useState('????');\r\n  const [blackUsername, setBlackUsername] = useState('????');\r\n  const [blackImageUrl, setBlackImageUrl] = useState('https://' + server + '/uploads/_.png');\r\n  const [blackRating, setBlackRating] = useState('????');\r\n  const { width, height } = useWindowDimensions();\r\n  const isLandscape = width > height;\r\n  const boardSize = isLandscape ? height * 0.9 : width * 0.9;\r\n  const files = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\r\n  const ranks = ['1', '2', '3', '4', '5', '6', '7', '8'].reverse();\r\n  const [boardState, setBoardState] = useState<BoardState>(initialBoard);\r\n  const [selectedPiece, setSelectedPiece] = useState<{ row: number; col: number; piece: PieceKey } | null>(null);\r\n  const [promotionSquare, setPromotionSquare] = useState<{ row: number; col: number } | null>(null);\r\n  const [capturedWhite, setCapturedWhite] = useState<PieceKey[]>([]);\r\n  const [capturedBlack, setCapturedBlack] = useState<PieceKey[]>([]);\r\n  const [isWhiteTurn, setIsWhiteTurn] = useState(true);\r\n  const [epFlags, setEpFlags] = useState<{start: { row: number; col: number } | null; target: { row: number; col: number } | null}>(\r\n    {start: null, target: null});\r\n  const [castleFlags, setCastleFlags] = useState<{ whiteKingside: boolean; blackKingside: boolean; whiteQueenside: boolean; blackQueenside: boolean }>(\r\n    {whiteKingside: false, blackKingside: false, whiteQueenside: false, blackQueenside: false});\r\n  const [color, setColor] = useState<'white' | 'black' | null>(null);\r\n  const [fliped, setFlip] = useState<boolean>(false);\r\n  const [ws, setWs] = useState<WebSocket | null>(null);\r\n  const [whiteTimer, setWhiteTimer] = useState(0);\r\n  const [blackTimer, setBlackTimer] = useState(0);\r\n  const [result, setResult] = useState('ongoing');\r\n  const [chatMessages, setChatMessages] = useState<string[]>([]);\r\n  const [chatInput, setChatInput] = useState('');\r\n  const [isChatVisible, setIsChatVisible] = useState(false);\r\n  const router = useRouter();\r\n  const navigation = useNavigation();\r\n  \r\n  const verifyToken = async () => {\r\n    let response;\r\n\r\n    try {\r\n      const token = await AsyncStorage.getItem('token');\r\n      response = await fetch('https://' + server + '/verify?token=' + token);\r\n      setValidating(false);\r\n    } catch (err) {\r\n      setValidating(false);\r\n\r\n      return;\r\n    }\r\n\r\n    response.json().then((code) => {\r\n      if (code.code === '1') {\r\n        router.push('login');\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (validating) {\r\n      verifyToken();\r\n    }\r\n  }, []);\r\n\r\n  const setImage = async (url: string, white: boolean) => {\r\n    const imageResponse = await fetch(url)\r\n    white ? setWhiteImageUrl(imageResponse.url) : setBlackImageUrl(imageResponse.url);\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Connect to the WebSocket server\r\n    const websocket = new WebSocket('wss://' + server + '/game?gameId=' + gameId + '&color=' + playerColor + '&name=' + playerName + '&image=' + playerImage + '&rating=' + playerRating);\r\n\r\n    websocket.onopen = () => {\r\n      console.log('WebSocket connected');\r\n    };\r\n\r\n    websocket.onmessage = (message) => {\r\n      const data = JSON.parse(message.data);\r\n\r\n      if (data.type === 'assignColor') {\r\n        // Update player color\r\n        setColor(data.color);\r\n        setFlip(data.color === 'black');\r\n      } else if (data.type === 'setWhiteUser') {\r\n        // Update white player data\r\n        setWhiteUsername(data.whiteName);\r\n        setImage(data.whiteImage, true);\r\n        setWhiteRating(data.whiteRating);\r\n      } else if (data.type === 'setBlackUser') {\r\n        // Update black player data\r\n        setBlackUsername(data.blackName);\r\n        setImage(data.blackImage, false);\r\n        setBlackRating(data.blackRating);\r\n      } else if (data.type === 'gameState') {\r\n        // Update the game state\r\n        setBoardState(data.gameState.board);\r\n        setIsWhiteTurn(data.gameState.currentTurn === 'white');\r\n        setCapturedWhite(data.gameState.capturedWhite);\r\n        setCapturedBlack(data.gameState.capturedBlack);\r\n        setEpFlags({start: data.gameState.lastMoveStart, target: data.gameState.lastMoveTarget});\r\n        setCastleFlags({whiteKingside: data.gameState.whiteKingside, blackKingside: data.gameState.blackKingside,\r\n          whiteQueenside: data.gameState.whiteQueenside, blackQueenside: data.gameState.blackQueenside});\r\n        setWhiteTimer(data.gameState.whiteTimer);\r\n        setBlackTimer(data.gameState.blackTimer);\r\n        \r\n        if (data.gameState.winner) {\r\n          setPromotionSquare(null);\r\n          setSelectedPiece(null);\r\n          setResult(data.gameState.winner);\r\n        }\r\n      } else if (data.type === 'chat') {\r\n        setChatMessages((prevMessages) => [...prevMessages, data.message]);\r\n      }\r\n    };\r\n\r\n    websocket.onclose = () => {\r\n      console.log('WebSocket disconnected');\r\n    };\r\n\r\n    websocket.onerror = (error) => {\r\n      console.error('WebSocket error:', error);\r\n    };\r\n\r\n    setWs(websocket);\r\n\r\n    const unsubscribe = navigation.addListener('beforeRemove', () => {\r\n      websocket.close();\r\n    });\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      websocket.close();\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const handleMove = (from: { row: number; col: number }, to: { row: number; col: number }, promotion: PieceKey | null) => {\r\n    if (ws) {\r\n      // Send the move to the server\r\n      ws.send(JSON.stringify({ type: 'move', from, to, promotion }));\r\n    }\r\n  };\r\n\r\n  const handleSquarePress = (row: number, col: number) => {\r\n    if (whiteUsername === '????' || blackUsername === '????') {\r\n      return;\r\n    }\r\n\r\n    if (result !== 'ongoing' || promotionSquare || isChatVisible) {\r\n      setPromotionSquare(null);\r\n      setSelectedPiece(null);\r\n\r\n      return;\r\n    }\r\n\r\n    const piece = boardState[row][col];\r\n\r\n    if (selectedPiece) {\r\n      const from = { row: selectedPiece.row, col: selectedPiece.col };\r\n      const to = { row, col };\r\n\r\n      if (selectedPiece.row === row && selectedPiece.col === col) {\r\n        setSelectedPiece(null);\r\n      } else if (piece && ((color === 'white' && isWhiteTurn && whiteKeys.includes(piece)) || (color === 'black' && !isWhiteTurn && blackKeys.includes(piece)))) {\r\n        setSelectedPiece({ row, col, piece });\r\n      } else {\r\n        const promotionRow = isWhiteTurn ? 0 : 7;\r\n\r\n        if (selectedPiece.piece.toLowerCase() === 'p' && row === promotionRow) {\r\n          setPromotionSquare({ row, col });\r\n\r\n          return;\r\n        }\r\n\r\n        handleMove(from, to, null);\r\n        setSelectedPiece(null);\r\n      }\r\n    } else if (piece && ((color === 'white' && isWhiteTurn && whiteKeys.includes(piece)) || (color === 'black' && !isWhiteTurn && blackKeys.includes(piece)))) {\r\n      setSelectedPiece({ row, col, piece });\r\n    }\r\n  };\r\n\r\n  const handlePromotionSelect = (piece: PieceKey) => {\r\n    if (promotionSquare && selectedPiece) {\r\n      const from = { row: selectedPiece.row, col: selectedPiece.col };\r\n      const to = { row: promotionSquare.row, col: promotionSquare.col };\r\n      handleMove(from, to, piece);\r\n      setPromotionSquare(null);\r\n      setSelectedPiece(null);\r\n    }\r\n  };\r\n\r\n  const renderCapturedPieces = (capturedPieces: PieceKey[]) => {\r\n    const pieceHeight = boardSize / 8;\r\n    const pieceWidth = boardSize / 16;\r\n\r\n    return (\r\n      <View style={[styles.capturedPiecesContainer, { height: pieceHeight }]}>\r\n        {capturedPieces.map((piece, index) => (\r\n          <Image\r\n            key={`captured-${piece}-${index}`}\r\n            source={{ uri: pieces[piece] }}\r\n            style={[{ width: pieceWidth, height: pieceHeight }]}\r\n          />\r\n        ))}\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const flipBoard = () => {\r\n    if (fliped) {\r\n      setFlip(false);\r\n    } else {\r\n      setFlip(true);\r\n    }\r\n  }\r\n\r\n  const responsiveFontSize = (size: any) => {\r\n    const scale = Math.min(height / 800, width / 400, 2);\r\n\r\n    return Math.max(size * scale, 2);\r\n  };\r\n\r\n  const buttonWidth = width * 0.25;\r\n\r\n  const formatTime = (seconds: number) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n\r\n    return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\r\n  };\r\n\r\n  const handleOfferDraw = () => {\r\n    if (result === 'ongoing' && ws) {\r\n      ws.send(JSON.stringify({ type: 'offerDraw' }));\r\n    }\r\n  };\r\n\r\n  const handleResign = () => {\r\n    if (result === 'ongoing' && ws) {\r\n      ws.send(JSON.stringify({ type: 'resign' }));\r\n    }\r\n  };\r\n\r\n  const toggleChat = () => {\r\n    if (whiteUsername === '????' || blackUsername === '????' || whiteUsername === 'Stockfish' || blackUsername === 'Stockfish') {\r\n      return;\r\n    }\r\n\r\n    setPromotionSquare(null);\r\n    setSelectedPiece(null);\r\n    setIsChatVisible(!isChatVisible);\r\n  };\r\n  \r\n  const handleSendMessage = () => {\r\n    if (chatInput.trim() && ws) {\r\n      ws.send(JSON.stringify({ type: 'chat', message: chatInput }));\r\n      setChatInput('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView>\r\n      <View style={[styles.container, { minHeight: height }]}>\r\n        <View style={styles.topBar}>\r\n          <View style={styles.backArrow}>\r\n            <Link href=\"dashboard\">\r\n              <View>\r\n                <MaterialIcons name=\"arrow-back\" size={responsiveFontSize(30)} color=\"#ccc\" />\r\n              </View>\r\n            </Link>\r\n          </View>\r\n\r\n          <View style={styles.topCenter}>\r\n            <Text style={[styles.timer, { fontSize: responsiveFontSize(32) }]}>{!fliped ? formatTime(blackTimer) : formatTime(whiteTimer)}</Text>\r\n            <Text style={[styles.moveIndicator, { fontSize: responsiveFontSize(20) }]}>{result !== \"ongoing\" ? \" \" :\r\n              (isWhiteTurn ? (!fliped ? \" \" : \"White to move\") : (!fliped ? \"Black to move\" : \" \"))}</Text>\r\n          </View>\r\n\r\n          <View style={styles.topRight}>\r\n            <Image\r\n              source={{ uri: (!fliped ? blackImageUrl : whiteImageUrl) }}\r\n              style={[styles.profilePicture, { width: responsiveFontSize(50), height: responsiveFontSize(50) }]}\r\n            />\r\n\r\n            <Text style={[styles.userInfo, { fontSize: responsiveFontSize(18) }]}>{(!fliped ? blackUsername : whiteUsername)}</Text>\r\n            <Text style={[styles.rating, { fontSize: responsiveFontSize(14) }]}>{(!fliped ? blackRating : whiteRating)}</Text>\r\n          </View>\r\n        </View>\r\n\r\n        {renderCapturedPieces(capturedBlack)}\r\n\r\n        <View style={[styles.fileLabelsContainer, { width: boardSize }]}>\r\n          {files.map((file, index) => (\r\n            <Text\r\n              key={`file-top-${file}`}\r\n              style={[styles.fileLabel, { fontSize: 12 }]}\r\n            >\r\n              {fliped ? files[files.length - 1 - index] : file}\r\n            </Text>\r\n          ))}\r\n        </View>\r\n\r\n        <View style={styles.boardWithLabelsContainer}>\r\n          <View style={styles.rankLabelsContainer}>\r\n            {ranks.map((rank, index) => (\r\n              <Text\r\n                key={`rank-${rank}`}\r\n                style={[styles.rankLabel, { marginVertical: boardSize / 26, fontSize: 12 }]}\r\n              >\r\n                {fliped ? ranks[ranks.length - 1 - index] : rank}\r\n              </Text>\r\n            ))}\r\n          </View>\r\n\r\n          <View>\r\n            <ChessBoard\r\n              boardSize={boardSize}\r\n              boardState={boardState}\r\n              onSquarePress={handleSquarePress}\r\n              selectedPiece={selectedPiece}\r\n              fliped={fliped}\r\n              epFlags={epFlags}\r\n              castleFlags={castleFlags}\r\n            />\r\n\r\n            {promotionSquare && (\r\n              <PromotionMenu\r\n                isWhite={color === \"white\"}\r\n                onSelect={handlePromotionSelect}\r\n                boardSize={boardSize}\r\n              />\r\n            )}\r\n          </View>\r\n\r\n          <View style={styles.rankLabelsContainer}>\r\n            {ranks.map((rank, index) => (\r\n              <Text\r\n                key={`rank-right-${rank}`}\r\n                style={[styles.rankLabel, { marginVertical: boardSize / 26, fontSize: 12 }]}\r\n              >\r\n                {fliped ? ranks[ranks.length - 1 - index] : rank}\r\n              </Text>\r\n            ))}\r\n          </View>\r\n        </View>\r\n\r\n        <View style={[styles.fileLabelsContainer, { width: boardSize }]}>\r\n          {files.map((file, index) => (\r\n            <Text\r\n              key={`file-bottom-${file}`}\r\n              style={[styles.fileLabel, { fontSize: 12 }]}\r\n            >\r\n              {fliped ? files[files.length - 1 - index] : file}\r\n            </Text>\r\n          ))}\r\n        </View>\r\n\r\n        {renderCapturedPieces(capturedWhite)}\r\n\r\n        <View style={styles.bottomBar}>\r\n          <View style={styles.bottomLeft}>\r\n            <Image\r\n              source={{ uri: (!fliped ? whiteImageUrl : blackImageUrl) }}\r\n              style={[styles.profilePicture, { width: responsiveFontSize(50), height: responsiveFontSize(50) }]}\r\n            />\r\n\r\n            <Text style={[styles.userInfo, { fontSize: responsiveFontSize(18) }]}>{(!fliped ? whiteUsername : blackUsername)}</Text>\r\n            <Text style={[styles.rating, { fontSize: responsiveFontSize(14) }]}>{(!fliped ? whiteRating : blackRating)}</Text>\r\n          </View>\r\n\r\n          <View style={styles.bottomCenter}>\r\n            <Text style={[styles.timer, { fontSize: responsiveFontSize(32) }]}>{!fliped ? formatTime(whiteTimer) : formatTime(blackTimer)}</Text>\r\n            <Text style={[styles.moveIndicator, { fontSize: responsiveFontSize(20) }]}>{result !== \"ongoing\" ? \" \" :\r\n              (isWhiteTurn ? (!fliped ? \"White to move\" : \" \") : (!fliped ? \" \" : \"Black to move\"))}</Text>\r\n          </View>\r\n\r\n          <View style={styles.flipBoard}>\r\n            <TouchableOpacity>\r\n              <MaterialIcons name=\"flip\" size={responsiveFontSize(30)} color=\"#ccc\" onPress={flipBoard} />\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n\r\n        <View>\r\n          <Text style={styles.gameOverText}>{result === \"ongoing\" ? (color === \"white\" ? \"You are playing the white pieces\" : \"You are playing the black pieces\") :\r\n            (result === \"white\" ? \"White won\" : (result === \"black\" ? \"Black won\" : \"Draw\"))}</Text>\r\n        </View>\r\n\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity onPress={handleOfferDraw} style={[styles.button, { width: buttonWidth }]}>\r\n            <MaterialIcons name=\"handshake\" size={responsiveFontSize(30)} color=\"#fff\" />\r\n            <Text style={[styles.buttonText, { fontSize: responsiveFontSize(14) }]}>Offer Draw</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity onPress={handleResign} style={[styles.button, { width: buttonWidth }]}>\r\n            <MaterialIcons name=\"flag\" size={responsiveFontSize(30)} color=\"#fff\" />\r\n            <Text style={[styles.buttonText, { fontSize: responsiveFontSize(14) }]}>Resign</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity onPress={toggleChat} style={[styles.button, { width: buttonWidth }]}>\r\n            <MaterialIcons name=\"chat\" size={responsiveFontSize(30)} color=\"#fff\" />\r\n            <Text style={[styles.buttonText, { fontSize: responsiveFontSize(14) }]}>Chat</Text>\r\n          </TouchableOpacity>\r\n\r\n          {isChatVisible && (\r\n            <View style={styles.chatContainer}>\r\n              <ScrollView>\r\n                {chatMessages.map((msg, index) => (\r\n                  <Text key={index} style={styles.chatMessage}>\r\n                    {msg}\r\n                  </Text>\r\n                ))}\r\n              </ScrollView>\r\n              <View style={styles.chatInputContainer}>\r\n                <TextInput\r\n                  style={styles.chatInput}\r\n                  value={chatInput}\r\n                  onChangeText={setChatInput}\r\n                  placeholder=\"Type a message...\"\r\n                />\r\n\r\n                <TouchableOpacity style={styles.sendButton} onPress={handleSendMessage}>\r\n                  <MaterialIcons name=\"send\" size={responsiveFontSize(20)} color=\"#fff\" />\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          )}\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#444'\r\n  },\r\n  topBar: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    paddingHorizontal: 20,\r\n    marginTop: 20\r\n  },\r\n  backArrow: {\r\n    flex: 1,\r\n    alignItems: 'flex-start'\r\n  },\r\n  flipBoard: {\r\n    flex: 1,\r\n    alignItems: 'flex-end'\r\n  },\r\n  topCenter: {\r\n    flex: 2,\r\n    alignItems: 'center'\r\n  },\r\n  topRight: {\r\n    flex: 1,\r\n    alignItems: 'flex-end'\r\n  },\r\n  profilePicture: {\r\n    borderRadius: 25\r\n  },\r\n  timer: {\r\n    fontWeight: 'bold',\r\n    color: '#888'\r\n  },\r\n  moveIndicator: {\r\n    fontWeight: 'bold',\r\n    color: '#ccc'\r\n  },\r\n  userInfo: {\r\n    fontWeight: 'bold',\r\n    color: '#888'\r\n  },\r\n  rating: {\r\n    color: '#ccc'\r\n  },\r\n  boardWithLabelsContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center'\r\n  },\r\n  rankLabelsContainer: {\r\n    justifyContent: 'space-between',\r\n    marginHorizontal: 5\r\n  },\r\n  rankLabel: {\r\n    color: '#ccc'\r\n  },\r\n  fileLabelsContainer: {\r\n    flexDirection: 'row',\r\n    marginVertical: 5\r\n  },\r\n  fileLabel: {\r\n    color: '#ccc',\r\n    textAlign: \"center\",\r\n    flex: 1\r\n  },\r\n  bottomBar: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    paddingHorizontal: 20,\r\n    marginBottom: 10\r\n  },\r\n  bottomLeft: {\r\n    flex: 1,\r\n    alignItems: 'flex-start'\r\n  },\r\n  bottomCenter: {\r\n    flex: 2,\r\n    alignItems: 'center'\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    width: '100%',\r\n    marginTop: 20\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    backgroundColor: '#888',\r\n    paddingVertical: 10,\r\n    borderRadius: 25\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    marginTop: 5\r\n  },\r\n  capturedPiecesContainer: {\r\n    flexDirection: 'row'\r\n  },\r\n  capturedWhite: {\r\n    flexDirection: 'row-reverse'\r\n  },\r\n  capturedBlack: {\r\n    flexDirection: 'row'\r\n  },\r\n  promotionMenu: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n    backgroundColor: '#888',\r\n    borderRadius: 10,\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%'\r\n  },\r\n  promotionOption: {\r\n    backgroundColor: '#444',\r\n    borderRadius: 10\r\n  },\r\n  chatContainer: {\r\n    position: 'absolute',\r\n    bottom: 80,\r\n    right: 20,\r\n    width: 300,\r\n    height: 200,\r\n    backgroundColor: '#888',\r\n    borderRadius: 10,\r\n    padding: 10\r\n  },\r\n  chatMessage: {\r\n    color: '#fff',\r\n    fontSize: 14,\r\n    marginBottom: 5\r\n  },\r\n  chatInputContainer: {\r\n    flexDirection: 'row'\r\n  },\r\n  chatInput: {\r\n    flex: 1,\r\n    backgroundColor: '#444',\r\n    color: '#fff',\r\n    borderRadius: 5,\r\n    padding: 5,\r\n    marginRight: 10\r\n  },\r\n  sendButton: {\r\n    backgroundColor: '#888',\r\n    borderRadius: 5,\r\n    padding: 5\r\n  },\r\n  gameOverText: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    textAlign: 'center'\r\n  }\r\n});\r\n\r\nexport default GameScreen;","import { View, Text, StyleSheet, useWindowDimensions, ScrollView, TouchableOpacity, Image } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Link, useRouter, useLocalSearchParams } from 'expo-router';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Svg, { Rect } from 'react-native-svg';\r\n\r\n// Types for the chess pieces\r\nconst whiteKeys = ['P', 'N', 'B', 'R', 'Q', 'K'];\r\nconst blackKeys = ['p', 'n', 'b', 'r', 'q', 'k'];\r\ntype PieceKey = 'P' | 'N' | 'B' | 'R' | 'Q' | 'K' | 'p' | 'n' | 'b' | 'r' | 'q' | 'k';\r\ntype BoardState = (PieceKey | '')[][];\r\n\r\n// Server ip\r\nconst server = 'chessmate-production.up.railway.app';\r\n\r\n// Local PNG images for chess pieces\r\nconst pieces: Record<PieceKey, any> = {\r\n  'P': 'https://' + server + '/uploads/wp.png',\r\n  'N': 'https://' + server + '/uploads/wn.png',\r\n  'B': 'https://' + server + '/uploads/wb.png',\r\n  'R': 'https://' + server + '/uploads/wr.png',\r\n  'Q': 'https://' + server + '/uploads/wq.png',\r\n  'K': 'https://' + server + '/uploads/wk.png',\r\n  'p': 'https://' + server + '/uploads/bp.png',\r\n  'n': 'https://' + server + '/uploads/bn.png',\r\n  'b': 'https://' + server + '/uploads/bb.png',\r\n  'r': 'https://' + server + '/uploads/br.png',\r\n  'q': 'https://' + server + '/uploads/bq.png',\r\n  'k': 'https://' + server + '/uploads/bk.png'\r\n};\r\n\r\n// Initial board setup\r\nlet initialBoard: BoardState = [\r\n  ['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'],\r\n  ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],\r\n  ['' , '' , '' , '' , '' , '' , '' , '' ],\r\n  ['' , '' , '' , '' , '' , '' , '' , '' ],\r\n  ['' , '' , '' , '' , '' , '' , '' , '' ],\r\n  ['' , '' , '' , '' , '' , '' , '' , '' ],\r\n  ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],\r\n  ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R']\r\n];\r\n\r\n// Interface for chessboard\r\ninterface ChessBoardInterface {\r\n  boardSize: number;\r\n  boardState: BoardState;\r\n  fliped: boolean;\r\n}\r\n\r\nconst ChessBoard: React.FC<ChessBoardInterface> = ({ boardSize, boardState, fliped }) => {\r\n  // Size of square\r\n  const squareSize = boardSize / 8;\r\n\r\n  // Rotate board\r\n  const rotateCoordinates = (row: number, col: number) => {\r\n    return fliped ? { row: 7 - row, col: 7 - col } : { row, col };\r\n  };\r\n\r\n  // Square rendering\r\n  const renderSquares = () => {\r\n    const squares = [];\r\n\r\n    for (let row = 0; row < 8; row++) {\r\n      for (let col = 0; col < 8; col++) {\r\n        const { row: displayRow, col: displayCol } = rotateCoordinates(row, col);\r\n        const x = displayCol * squareSize;\r\n        const y = displayRow * squareSize;\r\n        const color = (row + col) % 2 === 0 ? '#c3c2c2' : '#504d55';\r\n\r\n        squares.push(\r\n          <Rect\r\n            key={`square-${row}-${col}`}\r\n            x={x}\r\n            y={y}\r\n            width={squareSize}\r\n            height={squareSize}\r\n            fill={color}\r\n          />\r\n        );\r\n      }\r\n    }\r\n\r\n    return squares;\r\n  };\r\n\r\n  // Piece rendering\r\n  const renderPieces = () => {\r\n    const pieceComponents = [];\r\n\r\n    for (let row = 0; row < 8; row++) {\r\n      for (let col = 0; col < 8; col++) {\r\n        const piece = boardState[row][col];\r\n\r\n        if (piece) {\r\n          const { row: displayRow, col: displayCol } = rotateCoordinates(row, col);\r\n          const x = displayCol * squareSize;\r\n          const y = displayRow * squareSize;\r\n\r\n          pieceComponents.push(\r\n            <Image\r\n              key={`piece-${row}-${col}`}\r\n              source={{ uri: pieces[piece] }}\r\n              style={{ position: 'absolute', left: x, top: y, width: squareSize, height: squareSize}}\r\n            />\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    return pieceComponents;\r\n  };\r\n\r\n  return (\r\n    <View style={{ width: boardSize, height: boardSize }}>\r\n      <Svg width={boardSize} height={boardSize}>\r\n        {renderSquares()}\r\n      </Svg>\r\n\r\n      {renderPieces()}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst GameScreen: React.FC = () => {\r\n  const params = useLocalSearchParams();\r\n  const archive = params.archive;\r\n  const [validating, setValidating] = useState(true);\r\n  const [archivedGame, setArchivedGame] = useState<{ game: any; whitePlayer: any; blackPlayer: any, moves: any[] } | null>(null);\r\n  const [analysis, setAnalysis] = useState({bestmove: 'Press button to analyse', evaluation: ''});\r\n  const [analysing, setAnalysing] = useState(false);\r\n  const [currMove, setCurrMove] = useState(-1);\r\n  const [whiteUsername, setWhiteUsername] = useState('????');\r\n  const [whiteImageUrl, setWhiteImageUrl] = useState('https://' + server + '/uploads/_.png');\r\n  const [whiteRating, setWhiteRating] = useState('????');\r\n  const [blackUsername, setBlackUsername] = useState('????');\r\n  const [blackImageUrl, setBlackImageUrl] = useState('https://' + server + '/uploads/_.png');\r\n  const [blackRating, setBlackRating] = useState('????');\r\n  const { width, height } = useWindowDimensions();\r\n  const isLandscape = width > height;\r\n  const boardSize = isLandscape ? height * 0.9 : width * 0.9;\r\n  const files = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\r\n  const ranks = ['1', '2', '3', '4', '5', '6', '7', '8'].reverse();\r\n  const [fen, setFen] = useState('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1');\r\n  const [boardState, setBoardState] = useState<BoardState>(initialBoard);\r\n  const [fliped, setFlip] = useState<boolean>(false);\r\n  const router = useRouter();\r\n\r\n  const verifyToken = async () => {\r\n    let response;\r\n\r\n    try {\r\n      const token = await AsyncStorage.getItem('token');\r\n      response = await fetch('https://' + server + '/verify?token=' + token);\r\n      setValidating(false);\r\n    } catch (err) {\r\n      setValidating(false);\r\n\r\n      return;\r\n    }\r\n\r\n    response.json().then((code) => {\r\n      if (code.code === '1') {\r\n        router.push('login');\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (validating) {\r\n      verifyToken();\r\n    }\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    const gameResponse = await fetch('https://' + server + '/game?gameId=' + archive);\r\n    const game = await gameResponse.json();\r\n    const whitePlayerId = await game.message.white_player;\r\n    const whitePlayerResponse = await fetch('https://' + server + '/player?playerId=' + whitePlayerId);\r\n    const whitePlayer = await whitePlayerResponse.json();\r\n    const blackPlayerId = await game.message.black_player;\r\n    const blackPlayerResponse = await fetch('https://' + server + '/player?playerId=' + blackPlayerId);\r\n    const blackPlayer = await blackPlayerResponse.json();\r\n    const whiteUsername = await whitePlayer.message.username;\r\n    setWhiteUsername(whiteUsername);\r\n    const blackUsername = await blackPlayer.message.username;\r\n    setBlackUsername(blackUsername);\r\n    const whiteProfile = await whitePlayer.message.profile_picture_url;\r\n    const whiteImage = await fetch('https://' + server + '/' + whiteProfile);\r\n    setWhiteImageUrl(whiteImage.url);\r\n    const blackProfile = await blackPlayer.message.profile_picture_url;\r\n    const blackImage = await fetch('https://' + server + '/' + blackProfile);\r\n    setBlackImageUrl(blackImage.url);\r\n    const timeControl = await game.message.time_control;\r\n\r\n    if (['60+0', '120+1', '180+0'].includes(timeControl)) {\r\n      const whiteBulletRating = await whitePlayer.message.bullet_rating;\r\n      setWhiteRating(whiteBulletRating);\r\n      const blackBulletRating = await blackPlayer.message.bullet_rating;\r\n      setBlackRating(blackBulletRating);\r\n    } else if (['180+2', '300+0', '300+3'].includes(timeControl)) {\r\n      const whiteBlitzRating = await whitePlayer.message.blitz_rating;\r\n      setWhiteRating(whiteBlitzRating);\r\n      const blackBlitzRating = await blackPlayer.message.blitz_rating;\r\n      setBlackRating(blackBlitzRating);\r\n    } else if (['600+0', '600+5', '900+0'].includes(timeControl)) {\r\n      const whiteRapidRating = await whitePlayer.message.rapid_rating;\r\n      setWhiteRating(whiteRapidRating);\r\n      const blackRapidRating = await blackPlayer.message.rapid_rating;\r\n      setBlackRating(blackRapidRating);\r\n    } else if (['900+10', '1800+0', '1800+20'].includes(timeControl)) {\r\n      const whiteClassicalRating = await whitePlayer.message.classical_rating;\r\n      setWhiteRating(whiteClassicalRating);\r\n      const blackClassicalRating = await blackPlayer.message.classical_rating;\r\n      setBlackRating(blackClassicalRating);\r\n    }\r\n\r\n    const fen = await game.message.starting_position;\r\n    setPosition(fen);\r\n  }\r\n\r\n  const setPosition = (fen: any) => {\r\n    setFen(fen);\r\n    const position = fen.split(' ')[0];\r\n\r\n    const board: BoardState = [\r\n      ['', '', '', '', '', '', '', ''],\r\n      ['', '', '', '', '', '', '', ''],\r\n      ['', '', '', '', '', '', '', ''],\r\n      ['', '', '', '', '', '', '', ''],\r\n      ['', '', '', '', '', '', '', ''],\r\n      ['', '', '', '', '', '', '', ''],\r\n      ['', '', '', '', '', '', '', ''],\r\n      ['', '', '', '', '', '', '', '']\r\n    ];\r\n\r\n    let i = 0;\r\n\r\n    for (let y = 0; y < 8; y++) {\r\n      for (let x = 0; x < 8; x++) {\r\n        if (['1', '2', '3', '4', '5', '6', '7', '8'].includes(position[i])) {\r\n          x += position[i];\r\n          x--;\r\n        } else if (whiteKeys.includes(position[i]) || blackKeys.includes(position[i])) {\r\n          board[y][x] = position[i];\r\n        }\r\n\r\n        i++;\r\n\r\n        if (position[i] === '/') {\r\n          i++;\r\n        }\r\n      }\r\n    }\r\n\r\n    initialBoard = board;\r\n    setBoardState(board);\r\n  }\r\n\r\n  const fetchArchive = async () => {\r\n    const response = await fetch('https://' + server + '/fetch?archive=' + archive);\r\n    response.json().then((item) => setArchivedGame(item.game));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (whiteUsername === '????' && blackUsername === '????') {\r\n      fetchData();\r\n      fetchArchive();\r\n    }\r\n  }, []);\r\n\r\n  const flipBoard = () => {\r\n    if (fliped) {\r\n      setFlip(false);\r\n    } else {\r\n      setFlip(true);\r\n    }\r\n  }\r\n\r\n  const responsiveFontSize = (size: any) => {\r\n    const scale = Math.min(height / 800, width / 400, 2);\r\n\r\n    return Math.max(size * scale, 2);\r\n  };\r\n\r\n  const buttonWidth = width * 0.25;\r\n\r\n  const handleStart = () => {\r\n    if (currMove !== -1) {\r\n      setAnalysis({bestmove: 'Press button to analyse', evaluation: ''});\r\n    }\r\n\r\n    const fen = initialBoard;\r\n    setCurrMove(-1);\r\n    setBoardState(fen);\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    if (currMove !== -1) {\r\n      setAnalysis({bestmove: 'Press button to analyse', evaluation: ''});\r\n      const fen = currMove - 1 !== -1 ? JSON.parse(archivedGame?.moves[currMove - 1].fen) : initialBoard;\r\n      setCurrMove(Math.max(currMove - 1, -1));\r\n      setBoardState(fen);\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const index = archivedGame?.moves.length ? archivedGame?.moves.length - 1 : -1;\r\n\r\n    if (index === -1) {\r\n      return;\r\n    }\r\n\r\n    if (currMove !== index) {\r\n      setAnalysis({bestmove: 'Press button to analyse', evaluation: ''});\r\n      const fen = JSON.parse(archivedGame?.moves[currMove + 1].fen);\r\n      setCurrMove(Math.min(currMove + 1, index));\r\n      setBoardState(fen);\r\n    }\r\n  };\r\n\r\n  const handleEnd = () => {\r\n    const index = archivedGame?.moves.length ? archivedGame?.moves.length - 1 : -1;\r\n\r\n    if (index === -1) {\r\n      return;\r\n    }\r\n\r\n    if (currMove !== index) {\r\n      setAnalysis({bestmove: 'Press button to analyse', evaluation: ''});\r\n    }\r\n\r\n    const fen = JSON.parse(archivedGame?.moves[index].fen);\r\n    setCurrMove(index);\r\n    setBoardState(fen);\r\n  };\r\n\r\n  const handleAnalyse = async () => {\r\n    const uci: string[] = [];\r\n    archivedGame?.moves.forEach((item) => {if (uci.length <= currMove) uci.push(item.uci);});\r\n    setAnalysing(true);\r\n    const analysis = await fetch('https://' + server + '/analyse?fen=' + fen + '&moves=' + uci.join(' '));\r\n    analysis.json().then((item) => setAnalysis(item));\r\n    setAnalysing(false);\r\n  };\r\n\r\n  return (\r\n    <ScrollView>\r\n      <View style={[styles.container, { minHeight: height }]}>\r\n        <View style={styles.topBar}>\r\n          <View style={styles.backArrow}>\r\n            <Link href=\"profile\">\r\n              <View>\r\n                <MaterialIcons name=\"arrow-back\" size={responsiveFontSize(30)} color=\"#ccc\" />\r\n              </View>\r\n            </Link>\r\n          </View>\r\n\r\n          <View style={styles.topCenter}>\r\n            <Text style={[styles.analysisIndicator, { fontSize: responsiveFontSize(20) }]}>\r\n              {analysis.bestmove.trim() === 'bestmove (none)' ? 'No possible move' : analysis.bestmove.trim()}\r\n            </Text>\r\n\r\n            <Text style={[styles.analysisIndicator, { fontSize: responsiveFontSize(20) }]}>\r\n              {analysis.bestmove.trim() === 'bestmove (none)' ? '' : analysis.evaluation.trim()}\r\n            </Text>\r\n          </View>\r\n\r\n          <View style={styles.topRight}>\r\n            <Image\r\n              source={{ uri: (!fliped ? blackImageUrl : whiteImageUrl) }}\r\n              style={[styles.profilePicture, { width: responsiveFontSize(50), height: responsiveFontSize(50) }]}\r\n            />\r\n\r\n            <Text style={[styles.userInfo, { fontSize: responsiveFontSize(18) }]}>{(!fliped ? blackUsername : whiteUsername)}</Text>\r\n            <Text style={[styles.rating, { fontSize: responsiveFontSize(14) }]}>{(!fliped ? blackRating : whiteRating)}</Text>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={[styles.fileLabelsContainer, { width: boardSize }]}>\r\n          {files.map((file, index) => (\r\n            <Text\r\n              key={`file-top-${file}`}\r\n              style={[styles.fileLabel, { fontSize: 12 }]}\r\n            >\r\n              {fliped ? files[files.length - 1 - index] : file}\r\n            </Text>\r\n          ))}\r\n        </View>\r\n\r\n        <View style={styles.boardWithLabelsContainer}>\r\n          <View style={styles.rankLabelsContainer}>\r\n            {ranks.map((rank, index) => (\r\n              <Text\r\n                key={`rank-${rank}`}\r\n                style={[styles.rankLabel, { marginVertical: boardSize / 26, fontSize: 12 }]}\r\n              >\r\n                {fliped ? ranks[ranks.length - 1 - index] : rank}\r\n              </Text>\r\n            ))}\r\n          </View>\r\n\r\n          <View>\r\n            <ChessBoard\r\n              boardSize={boardSize}\r\n              boardState={boardState}\r\n              fliped={fliped}\r\n            />\r\n          </View>\r\n\r\n          <View style={styles.rankLabelsContainer}>\r\n            {ranks.map((rank, index) => (\r\n              <Text\r\n                key={`rank-right-${rank}`}\r\n                style={[styles.rankLabel, { marginVertical: boardSize / 26, fontSize: 12 }]}\r\n              >\r\n                {fliped ? ranks[ranks.length - 1 - index] : rank}\r\n              </Text>\r\n            ))}\r\n          </View>\r\n        </View>\r\n\r\n        <View style={[styles.fileLabelsContainer, { width: boardSize }]}>\r\n          {files.map((file, index) => (\r\n            <Text\r\n              key={`file-bottom-${file}`}\r\n              style={[styles.fileLabel, { fontSize: 12 }]}\r\n            >\r\n              {fliped ? files[files.length - 1 - index] : file}\r\n            </Text>\r\n          ))}\r\n        </View>\r\n\r\n        <View style={styles.bottomBar}>\r\n          <View style={styles.bottomLeft}>\r\n            <Image\r\n              source={{ uri: (!fliped ? whiteImageUrl : blackImageUrl) }}\r\n              style={[styles.profilePicture, { width: responsiveFontSize(50), height: responsiveFontSize(50) }]}\r\n            />\r\n\r\n            <Text style={[styles.userInfo, { fontSize: responsiveFontSize(18) }]}>{(!fliped ? whiteUsername : blackUsername)}</Text>\r\n            <Text style={[styles.rating, { fontSize: responsiveFontSize(14) }]}>{(!fliped ? whiteRating : blackRating)}</Text>\r\n          </View>\r\n\r\n          <View style={styles.bottomCenter}>\r\n            <TouchableOpacity onPress={handleAnalyse} style={[styles.analyseButton, { width: buttonWidth }]}>\r\n              <Text style={[styles.analysisIndicator, { fontSize: responsiveFontSize(16) }]}>{analysing ? \"ANALYSING\" : \"ANALYSE\"}</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={[styles.moveIndicator, { fontSize: responsiveFontSize(16) }]}>{currMove === -1 ? 'Start position' : archivedGame?.moves[currMove].uci}</Text>\r\n          </View>\r\n\r\n          <View style={styles.flipBoard}>\r\n            <TouchableOpacity>\r\n              <MaterialIcons name=\"flip\" size={responsiveFontSize(30)} color=\"#ccc\" onPress={flipBoard} />\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.buttonContainer}>\r\n            <TouchableOpacity onPress={handleStart} style={[styles.button, { width: buttonWidth }]}>\r\n              <MaterialIcons name=\"keyboard-double-arrow-left\" size={responsiveFontSize(30)} color=\"#fff\" />\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity onPress={handlePrev} style={[styles.button, { width: buttonWidth }]}>\r\n              <MaterialIcons name=\"keyboard-arrow-left\" size={responsiveFontSize(30)} color=\"#fff\" />\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity onPress={handleNext} style={[styles.button, { width: buttonWidth }]}>\r\n              <MaterialIcons name=\"keyboard-arrow-right\" size={responsiveFontSize(30)} color=\"#fff\" />\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity onPress={handleEnd} style={[styles.button, { width: buttonWidth }]}>\r\n              <MaterialIcons name=\"keyboard-double-arrow-right\" size={responsiveFontSize(30)} color=\"#fff\" />\r\n            </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#444'\r\n  },\r\n  topBar: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    paddingHorizontal: 20,\r\n    marginTop: 20\r\n  },\r\n  backArrow: {\r\n    flex: 1,\r\n    alignItems: 'flex-start'\r\n  },\r\n  flipBoard: {\r\n    flex: 1,\r\n    alignItems: 'flex-end'\r\n  },\r\n  topCenter: {\r\n    flex: 2,\r\n    alignItems: 'center'\r\n  },\r\n  topRight: {\r\n    flex: 1,\r\n    alignItems: 'flex-end'\r\n  },\r\n  profilePicture: {\r\n    borderRadius: 25\r\n  },\r\n  analysisIndicator: {\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    color: '#ccc',\r\n    marginVertical: 5\r\n  },\r\n  moveIndicator: {\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    color: '#ccc',\r\n    marginTop: 10\r\n  },\r\n  userInfo: {\r\n    fontWeight: 'bold',\r\n    color: '#888'\r\n  },\r\n  rating: {\r\n    color: '#ccc'\r\n  },\r\n  boardWithLabelsContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center'\r\n  },\r\n  rankLabelsContainer: {\r\n    justifyContent: 'space-between',\r\n    marginHorizontal: 5\r\n  },\r\n  rankLabel: {\r\n    color: '#ccc'\r\n  },\r\n  fileLabelsContainer: {\r\n    flexDirection: 'row',\r\n    marginVertical: 5\r\n  },\r\n  fileLabel: {\r\n    color: '#ccc',\r\n    textAlign: \"center\",\r\n    flex: 1\r\n  },\r\n  bottomBar: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    paddingHorizontal: 20,\r\n    marginBottom: 10\r\n  },\r\n  bottomLeft: {\r\n    flex: 1,\r\n    alignItems: 'flex-start'\r\n  },\r\n  bottomCenter: {\r\n    flex: 2,\r\n    alignItems: 'center'\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginTop: 20\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    borderWidth: 2,\r\n    borderColor: '#ccc',\r\n    backgroundColor: '#888',\r\n    paddingVertical: 10,\r\n    borderRadius: 5\r\n  },\r\n  analyseButton: {\r\n    alignItems: 'center',\r\n    backgroundColor: '#000',\r\n    padding: 15,\r\n    borderRadius: 5\r\n  }\r\n});\r\n\r\nexport default GameScreen;","import { ScrollView, useWindowDimensions, View, Text, StyleSheet, Image } from 'react-native';\r\nimport { Link } from 'expo-router';\r\n\r\nconst server = 'chessmate-production.up.railway.app';\r\n\r\nconst NotFoundScreen = () => {\r\n  return (\r\n    <ScrollView>\r\n      <View style={[styles.container, { minHeight: useWindowDimensions().height }]}>\r\n        <Image source={{ uri: 'https://' + server + '/uploads/cm.png' }} style={styles.image} resizeMode=\"contain\"/>\r\n        <Text style={styles.title}>Oops! Page Not Found</Text>\r\n        <Text style={styles.subtitle}>The page you're looking for doesn't exist or has been moved.</Text>\r\n        \r\n        <Link href='login' style={styles.button}>\r\n          <Text style={styles.buttonText}>Go to Home</Text>\r\n        </Link>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    overflow: 'hidden',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n    backgroundColor: '#444'\r\n  },\r\n  image: {\r\n    width: 250,\r\n    height: 250,\r\n    marginBottom: 25\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    marginBottom: 15,\r\n    color: '#ccc',\r\n    textAlign: 'center'\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: '#ccc',\r\n    textAlign: 'center',\r\n    marginBottom: 30,\r\n    paddingHorizontal: 20\r\n  },\r\n  button: {\r\n    backgroundColor: '#00f',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 30,\r\n    borderRadius: 25,\r\n    marginBottom: 15,\r\n    textAlign: 'center',\r\n    width: '100%'\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontSize: 16\r\n  }\r\n});\r\n\r\nexport default NotFoundScreen;","import { Stack } from 'expo-router';\r\n\r\nexport const unstable_settings = {\r\n  initialRouteName: 'index',\r\n};\r\n\r\nexport default function Layout() {\r\n  return <Stack screenOptions={{ headerShown: false }} />;\r\n}\r\n\r\nexport const basePath = '/chessmate_web';","import { useRouter } from 'expo-router';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function Main() {\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    router.replace('/login');\r\n  }, []);\r\n\r\n  return null;\r\n}","import { ScrollView, useWindowDimensions, StyleSheet, Text, View, TextInput, TouchableOpacity, Image } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Link, useRouter } from 'expo-router';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst RegisterScreen = () => {\r\n    const [validating, setValidating] = useState(true);\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [isValid, setIsValid] = useState({username: false, email: false, password: false, confirmPassword: false});\r\n    const [serverCode, setServerCode] = useState('-1');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const router = useRouter();\r\n    const server = 'chessmate-production.up.railway.app';\r\n\r\n    const verifyToken = async () => {\r\n        let response;\r\n\r\n        try {\r\n            const token = await AsyncStorage.getItem('token');\r\n            response = await fetch('https://' + server + '/verify?token=' + token);\r\n            setValidating(false);\r\n        } catch (err) {\r\n            setValidating(false);\r\n\r\n            return;\r\n        }\r\n\r\n        response.json().then((code) => {\r\n            if (code.code === '0') {\r\n                router.push('dashboard');\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (validating) {\r\n            verifyToken();\r\n        }\r\n    }, []);\r\n\r\n    const handleRegister = async () => {\r\n        const valid ={username: false, email: false, password: false, confirmPassword: false};\r\n        let invalid = false;\r\n        const usernameRegex = /^[A-Za-z][A-Za-z0-9_]{2,14}$/;\r\n\r\n        if (!usernameRegex.test(username)) {\r\n            valid.username = true;\r\n            setServerCode('-1');\r\n            invalid = true;\r\n        }\r\n\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n        if (!emailRegex.test(email)) {\r\n            valid.email = true;\r\n            setServerCode('-1');\r\n            invalid = true;\r\n        }\r\n\r\n        const passwordRegex = /^[A-Za-z0-9_]{8,32}$/;\r\n\r\n        if (!passwordRegex.test(password)) {\r\n            valid.password = true;\r\n            setServerCode('-1');\r\n            invalid = true;\r\n        } else if (confirmPassword !== password) {\r\n            valid.confirmPassword = true;\r\n            setServerCode('-1');\r\n            invalid = true;\r\n        }\r\n\r\n        setIsValid(valid);\r\n\r\n        if (invalid) return;\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await fetch('https://' + server + '/register', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ username, email, password })\r\n            });\r\n\r\n            if (response.ok) {\r\n                const message = await response.json();\r\n                setServerCode(message.message);\r\n            } else {\r\n                const error = await response.json();\r\n                setServerCode(error.error);\r\n            }\r\n        } catch (error) {\r\n            setServerCode('4');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ScrollView>\r\n            <View style={[styles.container, { minHeight: useWindowDimensions().height }]}>\r\n                <Text style={styles.title}>ChessMate</Text>\r\n                <Image source={{ uri: 'https://' + server + '/uploads/cm.png' }} style={styles.profileImage} />\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"USERNAME\"\r\n                    placeholderTextColor=\"#bbb\"\r\n                    value={username}\r\n                    onChangeText={setUsername}\r\n                />\r\n\r\n                {isValid.username && <Text style={styles.warning}>\r\n                    Invalid username. Username must start with a letter and contain only letters, numbers, or underscores. Length must be between 3 and 15 characters.\r\n                </Text>}\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"EMAIL\"\r\n                    placeholderTextColor=\"#bbb\"\r\n                    value={email}\r\n                    onChangeText={setEmail}\r\n                    keyboardType=\"email-address\"\r\n                />\r\n\r\n                {isValid.email && <Text style={styles.warning}>\r\n                    Invalid email address.\r\n                </Text>}\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"PASSWORD\"\r\n                    placeholderTextColor=\"#bbb\"\r\n                    value={password}\r\n                    onChangeText={setPassword}\r\n                    secureTextEntry={true}\r\n                />\r\n\r\n                {isValid.password && <Text style={styles.warning}>\r\n                    Invalid password. Password must contain only letters, numbers, or underscores. Length must be between 8 and 32 characters.\r\n                </Text>}\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"CONFIRM PASSWORD\"\r\n                    placeholderTextColor=\"#bbb\"\r\n                    value={confirmPassword}\r\n                    onChangeText={setConfirmPassword}\r\n                    secureTextEntry={true}\r\n                />\r\n\r\n                {isValid.confirmPassword && <Text style={styles.warning}>\r\n                    Passwords do not match.\r\n                </Text>}\r\n\r\n                <TouchableOpacity style={styles.button} onPress={handleRegister} disabled={isLoading}>\r\n                    <Text style={styles.buttonText}>{isLoading ? 'Registering...' : 'REGISTER'}</Text>\r\n                </TouchableOpacity>\r\n\r\n                {serverCode === '0' && <Text style={styles.success}>\r\n                    Registration successful! We've sent you a confirmation email to prove your identity.\r\n                </Text>}\r\n\r\n                {(serverCode !== '-1' && serverCode !== '0') && <Text style={styles.warning}>\r\n                    {serverCode === '1' ? 'Invalid credentials.' : (serverCode === '2' ? 'Username already taken.' : (serverCode === '3' ? 'Email already taken.' : 'Unknown error.'))}\r\n                </Text>}\r\n\r\n                <Link href=\"login\" style={styles.linkText}>\r\n                    <Text style={styles.linkText}>Already have an account? Login.</Text>\r\n                </Link>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        overflow: 'hidden',\r\n        backgroundColor: '#444'\r\n    },\r\n    title: {\r\n        fontSize: 32,\r\n        fontWeight: 'bold',\r\n        marginBottom: 40,\r\n        color: '#fff'\r\n    },\r\n    profileImage: {\r\n        width: 200,\r\n        height: 200,\r\n        borderRadius: 50,\r\n        marginBottom: 10\r\n    },\r\n    input: {\r\n        width: '80%',\r\n        height: 50,\r\n        backgroundColor: '#444',\r\n        color: '#ccc',\r\n        borderColor: '#ccc',\r\n        borderWidth: 2,\r\n        borderRadius: 2,\r\n        paddingHorizontal: 15,\r\n        marginBottom: 5,\r\n        fontSize: 16\r\n    },\r\n    success: {\r\n        width: '80%',\r\n        color: '#000',\r\n        marginBottom: 10,\r\n        fontSize: 16,\r\n        fontWeight: 'bold'\r\n    },\r\n    warning: {\r\n        width: '80%',\r\n        color: '#f00',\r\n        marginBottom: 10,\r\n        fontSize: 16,\r\n        fontWeight: 'bold'\r\n    },\r\n    button: {\r\n        width: '80%',\r\n        height: 50,\r\n        backgroundColor: '#fff',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 5,\r\n        marginBottom: 5\r\n    },\r\n    buttonText: {\r\n        color: '#00f',\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    },\r\n    linkText: {\r\n        color: '#00f',\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        marginVertical: 10\r\n    }\r\n});\r\n\r\nexport default RegisterScreen;","import { ScrollView, useWindowDimensions, StyleSheet, Text, View, TextInput, TouchableOpacity, Image } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Link, useRouter, useLocalSearchParams } from 'expo-router';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst ResetPasswordScreen = () => {\r\n    const { email } = useLocalSearchParams();\r\n    const [validating, setValidating] = useState(true);\r\n    const [resetCode, setResetCode] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [isValid, setIsValid] = useState({code: false, password: false, confirmPassword: false});\r\n    const [serverCode, setServerCode] = useState('-1');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const router = useRouter();\r\n    const server = 'chessmate-production.up.railway.app';\r\n\r\n    const verifyToken = async () => {\r\n        let response;\r\n\r\n        try {\r\n            const token = await AsyncStorage.getItem('token');\r\n            response = await fetch('https://' + server + '/verify?token=' + token);\r\n            setValidating(false);\r\n        } catch (err) {\r\n            setValidating(false);\r\n\r\n            return;\r\n        }\r\n\r\n        response.json().then((code) => {\r\n            if (code.code === '0') {\r\n                router.push('dashboard');\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (validating) {\r\n            verifyToken();\r\n        }\r\n    }, []);\r\n\r\n    const handleResetPassword = async () => {\r\n        const valid ={code: false, password: false, confirmPassword: false};\r\n        let invalid = false;\r\n\r\n        const codeRegex = /^\\d{6}$/;\r\n\r\n        if (!codeRegex.test(resetCode)) {\r\n            valid.code = true;\r\n            setServerCode('-1');\r\n            invalid = true;\r\n        }\r\n\r\n        const passwordRegex = /^[A-Za-z0-9_]{8,32}$/;\r\n\r\n        if (!passwordRegex.test(newPassword)) {\r\n            valid.password = true;\r\n            setServerCode('-1');\r\n            invalid = true;\r\n        } else if (confirmPassword !== newPassword) {\r\n            valid.confirmPassword = true;\r\n            setServerCode('-1');\r\n            invalid = true;\r\n        }\r\n\r\n        setIsValid(valid);\r\n\r\n        if (invalid) return;\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await fetch('https://' + server + '/reset', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ email, resetCode, newPassword })\r\n            });\r\n\r\n            if (response.ok) {\r\n                const message = await response.json();\r\n                setServerCode(message.message);\r\n            } else {\r\n                const error = await response.json();\r\n                setServerCode(error.error);\r\n            }\r\n        } catch (error) {\r\n            setServerCode('4');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ScrollView>\r\n            <View style={[styles.container, { minHeight: useWindowDimensions().height }]}>\r\n                <Text style={styles.title}>ChessMate</Text>\r\n                <Image source={{ uri: 'https://' + server + '/uploads/cm.png' }} style={styles.profileImage} />\r\n\r\n                <Text style={styles.success}>\r\n                    Please enter the code we've sent on given email address.\r\n                </Text>\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"RESET CODE\"\r\n                    placeholderTextColor=\"#bbb\"\r\n                    value={resetCode}\r\n                    onChangeText={setResetCode}\r\n                    keyboardType=\"numeric\"\r\n                />\r\n\r\n                {isValid.code && <Text style={styles.warning}>\r\n                    Invalid code.\r\n                </Text>}\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"NEW PASSWORD\"\r\n                    placeholderTextColor=\"#bbb\"\r\n                    value={newPassword}\r\n                    onChangeText={setNewPassword}\r\n                    secureTextEntry={true}\r\n                />\r\n\r\n                {isValid.password && <Text style={styles.warning}>\r\n                    Invalid password. Password must contain only letters, numbers, or underscores. Length must be between 8 and 32 characters.\r\n                </Text>}\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"CONFIRM PASSWORD\"\r\n                    placeholderTextColor=\"#bbb\"\r\n                    value={confirmPassword}\r\n                    onChangeText={setConfirmPassword}\r\n                    secureTextEntry={true}\r\n                />\r\n\r\n                {isValid.confirmPassword && <Text style={styles.warning}>\r\n                    Passwords do not match.\r\n                </Text>}\r\n\r\n                <TouchableOpacity\r\n                    style={styles.button}\r\n                    onPress={handleResetPassword}\r\n                    disabled={isLoading}\r\n                >\r\n                    <Text style={styles.buttonText}>\r\n                        {isLoading ? 'Resetting...' : 'RESET PASSWORD'}\r\n                    </Text>\r\n                </TouchableOpacity>\r\n\r\n                {serverCode === '0' && <Text style={styles.success}>\r\n                    Password reset successfully.\r\n                </Text>}\r\n\r\n                {(serverCode !== '-1' && serverCode !== '0') && <Text style={styles.warning}>\r\n                    {serverCode === '1' ? 'Invalid code.' : (serverCode === '2' ? 'Invalid email.' : (serverCode === '3' ? 'Invalid or expired code.' : 'Unknown error.'))}\r\n                </Text>}\r\n\r\n                <Link href=\"login\" style={styles.linkText}>\r\n                    <Text style={styles.linkText}>Back to Login</Text>\r\n                </Link>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        overflow: 'hidden',\r\n        backgroundColor: '#444'\r\n    },\r\n    title: {\r\n        fontSize: 32,\r\n        fontWeight: 'bold',\r\n        marginBottom: 40,\r\n        color: '#fff'\r\n    },\r\n    profileImage: {\r\n        width: 200,\r\n        height: 200,\r\n        borderRadius: 50,\r\n        marginBottom: 10\r\n    },\r\n    input: {\r\n        width: '80%',\r\n        height: 50,\r\n        backgroundColor: '#444',\r\n        color: '#ccc',\r\n        borderColor: '#ccc',\r\n        borderWidth: 2,\r\n        borderRadius: 2,\r\n        paddingHorizontal: 15,\r\n        marginBottom: 5,\r\n        fontSize: 16\r\n    },\r\n    success: {\r\n        width: '80%',\r\n        color: '#000',\r\n        marginBottom: 10,\r\n        fontSize: 16,\r\n        fontWeight: 'bold'\r\n    },\r\n    warning: {\r\n        width: '80%',\r\n        color: '#f00',\r\n        marginBottom: 10,\r\n        fontSize: 16,\r\n        fontWeight: 'bold'\r\n    },\r\n    button: {\r\n        width: '80%',\r\n        height: 50,\r\n        backgroundColor: '#fff',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 5,\r\n        marginBottom: 5\r\n    },\r\n    buttonText: {\r\n        color: '#00f',\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    },\r\n    linkText: {\r\n        color: '#00f',\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        marginVertical: 10\r\n    }\r\n});\r\n\r\nexport default ResetPasswordScreen;","import { View, Text, StyleSheet, Image, TouchableOpacity, ScrollView, TextInput } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { Link, useRouter } from 'expo-router';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst SettingsScreen = () => {\r\n  const [validating, setValidating] = useState(true);\r\n  const [token, setToken] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [profileImage, setProfileImage]: any = useState('');\r\n  const [serverCode, setServerCode] = useState('0');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const router = useRouter();\r\n  const server = 'chessmate-production.up.railway.app';\r\n  \r\n  const verifyToken = async () => {\r\n    let response;\r\n\r\n    try {\r\n      const token = await AsyncStorage.getItem('token');\r\n      response = await fetch('https://' + server + '/verify?token=' + token);\r\n      setValidating(false);\r\n    } catch (err) {\r\n      setValidating(false);\r\n\r\n      return;\r\n    }\r\n\r\n    response.json().then((code) => {\r\n      if (code.code === '1') {\r\n        router.push('login');\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (validating) {\r\n      verifyToken();\r\n    }\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    let tokenString = await AsyncStorage.getItem('token');\r\n    setToken(tokenString ? tokenString : '');\r\n    const dataResponse = await fetch('https://' + server + '/data?token=' + tokenString);\r\n    const data = await dataResponse.json();\r\n    const username = await data.message.username;\r\n    const profile_picture_url = await data.message.profile_picture_url;\r\n    setUsername(username);\r\n    const imageResponse = await fetch('https://' + server + '/' + profile_picture_url);\r\n    setImageUrl(imageResponse.url);\r\n    const description = await data.message.description;\r\n    setDescription(description);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!username) {\r\n      fetchData();\r\n    }\r\n  }, []);\r\n\r\n  const pickImage = async () => {\r\n    try {\r\n      const result = await ImagePicker.launchImageLibraryAsync({mediaTypes: 'images', allowsEditing: true, quality: 0.8, base64: true});\r\n\r\n      if (result.assets) {\r\n        setProfileImage(result.assets[0]);\r\n      }\r\n    } catch (error) {\r\n      alert('Invalid image!');\r\n    }\r\n  };\r\n\r\n  const uploadImage = async () => {\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      if (!profileImage.base64) {\r\n        setServerCode('1');\r\n      }\r\n  \r\n      let fileExt = 'jpg';\r\n\r\n      if (profileImage.uri) {\r\n        fileExt = profileImage.uri.split('/')[1].split(';')[0].toLowerCase();\r\n      }\r\n\r\n      const validTypes = ['jpg', 'jpeg', 'png'];\r\n\r\n      if (!validTypes.includes(fileExt)) {\r\n        setServerCode('1');\r\n      }\r\n  \r\n      const response = await fetch('https://' + server + '/update', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          token: token,\r\n          image: profileImage.base64,\r\n          filename: `image_${Date.now()}.${fileExt}`,\r\n          description\r\n        })\r\n      });\r\n  \r\n      const message = await response.json();\r\n  \r\n      if (response.ok) {\r\n        setServerCode(message.message);\r\n      } else {\r\n        setServerCode(message.error);\r\n      }\r\n    } catch (error) {\r\n      setServerCode('3');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Link href=\"profile\">\r\n          <View>\r\n            <Ionicons name=\"arrow-back\" size={24} color=\"#ccc\" />\r\n          </View>\r\n        </Link>\r\n\r\n        <Text style={styles.headerText}>Settings</Text>\r\n\r\n        <Link href=\"dashboard\">\r\n          <View>\r\n            <Ionicons name=\"menu\" size={24} color=\"#ccc\" />\r\n          </View>\r\n        </Link>\r\n      </View>\r\n\r\n      <View style={styles.profileSection}>\r\n        <TouchableOpacity onPress={pickImage}>\r\n          <Image source={profileImage ? profileImage : { uri: imageUrl }} style={styles.profileImage} />\r\n          <Ionicons name=\"camera\" size={24} color=\"#ccc\" style={styles.cameraIcon} />\r\n        </TouchableOpacity>\r\n\r\n        <Text style={styles.userName}>{username}</Text>\r\n      </View>\r\n\r\n      <View style={styles.inputContainer}>\r\n        <Text style={styles.label}>Description</Text>\r\n\r\n        <TextInput\r\n          style={styles.input}\r\n          multiline\r\n          numberOfLines={4}\r\n          value={description}\r\n          onChangeText={setDescription}\r\n        />\r\n      </View>\r\n\r\n      {(serverCode !== '0') && <Text style={styles.warning}>\r\n          {serverCode === '1' ? 'Invalid image.' : (serverCode === '2' ? 'Unable to save image.' : 'Unknown error.')}\r\n      </Text>}\r\n\r\n      <TouchableOpacity onPress={uploadImage} style={styles.saveButton} disabled={isLoading}>\r\n        <Text style={styles.saveButtonText}>{isLoading ? 'Saving...' : 'SAVE'}</Text>\r\n      </TouchableOpacity>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 16,\r\n    backgroundColor: '#444'\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 20\r\n  },\r\n  headerText: {\r\n    fontSize: 24,\r\n    color: '#fff',\r\n    fontWeight: 'bold'\r\n  },\r\n  profileSection: {\r\n    alignItems: 'center',\r\n    marginBottom: 20\r\n  },\r\n  profileImage: {\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 50,\r\n    marginBottom: 10\r\n  },\r\n  cameraIcon: {\r\n    position: 'absolute',\r\n    bottom: 10,\r\n    right: 10,\r\n    backgroundColor: '#0008',\r\n    borderRadius: 12,\r\n    padding: 4\r\n  },\r\n  userName: {\r\n    fontSize: 20,\r\n    color: '#fff',\r\n    fontWeight: 'bold'\r\n  },\r\n  inputContainer: {\r\n    marginBottom: 20\r\n  },\r\n  label: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    marginBottom: 8\r\n  },\r\n  input: {\r\n    backgroundColor: '#888',\r\n    borderRadius: 8,\r\n    padding: 16,\r\n    color: '#fff',\r\n    fontSize: 16\r\n  },\r\n  warning: {\r\n    width: '80%',\r\n    color: '#f00',\r\n    marginBottom: 10,\r\n    fontSize: 16,\r\n    fontWeight: 'bold'\r\n  },\r\n  saveButton: {\r\n    backgroundColor: '#00f',\r\n    borderRadius: 8,\r\n    padding: 16,\r\n    alignItems: 'center'\r\n  },\r\n  saveButtonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: 'bold'\r\n  }\r\n});\r\n\r\nexport default SettingsScreen;","import { View, Text, StyleSheet, Image, TouchableOpacity, ScrollView, FlatList } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport RNPickerSelect from 'react-native-picker-select';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { Link, useRouter } from 'expo-router';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst ProfileScreen = () => {\r\n  const [validating, setValidating] = useState(true);\r\n  const [token, setToken] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [rating, setRating] = useState({bullet: 0, blitz: 0, rapid: 0, classical: 0, all: 0});\r\n  const [games, setGames] = useState({\r\n    bulletWins: 0, bulletLosses: 0, bulletDraws: 0, bulletGames: 0,\r\n    blitzWins: 0, blitzLosses: 0, blitzDraws: 0, blitzGames: 0,\r\n    rapidWins: 0, rapidLosses: 0, rapidDraws: 0, rapidGames: 0,\r\n    classicalWins: 0, classicalLosses: 0, classicalDraws: 0, classicalGames: 0,\r\n    allWins: 0, allLosses: 0, allDraws: 0, allGames: 0\r\n  });\r\n  const [archivedGames, setArchivedGames] = useState([]);\r\n  // Dropdown stat states\r\n  const [showStats, setShowStats] = useState(true);\r\n  const [selectedValue, setSelectedValue] = useState(null);\r\n  const router = useRouter();\r\n  const server = 'chessmate-production.up.railway.app';\r\n  \r\n  const verifyToken = async () => {\r\n    let response;\r\n\r\n    try {\r\n      const token = await AsyncStorage.getItem('token');\r\n      response = await fetch('https://' + server + '/verify?token=' + token);\r\n      setValidating(false);\r\n    } catch (err) {\r\n      setValidating(false);\r\n\r\n      return;\r\n    }\r\n\r\n    response.json().then((code) => {\r\n      if (code.code === '1') {\r\n        router.push('login');\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (validating) {\r\n      verifyToken();\r\n    }\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    let tokenString = await AsyncStorage.getItem('token');\r\n    setToken(tokenString ? tokenString : '');\r\n    const dataResponse = await fetch('https://' + server + '/data?token=' + tokenString);\r\n    const data = await dataResponse.json();\r\n    const username = await data.message.username;\r\n    const profile_picture_url = await data.message.profile_picture_url;\r\n    setUsername(username);\r\n    const imageResponse = await fetch('https://' + server + '/' + profile_picture_url);\r\n    setImageUrl(imageResponse.url);\r\n    const description = await data.message.description;\r\n    setDescription(description);\r\n    const bullet_rating = await data.message.bullet_rating;\r\n    const blitz_rating = await data.message.blitz_rating;\r\n    const rapid_rating = await data.message.rapid_rating;\r\n    const classical_rating = await data.message.classical_rating;\r\n    setRating({bullet: bullet_rating, blitz: blitz_rating, rapid: rapid_rating, classical: classical_rating,\r\n      all: Math.round((bullet_rating + blitz_rating + rapid_rating + classical_rating) / 4)});\r\n    const bullet_wins = await data.message.bullet_wins;\r\n    const bullet_losses = await data.message.bullet_losses;\r\n    const bullet_draws = await data.message.bullet_draws;\r\n    const blitz_wins = await data.message.blitz_wins;\r\n    const blitz_losses = await data.message.blitz_losses;\r\n    const blitz_draws = await data.message.blitz_draws;\r\n    const rapid_wins = await data.message.rapid_wins;\r\n    const rapid_losses = await data.message.rapid_losses;\r\n    const rapid_draws = await data.message.rapid_draws;\r\n    const classical_wins = await data.message.classical_wins;\r\n    const classical_losses = await data.message.classical_losses;\r\n    const classical_draws = await data.message.classical_draws;\r\n    setGames({\r\n      bulletWins: bullet_wins, bulletLosses: bullet_losses, bulletDraws: bullet_draws,\r\n      bulletGames: bullet_wins + bullet_losses + bullet_draws,\r\n      blitzWins: blitz_wins, blitzLosses: blitz_losses, blitzDraws: blitz_draws,\r\n      blitzGames: blitz_wins + blitz_losses + blitz_draws,\r\n      rapidWins: rapid_wins, rapidLosses: rapid_losses, rapidDraws: rapid_draws,\r\n      rapidGames: rapid_wins + rapid_losses + rapid_draws,\r\n      classicalWins: classical_wins, classicalLosses: classical_losses, classicalDraws: classical_draws,\r\n      classicalGames: classical_wins + classical_losses + classical_draws,\r\n      allWins: bullet_wins + blitz_wins + rapid_wins + classical_wins,\r\n      allLosses: bullet_losses + blitz_losses + rapid_losses + classical_losses,\r\n      allDraws: bullet_draws + blitz_draws + rapid_draws + classical_draws,\r\n      allGames: bullet_wins + blitz_wins + rapid_wins + classical_wins +\r\n      bullet_losses + blitz_losses + rapid_losses + classical_losses +\r\n      bullet_draws + blitz_draws + rapid_draws + classical_draws\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!username) {\r\n      fetchData();\r\n    }\r\n  }, []);\r\n\r\n  const fetchArchives = async () => {\r\n    const response = await fetch('https://' + server + '/archives?token=' + token);\r\n\r\n    response.json().then((games) => {\r\n      games.sort((a: any, b: any) => b.completed_at.localeCompare(a.completed_at));\r\n      setArchivedGames(games);\r\n    });\r\n  }\r\n\r\n  const spectateGame = (gameId: string) => {\r\n    router.push(`archive?archive=${gameId}`);\r\n  };\r\n\r\n  // Dropdown item values\r\n  const dropdownItems = [\r\n    { label: 'Bullet', value: 'bullet' },\r\n    { label: 'Blitz', value: 'blitz' },\r\n    { label: 'Rapid', value: 'rapid' },\r\n    { label: 'Classical', value: 'classical' }\r\n  ];\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Link href=\"dashboard\">\r\n          <View>\r\n            <Ionicons name=\"arrow-back\" size={24} color=\"#ccc\" />\r\n          </View>\r\n        </Link>\r\n\r\n        <Text style={styles.headerText}>Profile</Text>\r\n\r\n        <Link href=\"settings\">\r\n          <View>\r\n            <Ionicons name=\"settings\" size={24} color=\"#ccc\" />\r\n          </View>\r\n        </Link>\r\n      </View>\r\n\r\n      <View style={styles.profileSection}>\r\n        <Image source={{ uri: imageUrl }} style={styles.profileImage} />\r\n        <Text style={styles.userName}>{username}</Text>\r\n      </View>\r\n\r\n      <Text style={styles.userDescription}>{description}</Text>\r\n\r\n      <View style={styles.buttonContainer}>\r\n        <TouchableOpacity style={styles.button} onPress={() => {setShowStats(true);}}>\r\n          <Text style={styles.buttonText}>Stats</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity style={styles.button} onPress={() => {fetchArchives(); setShowStats(false);}}>\r\n          <Text style={styles.buttonText}>Games</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {showStats ? (\r\n        <View style={styles.statContainer}>\r\n          <View style={styles.dropdownContainer}>\r\n            <RNPickerSelect\r\n              onValueChange={(value) => setSelectedValue(value)}\r\n              items={dropdownItems}\r\n              placeholder={{ label: 'All', value: 'all' }}\r\n            />\r\n          </View>\r\n\r\n          <View style={styles.statRow}>\r\n            <Text style={styles.statLabel}>Rating</Text>\r\n            <Text style={styles.statValue}>{\r\n              selectedValue === 'bullet' ? rating.bullet : (\r\n              selectedValue === 'blitz' ? rating.blitz : (\r\n              selectedValue === 'rapid' ? rating.rapid : (\r\n              selectedValue === 'classical' ? rating.classical : (\r\n              rating.all))))\r\n            }</Text>\r\n          </View>\r\n\r\n          <View style={styles.statRow}>\r\n            <Text style={styles.statLabel}>Games Played</Text>\r\n            <Text style={styles.statValue}>{\r\n              selectedValue === 'bullet' ? games.bulletGames : (\r\n              selectedValue === 'blitz' ? games.blitzGames : (\r\n              selectedValue === 'rapid' ? games.rapidGames : (\r\n              selectedValue === 'classical' ? games.classicalGames : (\r\n              games.allGames))))\r\n            }</Text>\r\n          </View>\r\n\r\n          <View style={styles.statRow}>\r\n            <Text style={styles.statLabel}>Wins</Text>\r\n            <Text style={styles.statValue}>{\r\n              selectedValue === 'bullet' ? games.bulletWins : (\r\n              selectedValue === 'blitz' ? games.blitzWins : (\r\n              selectedValue === 'rapid' ? games.rapidWins : (\r\n              selectedValue === 'classical' ? games.classicalWins : (\r\n              games.allWins))))\r\n            }</Text>\r\n          </View>\r\n\r\n          <View style={styles.statRow}>\r\n            <Text style={styles.statLabel}>Losses</Text>\r\n            <Text style={styles.statValue}>{\r\n              selectedValue === 'bullet' ? games.bulletLosses : (\r\n              selectedValue === 'blitz' ? games.blitzLosses : (\r\n              selectedValue === 'rapid' ? games.rapidLosses : (\r\n              selectedValue === 'classical' ? games.classicalLosses : (\r\n              games.allLosses))))\r\n            }</Text>\r\n          </View>\r\n\r\n          <View style={styles.statRow}>\r\n            <Text style={styles.statLabel}>Draws</Text>\r\n            <Text style={styles.statValue}>{\r\n              selectedValue === 'bullet' ? games.bulletDraws : (\r\n              selectedValue === 'blitz' ? games.blitzDraws : (\r\n              selectedValue === 'rapid' ? games.rapidDraws : (\r\n              selectedValue === 'classical' ? games.classicalDraws : (\r\n              games.allDraws))))\r\n            }</Text>\r\n          </View>\r\n\r\n          <View style={styles.statRow}>\r\n            <Text style={styles.statLabel}>Win Rate</Text>\r\n            <Text style={styles.statValue}>{\r\n              selectedValue === 'bullet' ? (Number(games.bulletGames) === 0 ? 0 : (Number(games.bulletWins) * 100 / Number(games.bulletGames)).toFixed(2)) : (\r\n              selectedValue === 'blitz' ? (Number(games.blitzGames) === 0 ? 0 : (Number(games.blitzWins) * 100 / Number(games.blitzGames)).toFixed(2)) : (\r\n              selectedValue === 'rapid' ? (Number(games.rapidGames) === 0 ? 0 : (Number(games.rapidWins) * 100 / Number(games.rapidGames)).toFixed(2)) : (\r\n              selectedValue === 'classical' ? (Number(games.classicalGames) === 0 ? 0 : (Number(games.classicalWins) * 100 / Number(games.classicalGames)).toFixed(2)) : (\r\n              Number(games.allGames) === 0 ? 0 : (Number(games.allWins) * 100 / Number(games.allGames)).toFixed(2)))))\r\n            }%</Text>\r\n          </View>\r\n        </View>\r\n      ) : (\r\n        <FlatList\r\n          data={archivedGames}\r\n          keyExtractor={(item: any) => item.id}\r\n          renderItem={({ item }) => (\r\n            <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n              <TouchableOpacity style={styles.gameItem} onPress={() => {spectateGame(item.id)}}>\r\n                <Text style={styles.gameText}>{item.user}</Text>\r\n                <Text style={styles.gameText}>{item.rating}</Text>\r\n                <Text style={styles.gameText}>{item.color}</Text>\r\n                <Text style={styles.gameText}>{item.starting_position === 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1' ? 'Standard' : 'Custom'}</Text>\r\n                <Text style={styles.gameText}>{item.time_control}</Text>\r\n                <Text style={styles.gameText}>{item.result === 'white' ? 'White\\u00A0won' : (item.result === 'black' ? 'Black\\u00A0won' : 'Draw')}</Text>\r\n                <Text style={styles.gameText}>{item.completed_at.substring(0, 10).replace('-', '\\u2011').replace('-', '\\u2011')}</Text>\r\n              </TouchableOpacity>\r\n            </ScrollView>\r\n          )}\r\n          ListEmptyComponent={ <Text style={styles.emptyText}>No games in the archive</Text> }\r\n        />\r\n      )}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    backgroundColor: '#444'\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 20\r\n  },\r\n  headerText: {\r\n    fontSize: 24,\r\n    color: '#fff',\r\n    fontWeight: 'bold'\r\n  },\r\n  profileSection: {\r\n    alignItems: 'center',\r\n    marginBottom: 20\r\n  },\r\n  profileImage: {\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 50,\r\n    marginBottom: 10\r\n  },\r\n  userName: {\r\n    fontSize: 20,\r\n    color: '#fff',\r\n    fontWeight: 'bold'\r\n  },\r\n  userDescription: {\r\n    fontSize: 16,\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    marginBottom: 20\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    backgroundColor: '#888',\r\n    borderRadius: 5,\r\n    marginBottom: 20\r\n  },\r\n  button: {\r\n    backgroundColor: '#ccc',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    marginHorizontal: 20,\r\n    borderRadius: 5\r\n  },\r\n  buttonText: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold'\r\n  },\r\n  statContainer: {\r\n    backgroundColor: '#888',\r\n    borderRadius: 8,\r\n    padding: 16\r\n  },\r\n  statRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 8\r\n  },\r\n  statLabel: {\r\n    fontSize: 16\r\n  },\r\n  statValue: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold'\r\n  },\r\n  dropdownContainer: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 8,\r\n    padding: 16,\r\n    marginBottom: 16,\r\n    alignItems: 'center'\r\n  },\r\n  gameItem: {\r\n    flexDirection: 'row',\r\n    padding: 10,\r\n    marginVertical: 5,\r\n    backgroundColor: '#ccc',\r\n    borderRadius: 5,\r\n    justifyContent: 'space-between'\r\n  },\r\n  gameText: {\r\n    backgroundColor: '#888',\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    margin: 5\r\n  },\r\n  emptyText: {\r\n    color: '#ccc',\r\n    textAlign: 'center',\r\n    marginVertical: 20\r\n  }\r\n});\r\n\r\nexport default ProfileScreen;","import { ScrollView, useWindowDimensions, View, Text, StyleSheet, Image } from 'react-native';\r\nimport { Link } from 'expo-router';\r\n\r\nconst server = 'chessmate-production.up.railway.app';\r\n\r\nconst NotFoundScreen = () => {\r\n  return (\r\n    <ScrollView>\r\n      <View style={[styles.container, { minHeight: useWindowDimensions().height }]}>\r\n        <Image source={{ uri: 'https://' + server + '/uploads/cm.png' }} style={styles.image} resizeMode=\"contain\"/>\r\n        <Text style={styles.title}>Oops! Page Not Found</Text>\r\n        <Text style={styles.subtitle}>The page you're looking for doesn't exist or has been moved.</Text>\r\n        \r\n        <Link href='login' style={styles.button}>\r\n          <Text style={styles.buttonText}>Go to Home</Text>\r\n        </Link>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    overflow: 'hidden',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n    backgroundColor: '#444'\r\n  },\r\n  image: {\r\n    width: 250,\r\n    height: 250,\r\n    marginBottom: 25\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    marginBottom: 15,\r\n    color: '#ccc',\r\n    textAlign: 'center'\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: '#ccc',\r\n    textAlign: 'center',\r\n    marginBottom: 30,\r\n    paddingHorizontal: 20\r\n  },\r\n  button: {\r\n    backgroundColor: '#00f',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 30,\r\n    borderRadius: 25,\r\n    marginBottom: 15,\r\n    textAlign: 'center',\r\n    width: '100%'\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontSize: 16\r\n  }\r\n});\r\n\r\nexport default NotFoundScreen;","import { ScrollView, useWindowDimensions, StyleSheet, Text, View, TextInput, TouchableOpacity, Image } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Link, useRouter } from 'expo-router';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst ForgotPasswordScreen = () => {\r\n    const [validating, setValidating] = useState(true);\r\n    const [email, setEmail] = useState('');\r\n    const [emailIsInvalid, setEmailIsInvalid] = useState(false);\r\n    const [serverCode, setServerCode] = useState('0');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const router = useRouter();\r\n    const server = 'chessmate-production.up.railway.app';\r\n\r\n    const verifyToken = async () => {\r\n        let response;\r\n\r\n        try {\r\n            const token = await AsyncStorage.getItem('token');\r\n            response = await fetch('https://' + server + '/verify?token=' + token);\r\n            setValidating(false);\r\n        } catch (err) {\r\n            setValidating(false);\r\n\r\n            return;\r\n        }\r\n\r\n        response.json().then((code) => {\r\n            if (code.code === '0') {\r\n                router.push('dashboard');\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (validating) {\r\n            verifyToken();\r\n        }\r\n    }, []);\r\n\r\n    const handleResetPassword = async () => {\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n        if (!emailRegex.test(email)) {\r\n            setEmailIsInvalid(true);\r\n            setServerCode('0');\r\n            return;\r\n        } else {\r\n            setEmailIsInvalid(false);\r\n        }\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await fetch('https://' + server + '/forgot', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ email })\r\n            });\r\n\r\n            if (response.ok) {\r\n                router.push({ pathname: 'reset', params: { email } });\r\n            } else {\r\n                const error = await response.json();\r\n                setServerCode(error.error);\r\n            }\r\n        } catch (error) {\r\n            setServerCode('2');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ScrollView>\r\n            <View style={[styles.container, { minHeight: useWindowDimensions().height }]}>\r\n                <Text style={styles.title}>ChessMate</Text>\r\n                <Image source={{ uri: 'https://' + server + '/uploads/cm.png' }} style={styles.profileImage} />\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"EMAIL\"\r\n                    placeholderTextColor=\"#bbb\"\r\n                    value={email}\r\n                    onChangeText={setEmail}\r\n                    keyboardType=\"email-address\"\r\n                />\r\n\r\n                {emailIsInvalid && <Text style={styles.warning}>\r\n                    Invalid email address.\r\n                </Text>}\r\n\r\n                <TouchableOpacity style={styles.button} onPress={handleResetPassword} disabled={isLoading}>\r\n                    <Text style={styles.buttonText}>\r\n                        {isLoading ? 'Sending...' : 'RESET PASSWORD'}\r\n                    </Text>\r\n                </TouchableOpacity>\r\n\r\n                {(serverCode !== '0') && <Text style={styles.warning}>\r\n                    {serverCode === '1' ? 'We don\\'t have a record of this email on our database.' : 'Unknown error.'}\r\n                </Text>}\r\n\r\n                <Link href=\"login\" style={styles.linkText}>\r\n                    <Text style={styles.linkText}>Back to Login</Text>\r\n                </Link>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        overflow: 'hidden',\r\n        backgroundColor: '#444'\r\n    },\r\n    title: {\r\n        fontSize: 32,\r\n        fontWeight: 'bold',\r\n        marginBottom: 40,\r\n        color: '#fff'\r\n    },\r\n    profileImage: {\r\n        width: 200,\r\n        height: 200,\r\n        borderRadius: 50,\r\n        marginBottom: 10\r\n    },\r\n    input: {\r\n        width: '80%',\r\n        height: 50,\r\n        backgroundColor: '#444',\r\n        color: '#ccc',\r\n        borderColor: '#ccc',\r\n        borderWidth: 2,\r\n        borderRadius: 2,\r\n        paddingHorizontal: 15,\r\n        marginBottom: 5,\r\n        fontSize: 16\r\n    },\r\n    warning: {\r\n        width: '80%',\r\n        color: '#f00',\r\n        marginBottom: 10,\r\n        fontSize: 16,\r\n        fontWeight: 'bold'\r\n    },\r\n    button: {\r\n        width: '80%',\r\n        height: 50,\r\n        backgroundColor: '#fff',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 5,\r\n        marginBottom: 5\r\n    },\r\n    buttonText: {\r\n        color: '#00f',\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    },\r\n    linkText: {\r\n        color: '#00f',\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        marginVertical: 10\r\n    }\r\n});\r\n\r\nexport default ForgotPasswordScreen;","import { View, Text, TextInput, TouchableOpacity, StyleSheet, ScrollView, useWindowDimensions, Image, Modal, FlatList } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport Slider from '@react-native-community/slider';\r\nimport { Link, useRouter } from 'expo-router';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst DashboardScreen = () => {\r\n  const [validating, setValidating] = useState(true);\r\n  const [username, setUsername] = useState('');\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [rating, setRating] = useState({bullet: 0, blitz: 0, rapid: 0, classical: 0});\r\n  const [showGameModal, setShowGameModal] = useState(false);\r\n  const [time, setTime] = useState('');\r\n  const [mode, setMode] = useState('');\r\n  const [activeGames, setActiveGames] = useState([]);\r\n  const [gameType, setGameType] = useState('player');\r\n  const [position, setPosition] = useState('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR');\r\n  const [invalid, setInvalid] = useState(false);\r\n  const [playerColor, setPlayerColor] = useState('random');\r\n  const [difficulty, setDifficulty] = useState(5);\r\n  const [positionType, setPositionType] = useState('standard');\r\n  const router = useRouter();\r\n  const server = 'chessmate-production.up.railway.app';\r\n  let token;\r\n\r\n  const verifyToken = async () => {\r\n    let response;\r\n\r\n    try {\r\n      const token = await AsyncStorage.getItem('token');\r\n      response = await fetch('https://' + server + '/verify?token=' + token);\r\n      setValidating(false);\r\n    } catch (err) {\r\n      setValidating(false);\r\n\r\n      return;\r\n    }\r\n\r\n    response.json().then((code) => {\r\n      if (code.code === '1') {\r\n        setShowGameModal(false);\r\n        router.push('login');\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (validating) {\r\n      verifyToken();\r\n    }\r\n  }, []);\r\n\r\n  const logoff = async () => {\r\n    await AsyncStorage.setItem('token', '');\r\n    setShowGameModal(false);\r\n    router.push('login');\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    token = await AsyncStorage.getItem('token');\r\n    const dataResponse = await fetch('https://' + server + '/data?token=' + token);\r\n    const data = await dataResponse.json();\r\n    const username = await data.message.username;\r\n    const profile_picture_url = await data.message.profile_picture_url;\r\n    setUsername(username);\r\n    const imageResponse = await fetch('https://' + server + '/' + profile_picture_url);\r\n    setImageUrl(imageResponse.url);\r\n    const bullet_rating = await data.message.bullet_rating;\r\n    const blitz_rating = await data.message.blitz_rating;\r\n    const rapid_rating = await data.message.rapid_rating;\r\n    const classical_rating = await data.message.classical_rating;\r\n    setRating({bullet: bullet_rating, blitz: blitz_rating, rapid: rapid_rating, classical: classical_rating});\r\n  }\r\n\r\n  const fetchActiveGames = async () => {\r\n    try {\r\n      const response = await fetch('https://' + server + '/games?mode=' + mode);\r\n      const games = await response.json();\r\n      setActiveGames(games);\r\n    } catch (error) {\r\n      console.error('Error fetching active games: ' + error);\r\n    }\r\n  };\r\n\r\n  const createNewGame = async () => {\r\n    try {\r\n      const response = await fetch('https://' + server + '/create', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ position: (positionType === 'standard' ? 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR' : position),\r\n          type: gameType, timeControl: time, gameMode: mode, difficulty: difficulty })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        setInvalid(true);\r\n        return;\r\n      }\r\n      \r\n      const gameId = await response.json();\r\n      setShowGameModal(false);\r\n      router.push(`game?gameId=${gameId}&color=${playerColor}&name=${username}&image=${imageUrl}&rating=${\r\n        mode === 'bullet' ? rating.bullet : (mode === 'blitz' ? rating.blitz : (mode === 'rapid' ? rating.rapid : rating.classical))}`);\r\n    } catch (error) {\r\n      console.error('Error creating new game: ' + error);\r\n    }\r\n  };\r\n\r\n  const joinGame = (gameId: string) => {\r\n    setShowGameModal(false);\r\n    router.push(`game?gameId=${gameId}&color=${playerColor}&name=${username}&image=${imageUrl}&rating=${\r\n      mode === 'bullet' ? rating.bullet : (mode === 'blitz' ? rating.blitz : (mode === 'rapid' ? rating.rapid : rating.classical))}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!username) {\r\n      fetchData();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (showGameModal) {\r\n      fetchActiveGames();\r\n    }\r\n  }, [showGameModal]);\r\n\r\n  const openGameModal = (time: string, mode: string) => {\r\n    setTime(time);\r\n    setMode(mode);\r\n    setShowGameModal(true);\r\n  };\r\n\r\n  const getDifficultyLabel = (level: number) => {\r\n    if (level <= 3) return 'Beginner';\r\n    if (level <= 6) return 'Intermediate';\r\n    if (level <= 9) return 'Advanced';\r\n    if (level <= 12) return 'Master';\r\n    if (level <= 15) return 'Grandmaster';\r\n    return 'Impossible';\r\n  };\r\n\r\n  const GameModal = () => (\r\n    <Modal\r\n      animationType=\"fade\"\r\n      transparent={true}\r\n      visible={showGameModal}\r\n      onRequestClose={() => setShowGameModal(false)}\r\n    >\r\n      <ScrollView>\r\n        <View style={[styles.modalContainer, { minHeight: useWindowDimensions().height }]}>\r\n          <View style={styles.modalContent}>\r\n            <Text style={styles.modalTitle}>Game Options</Text>\r\n            <Text style={styles.sectionHeader}>Game Type</Text>\r\n\r\n            <View style={styles.optionRow}>\r\n              <TouchableOpacity \r\n                style={[styles.optionButton, gameType === 'player' && styles.selectedOption]}\r\n                onPress={() => setGameType('player')}\r\n              >\r\n                <Text style={styles.optionText}>Play vs Player</Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity \r\n                style={[styles.optionButton, gameType === 'ai' && styles.selectedOption]}\r\n                onPress={() => setGameType('ai')}\r\n              >\r\n                <Text style={styles.optionText}>Play vs AI</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n\r\n            <Text style={styles.sectionHeader}>Your Color</Text>\r\n\r\n            <View style={styles.optionRow}>\r\n              <TouchableOpacity \r\n                style={[styles.optionButton, playerColor === 'white' && styles.selectedOption]}\r\n                onPress={() => setPlayerColor('white')}\r\n              >\r\n                <Text style={styles.optionText}>White</Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity \r\n                style={[styles.optionButton, playerColor === 'black' && styles.selectedOption]}\r\n                onPress={() => setPlayerColor('black')}\r\n              >\r\n                <Text style={styles.optionText}>Black</Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity \r\n                style={[styles.optionButton, playerColor === 'random' && styles.selectedOption]}\r\n                onPress={() => setPlayerColor('random')}\r\n              >\r\n                <Text style={styles.optionText}>Random</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n\r\n            <Text style={styles.sectionHeader}>{gameType === 'player' ? 'Active Games' : 'AI Difficulty'}</Text>\r\n\r\n            {gameType === 'player' ? (\r\n              <FlatList\r\n                data={activeGames}\r\n                keyExtractor={(item: any) => item.id}\r\n                renderItem={({ item }) => (\r\n                  <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n                    <TouchableOpacity style={styles.gameItem} onPress={() => joinGame(item.id)}>\r\n                      <Text style={styles.gameText}>{item.opponent}</Text>\r\n                      <Text style={styles.gameText}>{item.rating}</Text>\r\n                      <Text style={styles.gameText}>{item.position}</Text>\r\n                      <Text style={styles.gameText}>{item.time}</Text>\r\n                      <Text style={styles.gameText}>{item.color}</Text>\r\n                    </TouchableOpacity>\r\n                  </ScrollView>\r\n                )}\r\n                ListEmptyComponent={\r\n                  <Text style={styles.emptyText}>No games to join</Text>\r\n                }\r\n              />\r\n            ) : (\r\n              <View>\r\n                <Slider\r\n                  minimumValue={0}\r\n                  maximumValue={20}\r\n                  step={1}\r\n                  value={difficulty}\r\n                  onValueChange={setDifficulty}\r\n                  minimumTrackTintColor='#00f'\r\n                  maximumTrackTintColor='#888'\r\n                />\r\n\r\n                <Text style={styles.difficultyText}>\r\n                  Level: {difficulty} ({getDifficultyLabel(difficulty)})\r\n                </Text>\r\n              </View>\r\n            )}\r\n\r\n            {positionType === 'custom' && invalid && <Text style={styles.warning}>Your fen string is invalid!</Text>}\r\n\r\n            <View style={styles.modalButtons}>\r\n              <TouchableOpacity \r\n                style={styles.createButton}\r\n                onPress={createNewGame}\r\n              >\r\n                <Text style={styles.buttonText}>Create a game</Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity \r\n                style={styles.cancelButton}\r\n                onPress={() => {setShowGameModal(false); setInvalid(false)}}\r\n              >\r\n                <Text style={styles.buttonText}>Cancel</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </Modal>\r\n  );\r\n\r\n  const ModeButton = ({ time, label }: any) => (\r\n    <TouchableOpacity \r\n      style={styles.modeButton}\r\n      onPress={() => openGameModal(time, label)}\r\n    >\r\n      <Text style={styles.modeText}>{time}</Text>\r\n      <Text style={styles.modeLabel}>{label}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  return (\r\n    <ScrollView>\r\n      <View style={[styles.container, { minHeight: useWindowDimensions().height }]}>\r\n        <View style={styles.header}>\r\n          <TouchableOpacity onPress={() => logoff()}>\r\n            <View style={styles.profileSection}>\r\n              <Text style={styles.menuText}>Logout</Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n\r\n          <Text style={styles.title}>ChessMate</Text>\r\n\r\n          <Link href=\"profile\">\r\n            <View style={styles.profileSection}>\r\n              <Image source={{ uri: imageUrl }} style={styles.profile} />\r\n              <Text style={styles.menuText}>{username}</Text>\r\n            </View>\r\n          </Link>\r\n        </View>\r\n\r\n        <Text style={styles.fenLabel}>Starting Position {'('}fen notation{')'}</Text>\r\n\r\n        <View style={styles.optionRow}>\r\n          <TouchableOpacity \r\n            style={[styles.optionButton, positionType === 'standard' && styles.selectedOption]}\r\n            onPress={() => setPositionType('standard')}\r\n          >\r\n            <Text style={styles.optionText}>Standard</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity \r\n            style={[styles.optionButton, positionType === 'custom' && styles.selectedOption]}\r\n            onPress={() => setPositionType('custom')}\r\n          >\r\n            <Text style={styles.optionText}>Custom</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        {positionType === 'custom' && <View style={styles.optionRow}>\r\n          <TextInput\r\n            style={styles.position}\r\n            value={position}\r\n            onChangeText={setPosition}\r\n          />\r\n        </View>}\r\n\r\n        <Text style={styles.sectionTitle}>Select Chess Mode to Play</Text>\r\n\r\n        <View style={styles.modeRow}>\r\n          <View style={styles.link}>\r\n            <ModeButton time=\"1+0\" label=\"Bullet\" />\r\n          </View>\r\n\r\n          <View style={styles.link}>\r\n            <ModeButton time=\"2+1\" label=\"Bullet\" />\r\n          </View>\r\n\r\n          <View style={styles.link}>\r\n            <ModeButton time=\"3+0\" label=\"Bullet\" />\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.modeRow}>\r\n          <View style={styles.link}>\r\n            <ModeButton time=\"3+2\" label=\"Blitz\" />\r\n          </View>\r\n\r\n          <View style={styles.link}>\r\n            <ModeButton time=\"5+0\" label=\"Blitz\" />\r\n          </View>\r\n          \r\n          <View style={styles.link}>\r\n            <ModeButton time=\"5+3\" label=\"Blitz\" />\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.modeRow}>\r\n          <View style={styles.link}>\r\n            <ModeButton time=\"10+0\" label=\"Rapid\" />\r\n          </View>\r\n\r\n          <View style={styles.link}>\r\n            <ModeButton time=\"10+5\" label=\"Rapid\" />\r\n          </View>\r\n          \r\n          <View style={styles.link}>\r\n            <ModeButton time=\"15+0\" label=\"Rapid\" />\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.modeRow}>\r\n          <View style={styles.link}>\r\n            <ModeButton time=\"15+10\" label=\"Classical\" />\r\n          </View>\r\n\r\n          <View style={styles.link}>\r\n            <ModeButton time=\"30+0\" label=\"Classical\" />\r\n          </View>\r\n          \r\n          <View style={styles.link}>\r\n            <ModeButton time=\"30+20\" label=\"Classical\" />\r\n          </View>\r\n        </View>\r\n\r\n        <GameModal />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    backgroundColor: '#444'\r\n  },\r\n  header: {\r\n    overflow: 'hidden',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginTop: 32,\r\n    marginBottom: 16,\r\n    borderRadius: 4,\r\n    backgroundColor: '#888'\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#fff'\r\n  },\r\n  profileSection: {\r\n    flexShrink: 1,\r\n    overflow: 'hidden',\r\n    flexDirection: 'row',\r\n    padding: 8,\r\n    borderRadius: 4,\r\n    backgroundColor: '#000'\r\n  },\r\n  profile: {\r\n    width: 20,\r\n    height: 20,\r\n    borderRadius: 20,\r\n    marginRight: 5\r\n  },\r\n  menuText: {\r\n    color: '#fff',\r\n    fontSize: 16\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    marginBottom: 16\r\n  },\r\n  modeRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 8\r\n  },\r\n  link: {\r\n    flex: 1\r\n  },\r\n  modeButton: {\r\n    padding: 16,\r\n    backgroundColor: '#888',\r\n    borderRadius: 4,\r\n    marginHorizontal: 4,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  modeText: {\r\n    fontSize: 16,\r\n    color: '#fff'\r\n  },\r\n  modeLabel: {\r\n    fontSize: 14,\r\n    color: '#fff'\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#0008'\r\n  },\r\n  modalContent: {\r\n    width: '80%',\r\n    backgroundColor: '#444',\r\n    borderRadius: 10,\r\n    padding: 20\r\n  },\r\n  modalTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    marginBottom: 20,\r\n    textAlign: 'center'\r\n  },\r\n  position: {\r\n    width: '100%',\r\n    backgroundColor: '#888',\r\n    borderRadius: 8,\r\n    padding: 16,\r\n    color: '#fff',\r\n    fontSize: 16\r\n  },\r\n  warning: {\r\n    width: '80%',\r\n    color: '#f00',\r\n    marginBottom: 10,\r\n    fontSize: 16,\r\n    fontWeight: 'bold'\r\n  },\r\n  fenLabel: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    marginTop: 15,\r\n    marginBottom: 10\r\n  },\r\n  sectionHeader: {\r\n    fontSize: 16,\r\n    color: '#fff',\r\n    marginTop: 15,\r\n    marginBottom: 10\r\n  },\r\n  optionRow: {\r\n    flexDirection: 'row',\r\n    marginBottom: 10\r\n  },\r\n  optionButton: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginHorizontal: 5,\r\n    borderRadius: 5,\r\n    backgroundColor: '#888',\r\n    alignItems: 'center'\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: '#00f'\r\n  },\r\n  optionText: {\r\n    color: '#fff'\r\n  },\r\n  gameItem: {\r\n    flexDirection: 'row',\r\n    padding: 10,\r\n    marginVertical: 5,\r\n    backgroundColor: '#ccc',\r\n    borderRadius: 5,\r\n    justifyContent: 'space-between'\r\n  },\r\n  gameText: {\r\n    backgroundColor: '#888',\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    margin: 5\r\n  },\r\n  emptyText: {\r\n    color: '#ccc',\r\n    textAlign: 'center',\r\n    marginVertical: 20\r\n  },\r\n  modalButtons: {\r\n    flexDirection: 'row',\r\n    marginTop: 20\r\n  },\r\n  createButton: {\r\n    flex: 1,\r\n    padding: 10,\r\n    backgroundColor: '#00f',\r\n    borderRadius: 5,\r\n    marginRight: 10,\r\n    alignItems: 'center'\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    padding: 10,\r\n    backgroundColor: '#888',\r\n    borderRadius: 5,\r\n    alignItems: 'center'\r\n  },\r\n  buttonText: {\r\n    color: '#fff'\r\n  },\r\n  difficultyText: {\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n    marginTop: 8,\r\n    fontSize: 16\r\n  }\r\n});\r\n\r\nexport default DashboardScreen;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/chessmate_web/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [308], () => (__webpack_require__(1697)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","styles","StyleSheet","create","container","flex","justifyContent","alignItems","overflow","backgroundColor","title","fontSize","fontWeight","marginBottom","color","profileImage","width","height","borderRadius","input","borderColor","borderWidth","paddingHorizontal","warning","button","buttonText","linkText","marginVertical","LoginScreen","validating","setValidating","useState","username","setUsername","password","setPassword","isValid","setIsValid","serverCode","setServerCode","isLoading","setIsLoading","router","useRouter","server","useEffect","async","response","token","AsyncStorage","getItem","fetch","err","json","then","push","verifyToken","_jsx","ScrollView","children","_jsxs","View","style","minHeight","useWindowDimensions","Text","Image","source","uri","TextInput","placeholder","placeholderTextColor","value","onChangeText","secureTextEntry","TouchableOpacity","onPress","valid","invalid","test","method","headers","body","JSON","stringify","ok","data","setItem","message","error","disabled","Link","href","pieces","whiteKeys","blackKeys","initialBoard","isSquareUnderAttack","row","col","boardState","isWhite","epFlags","castleFlags","r","c","piece","includes","getLegalMoves","some","move","capture","check","moves","toUpperCase","isWithinBoard","canMoveTo","targetPiece","toLowerCase","addMove","direction","startRow","start","target","from","to","Math","abs","forEach","i","whiteKingside","blackKingside","whiteQueenside","blackQueenside","legalMoves","filter","newBoard","simulateMove","isInCheck","king","kingRow","kingCol","ChessBoard","React","boardSize","onSquarePress","selectedPiece","fliped","squareSize","rotateCoordinates","Svg","renderSquares","squares","useMemo","displayRow","displayCol","x","y","startColor","targetColor","isLegalMove","Rect","fill","renderPieces","pieceComponents","position","left","top","renderTouchableOverlay","touchables","PromotionMenu","onSelect","promotionPieces","promotionMenu","transform","translateX","translateY","promotionOption","topBar","flexDirection","marginTop","backArrow","flipBoard","topCenter","topRight","profilePicture","timer","moveIndicator","userInfo","rating","boardWithLabelsContainer","rankLabelsContainer","marginHorizontal","rankLabel","fileLabelsContainer","fileLabel","textAlign","bottomBar","bottomLeft","bottomCenter","buttonContainer","paddingVertical","capturedPiecesContainer","capturedWhite","capturedBlack","chatContainer","bottom","right","padding","chatMessage","chatInputContainer","chatInput","marginRight","sendButton","gameOverText","GameScreen","params","useLocalSearchParams","gameId","playerColor","playerName","name","playerImage","image","playerRating","whiteUsername","setWhiteUsername","whiteImageUrl","setWhiteImageUrl","whiteRating","setWhiteRating","blackUsername","setBlackUsername","blackImageUrl","setBlackImageUrl","blackRating","setBlackRating","files","ranks","reverse","setBoardState","setSelectedPiece","promotionSquare","setPromotionSquare","setCapturedWhite","setCapturedBlack","isWhiteTurn","setIsWhiteTurn","setEpFlags","setCastleFlags","setColor","setFlip","ws","setWs","whiteTimer","setWhiteTimer","blackTimer","setBlackTimer","result","setResult","chatMessages","setChatMessages","setChatInput","isChatVisible","setIsChatVisible","navigation","useNavigation","setImage","url","white","imageResponse","websocket","WebSocket","onopen","console","log","onmessage","parse","type","whiteName","whiteImage","blackName","blackImage","gameState","board","currentTurn","lastMoveStart","lastMoveTarget","winner","prevMessages","onclose","onerror","unsubscribe","addListener","close","handleMove","promotion","send","renderCapturedPieces","capturedPieces","pieceHeight","pieceWidth","index","responsiveFontSize","size","scale","min","max","buttonWidth","formatTime","seconds","remainingSeconds","floor","MaterialIcons","file","length","rank","handleSquarePress","promotionRow","handleOfferDraw","handleResign","toggleChat","msg","handleSendMessage","trim","analysisIndicator","analyseButton","archive","archivedGame","setArchivedGame","analysis","setAnalysis","bestmove","evaluation","analysing","setAnalysing","currMove","setCurrMove","fen","setFen","setPosition","split","gameResponse","game","whitePlayerId","white_player","whitePlayerResponse","whitePlayer","blackPlayerId","black_player","blackPlayerResponse","blackPlayer","whiteProfile","profile_picture_url","blackProfile","timeControl","time_control","whiteBulletRating","bullet_rating","blackBulletRating","whiteBlitzRating","blitz_rating","blackBlitzRating","whiteRapidRating","rapid_rating","blackRapidRating","whiteClassicalRating","classical_rating","blackClassicalRating","starting_position","fetchData","item","fetchArchive","uci","join","handleStart","handlePrev","handleNext","handleEnd","subtitle","NotFoundScreen","resizeMode","unstable_settings","initialRouteName","Layout","Stack","screenOptions","headerShown","basePath","Main","replace","success","RegisterScreen","email","setEmail","confirmPassword","setConfirmPassword","keyboardType","ResetPasswordScreen","resetCode","setResetCode","newPassword","setNewPassword","header","headerText","profileSection","cameraIcon","userName","inputContainer","label","saveButton","saveButtonText","SettingsScreen","setToken","imageUrl","setImageUrl","description","setDescription","setProfileImage","tokenString","dataResponse","Ionicons","ImagePicker","mediaTypes","allowsEditing","quality","base64","assets","alert","multiline","numberOfLines","fileExt","filename","Date","now","userDescription","statContainer","statRow","statLabel","statValue","dropdownContainer","gameItem","gameText","margin","emptyText","ProfileScreen","setRating","bullet","blitz","rapid","classical","all","games","setGames","bulletWins","bulletLosses","bulletDraws","bulletGames","blitzWins","blitzLosses","blitzDraws","blitzGames","rapidWins","rapidLosses","rapidDraws","rapidGames","classicalWins","classicalLosses","classicalDraws","classicalGames","allWins","allLosses","allDraws","allGames","archivedGames","setArchivedGames","showStats","setShowStats","selectedValue","setSelectedValue","round","bullet_wins","bullet_losses","bullet_draws","blitz_wins","blitz_losses","blitz_draws","rapid_wins","rapid_losses","rapid_draws","classical_wins","classical_losses","classical_draws","sort","a","b","completed_at","localeCompare","fetchArchives","RNPickerSelect","onValueChange","items","Number","toFixed","FlatList","keyExtractor","renderItem","horizontal","showsHorizontalScrollIndicator","user","substring","ListEmptyComponent","ForgotPasswordScreen","emailIsInvalid","setEmailIsInvalid","pathname","flexShrink","profile","menuText","sectionTitle","modeRow","link","modeButton","modeText","modeLabel","modalContainer","modalContent","modalTitle","fenLabel","sectionHeader","optionRow","optionButton","selectedOption","optionText","modalButtons","createButton","cancelButton","difficultyText","DashboardScreen","showGameModal","setShowGameModal","time","setTime","mode","setMode","activeGames","setActiveGames","gameType","setGameType","setInvalid","setPlayerColor","difficulty","setDifficulty","positionType","setPositionType","createNewGame","gameMode","fetchActiveGames","ModeButton","openGameModal","logoff","GameModal","Modal","animationType","transparent","visible","onRequestClose","joinGame","opponent","Slider","minimumValue","maximumValue","step","minimumTrackTintColor","maximumTrackTintColor","level","__webpack_module_cache__","moduleId","cachedModule","undefined","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","key","splice","n","getter","__esModule","d","definition","defineProperty","enumerable","get","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}