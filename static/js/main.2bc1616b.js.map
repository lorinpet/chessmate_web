{"version":3,"file":"static/js/main.2bc1616b.js","mappings":"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","sources":["app|sync|/^(?:/)(?%21(?:(?:(?:.*/+api)%7C(?:/+(html%7Cnative-intent))))/.[tj]sx?$).*(?:/.android%7C/.ios%7C/.native)?/.[tj]sx?$","app/(tabs)/login.tsx","app/(tabs)/game.tsx","app/(tabs)/archive.tsx","app/(tabs)/404.tsx","app/_layout.tsx","app/index.tsx","app/(tabs)/register.tsx","app/(tabs)/reset.tsx","app/(tabs)/settings.tsx","app/(tabs)/profile.tsx","app/+not-found.tsx","app/(tabs)/forgot.tsx","app/(tabs)/dashboard.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["var map = {\n\t\"./(tabs)/404.tsx\": 3296,\n\t\"./(tabs)/archive.tsx\": 2782,\n\t\"./(tabs)/dashboard.tsx\": 9140,\n\t\"./(tabs)/forgot.tsx\": 9099,\n\t\"./(tabs)/game.tsx\": 2608,\n\t\"./(tabs)/login.tsx\": 1739,\n\t\"./(tabs)/profile.tsx\": 8415,\n\t\"./(tabs)/register.tsx\": 5445,\n\t\"./(tabs)/reset.tsx\": 7353,\n\t\"./(tabs)/settings.tsx\": 7901,\n\t\"./+not-found.tsx\": 8973,\n\t\"./_layout.tsx\": 5111,\n\t\"./index.tsx\": 5250\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 685;","import { ScrollView, useWindowDimensions, StyleSheet, Text, View, TextInput, TouchableOpacity, Image } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Link, useRouter, usePathname } from 'expo-router';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst LoginScreen = () => {\r\n    const [validating, setValidating] = useState(true);\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isValid, setIsValid] = useState({username: false, password: false});\r\n    const [serverCode, setServerCode] = useState('0');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const router = useRouter();\r\n    const pathname = usePathname();\r\n    const server = 'chessmate-production.up.railway.app';\r\n\r\n    const verifyToken = async () => {\r\n        let response;\r\n\r\n        try {\r\n            const token = await AsyncStorage.getItem('token');\r\n            response = await fetch('https://' + server + '/verify?token=' + token);\r\n            setValidating(false);\r\n        } catch (err) {\r\n            setValidating(false);\r\n\r\n            return;\r\n        }\r\n\r\n        response.json().then((code) => {\r\n            if (code.code === '0') {\r\n                router.push('dashboard');\r\n            } else if (pathname === '/chessmate_web') {\r\n                router.push('login');\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (validating) {\r\n            verifyToken();\r\n        }\r\n    }, []);\r\n\r\n    const handleLogin = async () => {\r\n        const valid = {username: false, password: false};\r\n        let invalid = false;\r\n        const usernameRegex = /^[A-Za-z][A-Za-z0-9_]{2,14}$/;\r\n\r\n        if (!usernameRegex.test(username)) {\r\n            valid.username = true;\r\n            setServerCode('0');\r\n            invalid = true;\r\n        }\r\n\r\n        const passwordRegex = /^[A-Za-z0-9_]{8,32}$/;\r\n\r\n        if (!passwordRegex.test(password)) {\r\n            valid.password = true;\r\n            setServerCode('0');\r\n            invalid = true;\r\n        }\r\n\r\n        setIsValid(valid);\r\n\r\n        if (invalid) return;\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await fetch('https://' + server + '/login', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ username, password }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                await AsyncStorage.setItem('token', data.message);\r\n                router.push('dashboard');\r\n            } else {\r\n                const error = await response.json();\r\n                setServerCode(error.error);\r\n            }\r\n        } catch (error) {\r\n            setServerCode('4');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ScrollView>\r\n            <View style={[styles.container, { minHeight: useWindowDimensions().height }]}>\r\n                <Text style={styles.title}>ChessMate</Text>\r\n                <Image source={require('../../pieces/cm.png')} style={styles.profileImage} />\r\n                \r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"USERNAME\"\r\n                    placeholderTextColor=\"#bbb\"\r\n                    value={username}\r\n                    onChangeText={setUsername}\r\n                />\r\n\r\n                {isValid.username && <Text style={styles.warning}>\r\n                    Invalid username.\r\n                </Text>}\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"PASSWORD\"\r\n                    placeholderTextColor=\"#bbb\"\r\n                    value={password}\r\n                    onChangeText={setPassword}\r\n                    secureTextEntry={true}\r\n                />\r\n\r\n                {isValid.password && <Text style={styles.warning}>\r\n                    Invalid password.\r\n                </Text>}\r\n\r\n                <TouchableOpacity style={styles.button} onPress={handleLogin} disabled={isLoading}>\r\n                    <Text style={styles.buttonText}>{isLoading ? 'Logging in...' : 'LOGIN'}</Text>\r\n                </TouchableOpacity>\r\n\r\n                {(serverCode !== '0') && <Text style={styles.warning}>\r\n                    {serverCode === '1' ? 'Account not confirmed by email yet.' : (serverCode === '2' ? 'Wrong password.' : (serverCode === '3' ? 'User doesn\\'t exist.' : 'Unknown error.'))}\r\n                </Text>}\r\n\r\n                <Link href=\"forgot\" style={styles.linkText}>\r\n                    <Text style={styles.linkText}>Forgot password?</Text>\r\n                </Link>\r\n\r\n                <Link href=\"register\" style={styles.linkText}>\r\n                    <Text style={styles.linkText}>Don't have an account yet? Register.</Text>\r\n                </Link>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        overflow: 'hidden',\r\n        backgroundColor: '#444'\r\n    },\r\n    title: {\r\n        fontSize: 32,\r\n        fontWeight: 'bold',\r\n        marginBottom: 10,\r\n        color: '#fff'\r\n    },\r\n    profileImage: {\r\n        width: 200,\r\n        height: 200,\r\n        borderRadius: 50,\r\n        marginBottom: 10\r\n    },\r\n    input: {\r\n        width: '80%',\r\n        height: 50,\r\n        backgroundColor: '#444',\r\n        color: '#ccc',\r\n        borderColor: '#ccc',\r\n        borderWidth: 2,\r\n        borderRadius: 2,\r\n        paddingHorizontal: 15,\r\n        marginBottom: 5,\r\n        fontSize: 18\r\n    },\r\n    warning: {\r\n        width: '80%',\r\n        color: '#f00',\r\n        marginBottom: 10,\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    },\r\n    button: {\r\n        width: '80%',\r\n        height: 50,\r\n        backgroundColor: '#fff',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 5,\r\n        marginBottom: 5\r\n    },\r\n    buttonText: {\r\n        color: '#08f',\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    },\r\n    linkText: {\r\n        color: '#08f',\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        marginVertical: 10\r\n    }\r\n});\r\n\r\nexport default LoginScreen;","import { View, Text, StyleSheet, useWindowDimensions, ScrollView, TouchableOpacity, Image, TextInput, Pressable, Platform } from 'react-native';\r\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Link, useRouter, useLocalSearchParams } from 'expo-router';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport * as Updates from 'expo-updates';\r\n\r\n// Types for the chess pieces\r\ntype PieceKey = 'P' | 'N' | 'B' | 'R' | 'Q' | 'K' | 'p' | 'n' | 'b' | 'r' | 'q' | 'k';\r\ntype BoardState = (PieceKey | '')[][];\r\n\r\n// Server ip\r\nconst server = 'chessmate-production.up.railway.app';\r\n\r\n// Local PNG images for chess pieces\r\nconst pieces: Record<PieceKey, any> = {\r\n  'P': require('../../pieces/wp.png'),\r\n  'N': require('../../pieces/wn.png'),\r\n  'B': require('../../pieces/wb.png'),\r\n  'R': require('../../pieces/wr.png'),\r\n  'Q': require('../../pieces/wq.png'),\r\n  'K': require('../../pieces/wk.png'),\r\n  'p': require('../../pieces/bp.png'),\r\n  'n': require('../../pieces/bn.png'),\r\n  'b': require('../../pieces/bb.png'),\r\n  'r': require('../../pieces/br.png'),\r\n  'q': require('../../pieces/bq.png'),\r\n  'k': require('../../pieces/bk.png')\r\n};\r\n\r\n// Piece types\r\nconst whiteKeys: Array<string> = ['P', 'N', 'B', 'R', 'Q', 'K'];\r\nconst blackKeys: Array<string> = ['p', 'n', 'b', 'r', 'q', 'k'];\r\n\r\n// Initial board setup\r\nconst initialBoard: BoardState = [\r\n  ['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'],\r\n  ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],\r\n  ['' , '' , '' , '' , '' , '' , '' , '' ],\r\n  ['' , '' , '' , '' , '' , '' , '' , '' ],\r\n  ['' , '' , '' , '' , '' , '' , '' , '' ],\r\n  ['' , '' , '' , '' , '' , '' , '' , '' ],\r\n  ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],\r\n  ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R']\r\n];\r\n\r\n// Interface for chessboard\r\ninterface ChessBoardInterface {\r\n  boardSize: number;\r\n  boardState: BoardState;\r\n  onSquarePress: (row: number, col: number) => void;\r\n  selectedPiece: { row: number; col: number; piece: PieceKey } | null;\r\n  fliped: boolean;\r\n  epFlags: {start: { row: number; col: number } | null; target: { row: number; col: number } | null};\r\n  castleFlags: { whiteKingside: boolean; blackKingside: boolean; whiteQueenside: boolean; blackQueenside: boolean };\r\n}\r\n\r\n// Check if a square is under attack\r\nconst isSquareUnderAttack = (row: number, col: number, boardState: BoardState, isWhite: boolean,\r\n  epFlags: {start: { row: number; col: number } | null; target: { row: number; col: number } | null},\r\n  castleFlags: { whiteKingside: boolean; blackKingside: boolean; whiteQueenside: boolean; blackQueenside: boolean }\r\n): boolean => {\r\n  for (let r = 0; r < 8; r++) {\r\n    for (let c = 0; c < 8; c++) {\r\n      const piece = boardState[r][c];\r\n\r\n      if (piece && (isWhite ? blackKeys.includes(piece) : whiteKeys.includes(piece))) {\r\n        const moves = getLegalMoves(r, c, piece, boardState, true, false, epFlags, castleFlags);\r\n\r\n        if (moves.some(move => move.row === row && move.col === col)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\n// Simulate making a move\r\nconst simulateMove = (boardState: BoardState, from: { row: number; col: number },  to: { row: number; col: number }): BoardState => {\r\n  const newBoard = boardState.map((row) => [...row]);\r\n  const piece = newBoard[from.row][from.col];\r\n  newBoard[from.row][from.col] = '';\r\n  newBoard[to.row][to.col] = piece;\r\n\r\n  return newBoard;\r\n};\r\n\r\n// Check if king is in check\r\nconst isInCheck = (boardState: BoardState, isWhite: boolean,\r\n  epFlags: {start: { row: number; col: number } | null; target: { row: number; col: number } | null},\r\n  castleFlags: { whiteKingside: boolean; blackKingside: boolean; whiteQueenside: boolean; blackQueenside: boolean }\r\n): boolean => {\r\n  const king = isWhite ? 'K' : 'k';\r\n  let kingRow = -1;\r\n  let kingCol = -1;\r\n\r\n  for (let row = 0; row < 8; row++) {\r\n    for (let col = 0; col < 8; col++) {\r\n      if (boardState[row][col] === king) {\r\n        kingRow = row;\r\n        kingCol = col;\r\n\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (kingRow !== -1) break;\r\n  }\r\n\r\n  for (let row = 0; row < 8; row++) {\r\n    for (let col = 0; col < 8; col++) {\r\n      const piece = boardState[row][col];\r\n\r\n      if (piece && (isWhite ? blackKeys.includes(piece) : whiteKeys.includes(piece))) {\r\n        const moves = getLegalMoves(row, col, piece, boardState, true, false, epFlags, castleFlags);\r\n\r\n        if (moves.some((move) => move.row === kingRow && move.col === kingCol)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\n// Function to get legal moves for a piece\r\nconst getLegalMoves = (row: number, col: number, piece: PieceKey, boardState: BoardState, capture: boolean, check: boolean,\r\n  epFlags: {start: { row: number; col: number } | null; target: { row: number; col: number } | null},\r\n  castleFlags: { whiteKingside: boolean; blackKingside: boolean; whiteQueenside: boolean; blackQueenside: boolean }): { row: number; col: number}[] => {\r\n  const moves: { row: number; col: number}[] = [];\r\n  const isWhite = piece === piece.toUpperCase();\r\n\r\n  // Helper function to check if a square is within the board\r\n  const isWithinBoard = (r: number, c: number) => r > -1 && r < 8 && c > -1 && c < 8;\r\n\r\n  // Helper function to check if a square is empty or contains an opponent's piece\r\n  const canMoveTo = (r: number, c: number) => {\r\n    const targetPiece = boardState[r][c];\r\n\r\n    return !targetPiece || (isWhite ? targetPiece === targetPiece.toLowerCase() : targetPiece === targetPiece.toUpperCase());\r\n  };\r\n\r\n  // Helper function to add a move if it's valid\r\n  const addMove = (r: number, c: number) => {\r\n    if (isWithinBoard(r, c)) {\r\n      moves.push({ row: r, col: c});\r\n    }\r\n  };\r\n\r\n  // Movement logic for each piece\r\n  switch (piece.toUpperCase()) {\r\n    case 'P':\r\n      // Pawn moves\r\n      const direction = isWhite ? -1 : 1;\r\n      const startRow = isWhite ? 6 : 1;\r\n\r\n      // Move forward one square\r\n      if (!capture && isWithinBoard(row + direction, col) && !boardState[row + direction][col]) {\r\n        addMove(row + direction, col);\r\n\r\n        // Move forward two squares\r\n        if (row === startRow && !boardState[row + 2 * direction][col]) {\r\n          addMove(row + 2 * direction, col);\r\n        }\r\n      }\r\n\r\n      // Capture diagonally\r\n      if (isWithinBoard(row + direction, col - 1) && boardState[row + direction][col - 1] && canMoveTo(row + direction, col - 1)) {\r\n        addMove(row + direction, col - 1);\r\n      }\r\n\r\n      // Capture diagonally\r\n      if (isWithinBoard(row + direction, col + 1) && boardState[row + direction][col + 1] && canMoveTo(row + direction, col + 1)) {\r\n        addMove(row + direction, col + 1);\r\n      }\r\n\r\n      // En passant capture\r\n      if (!capture && epFlags.start && epFlags.target) {\r\n        const { from, to }: any = { from: epFlags.start, to: epFlags.target };\r\n        const lastMovedPiece = boardState[to.row][to.col];\r\n\r\n        // Check if the move corresponds to EnPassant\r\n        if (lastMovedPiece.toLowerCase() === 'p' && Math.abs(from.row - to.row) === 2 && to.row === row && (to.col === col - 1 || to.col === col + 1)) {\r\n          addMove(row + direction, to.col);\r\n        }\r\n      }\r\n\r\n      break;\r\n    case 'N':\r\n      // Knight moves\r\n      const knightMoves = [\r\n        { row: row - 2, col: col - 1 },\r\n        { row: row - 2, col: col + 1 },\r\n        { row: row - 1, col: col - 2 },\r\n        { row: row - 1, col: col + 2 },\r\n        { row: row + 1, col: col - 2 },\r\n        { row: row + 1, col: col + 2 },\r\n        { row: row + 2, col: col - 1 },\r\n        { row: row + 2, col: col + 1 },\r\n      ];\r\n\r\n      knightMoves.forEach((move) => {\r\n        if (isWithinBoard(move.row, move.col) && canMoveTo(move.row, move.col)) {\r\n          addMove(move.row, move.col);\r\n        }\r\n      });\r\n\r\n      break;\r\n    case 'B':\r\n      // Diagonal moves\r\n      for (let i = 1; i < 8; i++) {\r\n        if (!isWithinBoard(row + i, col + i)) break;\r\n\r\n        if (boardState[row + i][col + i]) {\r\n          if (canMoveTo(row + i, col + i)) addMove(row + i, col + i);\r\n\r\n          break;\r\n        }\r\n\r\n        addMove(row + i, col + i);\r\n      }\r\n\r\n      for (let i = 1; i < 8; i++) {\r\n        if (!isWithinBoard(row + i, col - i)) break;\r\n\r\n        if (boardState[row + i][col - i]) {\r\n          if (canMoveTo(row + i, col - i)) addMove(row + i, col - i);\r\n\r\n          break;\r\n        }\r\n\r\n        addMove(row + i, col - i);\r\n      }\r\n\r\n      for (let i = 1; i < 8; i++) {\r\n        if (!isWithinBoard(row - i, col + i)) break;\r\n\r\n        if (boardState[row - i][col + i]) {\r\n          if (canMoveTo(row - i, col + i)) addMove(row - i, col + i);\r\n\r\n          break;\r\n        }\r\n\r\n        addMove(row - i, col + i);\r\n      }\r\n\r\n      for (let i = 1; i < 8; i++) {\r\n        if (!isWithinBoard(row - i, col - i)) break;\r\n\r\n        if (boardState[row - i][col - i]) {\r\n          if (canMoveTo(row - i, col - i)) addMove(row - i, col - i);\r\n\r\n          break;\r\n        }\r\n\r\n        addMove(row - i, col - i);\r\n      }\r\n\r\n      break;\r\n    case 'R': // Rook\r\n      // Orthogonal moves\r\n      for (let i = 1; i < 8; i++) {\r\n        if (!isWithinBoard(row + i, col)) break;\r\n\r\n        if (boardState[row + i][col]) {\r\n          if (canMoveTo(row + i, col)) addMove(row + i, col);\r\n\r\n          break;\r\n        }\r\n\r\n        addMove(row + i, col);\r\n      }\r\n      for (let i = 1; i < 8; i++) {\r\n        if (!isWithinBoard(row - i, col)) break;\r\n\r\n        if (boardState[row - i][col]) {\r\n          if (canMoveTo(row - i, col)) addMove(row - i, col);\r\n\r\n          break;\r\n        }\r\n\r\n        addMove(row - i, col);\r\n      }\r\n      for (let i = 1; i < 8; i++) {\r\n        if (!isWithinBoard(row, col + i)) break;\r\n\r\n        if (boardState[row][col + i]) {\r\n          if (canMoveTo(row, col + i)) addMove(row, col + i);\r\n\r\n          break;\r\n        }\r\n\r\n        addMove(row, col + i);\r\n      }\r\n      for (let i = 1; i < 8; i++) {\r\n        if (!isWithinBoard(row, col - i)) break;\r\n\r\n        if (boardState[row][col - i]) {\r\n          if (canMoveTo(row, col - i)) addMove(row, col - i);\r\n\r\n          break;\r\n        }\r\n\r\n        addMove(row, col - i);\r\n      }\r\n\r\n      break;\r\n    case 'Q':\r\n      // Combine orthogonal and diagonal moves\r\n      getLegalMoves(row, col, isWhite ? 'R' : 'r', boardState, false, check, epFlags, castleFlags).forEach((move) => addMove(move.row, move.col));\r\n      getLegalMoves(row, col, isWhite ? 'B' : 'b', boardState, false, check, epFlags, castleFlags).forEach((move) => addMove(move.row, move.col));\r\n\r\n      break;\r\n    case 'K':\r\n      // King moves\r\n      const kingMoves = [\r\n        { row: row - 1, col: col - 1 },\r\n        { row: row - 1, col: col },\r\n        { row: row - 1, col: col + 1 },\r\n        { row: row, col: col - 1 },\r\n        { row: row, col: col + 1 },\r\n        { row: row + 1, col: col - 1 },\r\n        { row: row + 1, col: col },\r\n        { row: row + 1, col: col + 1 },\r\n      ];\r\n    \r\n      kingMoves.forEach((move) => {\r\n        if (isWithinBoard(move.row, move.col) && canMoveTo(move.row, move.col)) {\r\n          addMove(move.row, move.col);\r\n        }\r\n      });\r\n\r\n      if (!capture) {\r\n        // Kingside castling\r\n        if ((isWhite && !castleFlags.whiteKingside || !isWhite && !castleFlags.blackKingside) &&\r\n          !boardState[row][col + 1] && !boardState[row][col + 2] &&\r\n          !isSquareUnderAttack(row, col, boardState, isWhite, epFlags, castleFlags) &&\r\n          !isSquareUnderAttack(row, col + 1, boardState, isWhite, epFlags, castleFlags) &&\r\n          !isSquareUnderAttack(row, col + 2, boardState, isWhite, epFlags, castleFlags)) {\r\n          addMove(row, col + 2);\r\n        }\r\n    \r\n        // Queenside castling\r\n        if ((isWhite && !castleFlags.whiteQueenside || !isWhite && !castleFlags.blackQueenside) &&\r\n          !boardState[row][col - 1] && !boardState[row][col - 2] && !boardState[row][col - 3] &&\r\n          !isSquareUnderAttack(row, col, boardState, isWhite, epFlags, castleFlags) &&\r\n          !isSquareUnderAttack(row, col - 1, boardState, isWhite, epFlags, castleFlags) &&\r\n          !isSquareUnderAttack(row, col - 2, boardState, isWhite, epFlags, castleFlags)) {\r\n          addMove(row, col - 2);\r\n        }\r\n      }\r\n\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  // Filter out illegal moves\r\n  if (check) {\r\n    const legalMoves = moves.filter((move) => {\r\n      const newBoard = simulateMove(boardState, { row, col }, move);\r\n\r\n      return !isInCheck(newBoard, isWhite, epFlags, castleFlags);\r\n    });\r\n\r\n    return legalMoves;\r\n  }\r\n\r\n  return moves;\r\n};\r\n\r\nconst ChessBoard = React.memo(({ boardState, boardSize, onSquarePress, selectedPiece, fliped, legalMoves, currentMoves }: any) => {\r\n  const squareSize = boardSize / 8;\r\n\r\n  const rotateCoordinates = (row: number, col: number) => {\r\n    return fliped ? { row: 7 - row, col: 7 - col } : { row, col };\r\n  };\r\n\r\n  return (\r\n    <View style={{ width: boardSize, height: boardSize }}>\r\n      {boardState.map((rowArray, row) =>\r\n        rowArray.map((piece, col) => {\r\n          const { row: displayRow, col: displayCol } = rotateCoordinates(row, col);\r\n          const isSelected = selectedPiece && selectedPiece.row === row && selectedPiece.col === col;\r\n          const isCurrent = (currentMoves.start && currentMoves.start.row === row && currentMoves.start.col === col ||\r\n            currentMoves.target && currentMoves.target.row === row && currentMoves.target.col === col);\r\n          const isLegal = legalMoves.some(m => m.row === row && m.col === col);\r\n          let backgroundColor;\r\n\r\n          if ((row + col) % 2 === 0) {\r\n            backgroundColor = isLegal ? '#c00' : (isSelected || isCurrent) ? '#fc8' : '#c3c2c2';\r\n          } else {\r\n            backgroundColor = isLegal ? '#800' : (isSelected || isCurrent) ? '#fc4' : '#504d55';\r\n          }\r\n\r\n          return (\r\n            <Pressable\r\n              key={`${row}-${col}`}\r\n              onPress={() => onSquarePress(row, col)}\r\n              style={{\r\n                position: 'absolute',\r\n                left: displayCol * squareSize,\r\n                top: displayRow * squareSize,\r\n                width: squareSize,\r\n                height: squareSize,\r\n                backgroundColor,\r\n                justifyContent: 'center',\r\n                alignItems: 'center'\r\n              }}\r\n            >\r\n              {piece && (\r\n                <Image\r\n                  source={pieces[piece]}\r\n                  style={{ width: squareSize, height: squareSize }}\r\n                  resizeMode=\"contain\"\r\n                />\r\n              )}\r\n            </Pressable>\r\n          );\r\n        })\r\n      )}\r\n    </View>\r\n  );\r\n});\r\n\r\nconst PromotionMenu: React.FC<{\r\n  isWhite: boolean;\r\n  onSelect: (piece: PieceKey) => void;\r\n  boardSize: number;\r\n}> = ({ isWhite, onSelect, boardSize }) => {\r\n  // Promotion options\r\n  const promotionPieces: PieceKey[] = isWhite ? ['Q', 'R', 'B', 'N'] : ['q', 'r', 'b', 'n'];\r\n  const squareSize = boardSize / 8;\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.promotionMenu, {\r\n          width: boardSize,\r\n          height: squareSize * 1.5,\r\n          transform: [\r\n            { translateX: -boardSize / 2 },\r\n            { translateY: -squareSize * 0.75 }\r\n          ]\r\n        }\r\n      ]}\r\n    >\r\n      {promotionPieces.map((piece) => (\r\n        <TouchableOpacity\r\n          key={piece}\r\n          style={styles.promotionOption}\r\n          onPress={() => onSelect(piece)}\r\n        >\r\n          <Image\r\n            source={pieces[piece]}\r\n            style={{ width: squareSize, height: squareSize }}\r\n          />\r\n        </TouchableOpacity>\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst GameScreen: React.FC = () => {\r\n  const params = useLocalSearchParams();\r\n  const gameId = params.gameId;\r\n  const playerColor = params.color;\r\n  const playerName = params.name;\r\n  const playerImage = params.image;\r\n  const playerRating = params.rating;\r\n  const [validating, setValidating] = useState(true);\r\n  const [whiteUsername, setWhiteUsername] = useState('????');\r\n  const [whiteImageUrl, setWhiteImageUrl] = useState('https://' + server + '/uploads/_.png');\r\n  const [whiteRating, setWhiteRating] = useState('????');\r\n  const [blackUsername, setBlackUsername] = useState('????');\r\n  const [blackImageUrl, setBlackImageUrl] = useState('https://' + server + '/uploads/_.png');\r\n  const [blackRating, setBlackRating] = useState('????');\r\n  const { width, height } = useWindowDimensions();\r\n  const isLandscape = width > height;\r\n  const boardSize = isLandscape ? height * 0.9 : width * 0.9;\r\n  const files = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\r\n  const ranks = ['1', '2', '3', '4', '5', '6', '7', '8'].reverse();\r\n  const [boardState, setBoardState] = useState<BoardState>(initialBoard);\r\n  const [selectedPiece, setSelectedPiece] = useState<{ row: number; col: number; piece: PieceKey } | null>(null);\r\n  const [promotionSquare, setPromotionSquare] = useState<{ row: number; col: number } | null>(null);\r\n  const [capturedWhite, setCapturedWhite] = useState<PieceKey[]>([]);\r\n  const [capturedBlack, setCapturedBlack] = useState<PieceKey[]>([]);\r\n  const [isWhiteTurn, setIsWhiteTurn] = useState(true);\r\n  const [epFlags, setEpFlags] = useState<{start: { row: number; col: number } | null; target: { row: number; col: number } | null}>(\r\n    {start: null, target: null});\r\n  const [castleFlags, setCastleFlags] = useState<{ whiteKingside: boolean; blackKingside: boolean; whiteQueenside: boolean; blackQueenside: boolean }>(\r\n    {whiteKingside: false, blackKingside: false, whiteQueenside: false, blackQueenside: false});\r\n  const [color, setColor] = useState<'white' | 'black' | null>(null);\r\n  const [fliped, setFlip] = useState<boolean>(false);\r\n  const [ws, setWs] = useState<WebSocket | null>(null);\r\n  const [whiteTimer, setWhiteTimer] = useState(0);\r\n  const [blackTimer, setBlackTimer] = useState(0);\r\n  const [result, setResult] = useState('ongoing');\r\n  const [chatMessages, setChatMessages] = useState<string[]>([]);\r\n  const [chatInput, setChatInput] = useState('');\r\n  const [isChatVisible, setIsChatVisible] = useState(false);\r\n  const router = useRouter();\r\n  \r\n  const verifyToken = async () => {\r\n    let response;\r\n\r\n    try {\r\n      const token = await AsyncStorage.getItem('token');\r\n      response = await fetch('https://' + server + '/verify?token=' + token);\r\n      setValidating(false);\r\n    } catch (err) {\r\n      setValidating(false);\r\n\r\n      return;\r\n    }\r\n\r\n    response.json().then((code) => {\r\n      if (code.code === '1') {\r\n        resetApp();\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (validating) {\r\n      verifyToken();\r\n    }\r\n  }, []);\r\n\r\n  const resetApp = async () => {\r\n    if (Platform.OS === 'web') {\r\n      window.location.href = 'https://lorinpet.github.io/chessmate_web';\r\n    } else {\r\n      await Updates.reloadAsync();\r\n    }\r\n  }\r\n\r\n  const setImage = async (url: string, white: boolean) => {\r\n    const imageResponse = await fetch(url)\r\n    white ? setWhiteImageUrl(imageResponse.url) : setBlackImageUrl(imageResponse.url);\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Connect to the WebSocket server\r\n    const websocket = new WebSocket('wss://' + server + '/game?gameId=' + gameId + '&color=' + playerColor + '&name=' + playerName + '&image=' + playerImage + '&rating=' + playerRating);\r\n\r\n    websocket.onopen = () => {\r\n      console.log('WebSocket connected');\r\n    };\r\n\r\n    websocket.onmessage = (message) => {\r\n      const data = JSON.parse(message.data);\r\n\r\n      if (data.type === 'assignColor') {\r\n        // Update player color\r\n        setColor(data.color);\r\n        setFlip(data.color === 'black');\r\n      } else if (data.type === 'setWhiteUser') {\r\n        // Update white player data\r\n        setWhiteUsername(data.whiteName);\r\n        setImage(data.whiteImage, true);\r\n        setWhiteRating(data.whiteRating);\r\n      } else if (data.type === 'setBlackUser') {\r\n        // Update black player data\r\n        setBlackUsername(data.blackName);\r\n        setImage(data.blackImage, false);\r\n        setBlackRating(data.blackRating);\r\n      } else if (data.type === 'gameState') {\r\n        // Update the game state\r\n        setBoardState(data.gameState.board);\r\n        setIsWhiteTurn(data.gameState.currentTurn === 'white');\r\n        setCapturedWhite(data.gameState.capturedWhite);\r\n        setCapturedBlack(data.gameState.capturedBlack);\r\n        setEpFlags({start: data.gameState.lastMoveStart, target: data.gameState.lastMoveTarget});\r\n        setCastleFlags({whiteKingside: data.gameState.whiteKingside, blackKingside: data.gameState.blackKingside,\r\n          whiteQueenside: data.gameState.whiteQueenside, blackQueenside: data.gameState.blackQueenside});\r\n        setWhiteTimer(data.gameState.whiteTimer);\r\n        setBlackTimer(data.gameState.blackTimer);\r\n        \r\n        if (data.gameState.winner) {\r\n          setPromotionSquare(null);\r\n          setSelectedPiece(null);\r\n          setResult(data.gameState.winner);\r\n        }\r\n      } else if (data.type === 'chat') {\r\n        setChatMessages((prevMessages) => [...prevMessages, data.message]);\r\n      }\r\n    };\r\n\r\n    websocket.onclose = () => {\r\n      console.log('WebSocket disconnected');\r\n    };\r\n\r\n    websocket.onerror = (error) => {\r\n      console.error('WebSocket error:', error);\r\n    };\r\n\r\n    setWs(websocket);\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      websocket.close();\r\n    };\r\n  }, []);\r\n\r\n  const legalMoves = useMemo(() => {\r\n    if (!selectedPiece) return [];\r\n    return getLegalMoves(selectedPiece.row, selectedPiece.col, selectedPiece.piece, boardState, false, true, epFlags, castleFlags);\r\n  }, [selectedPiece]);\r\n\r\n  const onSquarePress = useCallback((row, col) => {\r\n    if (whiteUsername === '????' || blackUsername === '????') {\r\n      return;\r\n    }\r\n\r\n    if (result !== 'ongoing' || promotionSquare || isChatVisible) {\r\n      setPromotionSquare(null);\r\n      setSelectedPiece(null);\r\n\r\n      return;\r\n    }\r\n\r\n    const piece = boardState[row][col];\r\n\r\n    if (selectedPiece) {\r\n      const from = { row: selectedPiece.row, col: selectedPiece.col };\r\n      const to = { row, col };\r\n\r\n      if (selectedPiece.row === row && selectedPiece.col === col) {\r\n        setSelectedPiece(null);\r\n      } else if (piece && ((color === 'white' && isWhiteTurn && whiteKeys.includes(piece)) || (color === 'black' && !isWhiteTurn && blackKeys.includes(piece)))) {\r\n        setSelectedPiece({ row, col, piece });\r\n      } else {\r\n        const promotionRow = isWhiteTurn ? 0 : 7;\r\n\r\n        if (selectedPiece.piece.toLowerCase() === 'p' && row === promotionRow && legalMoves.some(m => m.row === row && m.col === col)) {\r\n          setPromotionSquare({ row, col });\r\n\r\n          return;\r\n        }\r\n\r\n        handleMove(from, to, null);\r\n        setSelectedPiece(null);\r\n      }\r\n    } else if (piece && ((color === 'white' && isWhiteTurn && whiteKeys.includes(piece)) || (color === 'black' && !isWhiteTurn && blackKeys.includes(piece)))) {\r\n      setSelectedPiece({ row, col, piece });\r\n    }\r\n  }, [boardState, selectedPiece, isWhiteTurn, promotionSquare, result, isChatVisible]);\r\n\r\n  const handleMove = (from: { row: number; col: number }, to: { row: number; col: number }, promotion: PieceKey | null) => {\r\n    if (ws) {\r\n      // Send the move to the server\r\n      ws.send(JSON.stringify({ type: 'move', from, to, promotion }));\r\n    }\r\n  };\r\n\r\n  const handlePromotionSelect = (piece: PieceKey) => {\r\n    if (promotionSquare && selectedPiece) {\r\n      const from = { row: selectedPiece.row, col: selectedPiece.col };\r\n      const to = { row: promotionSquare.row, col: promotionSquare.col };\r\n      handleMove(from, to, piece);\r\n      setPromotionSquare(null);\r\n      setSelectedPiece(null);\r\n    }\r\n  };\r\n\r\n  const renderCapturedPieces = (capturedPieces: PieceKey[]) => {\r\n    const pieceHeight = boardSize / 8;\r\n    const pieceWidth = boardSize / 16;\r\n\r\n    return (\r\n      <View style={[styles.capturedPiecesContainer, { height: pieceHeight }]}>\r\n        {capturedPieces.map((piece, index) => (\r\n          <Image\r\n            key={`captured-${piece}-${index}`}\r\n            source={pieces[piece]}\r\n            style={[{ width: pieceWidth, height: pieceHeight }]}\r\n          />\r\n        ))}\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const flipBoard = () => {\r\n    if (fliped) {\r\n      setFlip(false);\r\n    } else {\r\n      setFlip(true);\r\n    }\r\n  }\r\n\r\n  const responsiveFontSize = (size: any) => {\r\n    const scale = Math.min(height / 800, width / 400, 2);\r\n\r\n    return Math.max(size * scale, 2);\r\n  };\r\n\r\n  const buttonWidth = width * 0.25;\r\n\r\n  const formatTime = (seconds: number) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n\r\n    return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\r\n  };\r\n\r\n  const handleOfferDraw = () => {\r\n    if (result === 'ongoing' && ws) {\r\n      ws.send(JSON.stringify({ type: 'offerDraw' }));\r\n    }\r\n  };\r\n\r\n  const handleResign = () => {\r\n    if (result === 'ongoing' && ws) {\r\n      ws.send(JSON.stringify({ type: 'resign' }));\r\n    }\r\n  };\r\n\r\n  const toggleChat = () => {\r\n    if (whiteUsername === '????' || blackUsername === '????' || whiteUsername === 'Stockfish' || blackUsername === 'Stockfish') {\r\n      return;\r\n    }\r\n\r\n    setPromotionSquare(null);\r\n    setSelectedPiece(null);\r\n    setIsChatVisible(!isChatVisible);\r\n  };\r\n  \r\n  const handleSendMessage = () => {\r\n    if (chatInput.trim() && ws) {\r\n      ws.send(JSON.stringify({ type: 'chat', message: chatInput }));\r\n      setChatInput('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView>\r\n      <View style={[styles.container, { minHeight: height }]}>\r\n        <View style={styles.topBar}>\r\n          <View style={styles.backArrow}>\r\n            <Link onPress={() => ws.close()}  href=\"dashboard\">\r\n              <View>\r\n                <MaterialIcons name=\"arrow-back\" size={responsiveFontSize(30)} color=\"#ccc\" />\r\n              </View>\r\n            </Link>\r\n          </View>\r\n\r\n          <View style={styles.topCenter}>\r\n            <Text style={[styles.timer, { fontSize: responsiveFontSize(32) }]}>{!fliped ? formatTime(blackTimer) : formatTime(whiteTimer)}</Text>\r\n            <Text style={[styles.moveIndicator, { fontSize: responsiveFontSize(20) }]}>{result !== \"ongoing\" ? \" \" :\r\n              (isWhiteTurn ? (!fliped ? \" \" : \"White to move\") : (!fliped ? \"Black to move\" : \" \"))}</Text>\r\n          </View>\r\n\r\n          <View style={styles.topRight}>\r\n            <Image\r\n              source={{ uri: (!fliped ? blackImageUrl : whiteImageUrl) }}\r\n              style={[styles.profilePicture, { width: responsiveFontSize(50), height: responsiveFontSize(50) }]}\r\n            />\r\n\r\n            <Text style={[styles.userInfo, { fontSize: responsiveFontSize(18) }]}>{(!fliped ? blackUsername : whiteUsername)}</Text>\r\n            <Text style={[styles.rating, { fontSize: responsiveFontSize(14) }]}>{(!fliped ? blackRating : whiteRating)}</Text>\r\n          </View>\r\n        </View>\r\n\r\n        {renderCapturedPieces(capturedBlack)}\r\n\r\n        <View style={[styles.fileLabelsContainer, { width: boardSize }]}>\r\n          {files.map((file, index) => (\r\n            <Text\r\n              key={`file-top-${file}`}\r\n              style={[styles.fileLabel, { fontSize: 12 }]}\r\n            >\r\n              {fliped ? files[files.length - 1 - index] : file}\r\n            </Text>\r\n          ))}\r\n        </View>\r\n\r\n        <View style={styles.boardWithLabelsContainer}>\r\n          <View style={styles.rankLabelsContainer}>\r\n            {ranks.map((rank, index) => (\r\n              <Text\r\n                key={`rank-${rank}`}\r\n                style={[styles.rankLabel, { marginVertical: boardSize / 26, fontSize: 12 }]}\r\n              >\r\n                {fliped ? ranks[ranks.length - 1 - index] : rank}\r\n              </Text>\r\n            ))}\r\n          </View>\r\n\r\n          <View>\r\n            <ChessBoard\r\n              boardState={boardState}\r\n              boardSize={boardSize}\r\n              onSquarePress={onSquarePress}\r\n              selectedPiece={selectedPiece}\r\n              fliped={fliped}\r\n              legalMoves={legalMoves}\r\n              currentMoves={epFlags}\r\n            />\r\n\r\n            {promotionSquare && (\r\n              <PromotionMenu\r\n                isWhite={color === \"white\"}\r\n                onSelect={handlePromotionSelect}\r\n                boardSize={boardSize}\r\n              />\r\n            )}\r\n          </View>\r\n\r\n          <View style={styles.rankLabelsContainer}>\r\n            {ranks.map((rank, index) => (\r\n              <Text\r\n                key={`rank-right-${rank}`}\r\n                style={[styles.rankLabel, { marginVertical: boardSize / 26, fontSize: 12 }]}\r\n              >\r\n                {fliped ? ranks[ranks.length - 1 - index] : rank}\r\n              </Text>\r\n            ))}\r\n          </View>\r\n        </View>\r\n\r\n        <View style={[styles.fileLabelsContainer, { width: boardSize }]}>\r\n          {files.map((file, index) => (\r\n            <Text\r\n              key={`file-bottom-${file}`}\r\n              style={[styles.fileLabel, { fontSize: 12 }]}\r\n            >\r\n              {fliped ? files[files.length - 1 - index] : file}\r\n            </Text>\r\n          ))}\r\n        </View>\r\n\r\n        {renderCapturedPieces(capturedWhite)}\r\n\r\n        <View style={styles.bottomBar}>\r\n          <View style={styles.bottomLeft}>\r\n            <Image\r\n              source={{ uri: (!fliped ? whiteImageUrl : blackImageUrl) }}\r\n              style={[styles.profilePicture, { width: responsiveFontSize(50), height: responsiveFontSize(50) }]}\r\n            />\r\n\r\n            <Text style={[styles.userInfo, { fontSize: responsiveFontSize(18) }]}>{(!fliped ? whiteUsername : blackUsername)}</Text>\r\n            <Text style={[styles.rating, { fontSize: responsiveFontSize(14) }]}>{(!fliped ? whiteRating : blackRating)}</Text>\r\n          </View>\r\n\r\n          <View style={styles.bottomCenter}>\r\n            <Text style={[styles.timer, { fontSize: responsiveFontSize(32) }]}>{!fliped ? formatTime(whiteTimer) : formatTime(blackTimer)}</Text>\r\n            <Text style={[styles.moveIndicator, { fontSize: responsiveFontSize(20) }]}>{result !== \"ongoing\" ? \" \" :\r\n              (isWhiteTurn ? (!fliped ? \"White to move\" : \" \") : (!fliped ? \" \" : \"Black to move\"))}</Text>\r\n          </View>\r\n\r\n          <View style={styles.flipBoard}>\r\n            <TouchableOpacity>\r\n              <MaterialIcons name=\"flip\" size={responsiveFontSize(30)} color=\"#ccc\" onPress={flipBoard} />\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n\r\n        <View>\r\n          <Text style={styles.gameOverText}>{result === \"ongoing\" ? (color === \"white\" ? \"You are playing the white pieces\" : \"You are playing the black pieces\") :\r\n            (result === \"white\" ? \"White won\" : (result === \"black\" ? \"Black won\" : \"Draw\"))}</Text>\r\n        </View>\r\n\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity onPress={handleOfferDraw} style={[styles.button, { width: buttonWidth }]}>\r\n            <MaterialIcons name=\"handshake\" size={responsiveFontSize(30)} color=\"#fff\" />\r\n            <Text style={[styles.buttonText, { fontSize: responsiveFontSize(14) }]}>Offer Draw</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity onPress={handleResign} style={[styles.button, { width: buttonWidth }]}>\r\n            <MaterialIcons name=\"flag\" size={responsiveFontSize(30)} color=\"#fff\" />\r\n            <Text style={[styles.buttonText, { fontSize: responsiveFontSize(14) }]}>Resign</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity onPress={toggleChat} style={[styles.button, { width: buttonWidth }]}>\r\n            <MaterialIcons name=\"chat\" size={responsiveFontSize(30)} color=\"#fff\" />\r\n            <Text style={[styles.buttonText, { fontSize: responsiveFontSize(14) }]}>Chat</Text>\r\n          </TouchableOpacity>\r\n\r\n          {isChatVisible && (\r\n            <View style={styles.chatContainer}>\r\n              <ScrollView>\r\n                {chatMessages.map((msg, index) => (\r\n                  <Text key={index} style={styles.chatMessage}>\r\n                    {msg}\r\n                  </Text>\r\n                ))}\r\n              </ScrollView>\r\n              <View style={styles.chatInputContainer}>\r\n                <TextInput\r\n                  style={styles.chatInput}\r\n                  value={chatInput}\r\n                  onChangeText={setChatInput}\r\n                  placeholder=\"Type a message...\"\r\n                />\r\n\r\n                <TouchableOpacity style={styles.sendButton} onPress={handleSendMessage}>\r\n                  <MaterialIcons name=\"send\" size={responsiveFontSize(20)} color=\"#fff\" />\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          )}\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#444'\r\n  },\r\n  topBar: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    paddingHorizontal: 20,\r\n    marginTop: 20\r\n  },\r\n  backArrow: {\r\n    flex: 1,\r\n    alignItems: 'flex-start'\r\n  },\r\n  flipBoard: {\r\n    flex: 1,\r\n    alignItems: 'flex-end'\r\n  },\r\n  topCenter: {\r\n    flex: 2,\r\n    alignItems: 'center'\r\n  },\r\n  topRight: {\r\n    flex: 1,\r\n    alignItems: 'flex-end'\r\n  },\r\n  profilePicture: {\r\n    borderRadius: 25\r\n  },\r\n  timer: {\r\n    fontWeight: 'bold',\r\n    color: '#888'\r\n  },\r\n  moveIndicator: {\r\n    fontWeight: 'bold',\r\n    color: '#ccc'\r\n  },\r\n  userInfo: {\r\n    fontWeight: 'bold',\r\n    color: '#888'\r\n  },\r\n  rating: {\r\n    color: '#ccc'\r\n  },\r\n  boardWithLabelsContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center'\r\n  },\r\n  rankLabelsContainer: {\r\n    justifyContent: 'space-between',\r\n    marginHorizontal: 5\r\n  },\r\n  rankLabel: {\r\n    color: '#ccc'\r\n  },\r\n  fileLabelsContainer: {\r\n    flexDirection: 'row',\r\n    marginVertical: 5\r\n  },\r\n  fileLabel: {\r\n    color: '#ccc',\r\n    textAlign: \"center\",\r\n    flex: 1\r\n  },\r\n  bottomBar: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    paddingHorizontal: 20,\r\n    marginBottom: 10\r\n  },\r\n  bottomLeft: {\r\n    flex: 1,\r\n    alignItems: 'flex-start'\r\n  },\r\n  bottomCenter: {\r\n    flex: 2,\r\n    alignItems: 'center'\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    width: '100%',\r\n    marginTop: 20\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    backgroundColor: '#888',\r\n    paddingVertical: 10,\r\n    borderRadius: 25\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    marginTop: 5\r\n  },\r\n  capturedPiecesContainer: {\r\n    flexDirection: 'row'\r\n  },\r\n  capturedWhite: {\r\n    flexDirection: 'row-reverse'\r\n  },\r\n  capturedBlack: {\r\n    flexDirection: 'row'\r\n  },\r\n  promotionMenu: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n    backgroundColor: '#888',\r\n    borderRadius: 10,\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%'\r\n  },\r\n  promotionOption: {\r\n    backgroundColor: '#444',\r\n    borderRadius: 10\r\n  },\r\n  chatContainer: {\r\n    position: 'absolute',\r\n    bottom: 80,\r\n    right: 20,\r\n    width: 300,\r\n    height: 200,\r\n    backgroundColor: '#888',\r\n    borderRadius: 10,\r\n    padding: 10\r\n  },\r\n  chatMessage: {\r\n    color: '#fff',\r\n    fontSize: 14,\r\n    marginBottom: 5\r\n  },\r\n  chatInputContainer: {\r\n    flexDirection: 'row'\r\n  },\r\n  chatInput: {\r\n    flex: 1,\r\n    backgroundColor: '#444',\r\n    color: '#fff',\r\n    borderRadius: 5,\r\n    padding: 5,\r\n    marginRight: 10\r\n  },\r\n  sendButton: {\r\n    backgroundColor: '#888',\r\n    borderRadius: 5,\r\n    padding: 5\r\n  },\r\n  gameOverText: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    textAlign: 'center'\r\n  }\r\n});\r\n\r\nexport default GameScreen;","import { View, Text, StyleSheet, useWindowDimensions, ScrollView, TouchableOpacity, Image, Platform } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Link, useRouter, useLocalSearchParams } from 'expo-router';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Svg, { Rect } from 'react-native-svg';\r\nimport * as Updates from 'expo-updates';\r\n\r\n// Types for the chess pieces\r\nconst whiteKeys = ['P', 'N', 'B', 'R', 'Q', 'K'];\r\nconst blackKeys = ['p', 'n', 'b', 'r', 'q', 'k'];\r\ntype PieceKey = 'P' | 'N' | 'B' | 'R' | 'Q' | 'K' | 'p' | 'n' | 'b' | 'r' | 'q' | 'k';\r\ntype BoardState = (PieceKey | '')[][];\r\n\r\n// Server ip\r\nconst server = 'chessmate-production.up.railway.app';\r\n\r\n// Local PNG images for chess pieces\r\nconst pieces: Record<PieceKey, any> = {\r\n  'P': require('../../pieces/wp.png'),\r\n  'N': require('../../pieces/wn.png'),\r\n  'B': require('../../pieces/wb.png'),\r\n  'R': require('../../pieces/wr.png'),\r\n  'Q': require('../../pieces/wq.png'),\r\n  'K': require('../../pieces/wk.png'),\r\n  'p': require('../../pieces/bp.png'),\r\n  'n': require('../../pieces/bn.png'),\r\n  'b': require('../../pieces/bb.png'),\r\n  'r': require('../../pieces/br.png'),\r\n  'q': require('../../pieces/bq.png'),\r\n  'k': require('../../pieces/bk.png')\r\n};\r\n\r\n// Initial board setup\r\nlet initialBoard: BoardState = [\r\n  ['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'],\r\n  ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],\r\n  ['' , '' , '' , '' , '' , '' , '' , '' ],\r\n  ['' , '' , '' , '' , '' , '' , '' , '' ],\r\n  ['' , '' , '' , '' , '' , '' , '' , '' ],\r\n  ['' , '' , '' , '' , '' , '' , '' , '' ],\r\n  ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],\r\n  ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R']\r\n];\r\n\r\n// Interface for chessboard\r\ninterface ChessBoardInterface {\r\n  boardSize: number;\r\n  boardState: BoardState;\r\n  fliped: boolean;\r\n}\r\n\r\nconst ChessBoard: React.FC<ChessBoardInterface> = ({ boardSize, boardState, fliped }) => {\r\n  // Size of square\r\n  const squareSize = boardSize / 8;\r\n\r\n  // Rotate board\r\n  const rotateCoordinates = (row: number, col: number) => {\r\n    return fliped ? { row: 7 - row, col: 7 - col } : { row, col };\r\n  };\r\n\r\n  // Square rendering\r\n  const renderSquares = () => {\r\n    const squares = [];\r\n\r\n    for (let row = 0; row < 8; row++) {\r\n      for (let col = 0; col < 8; col++) {\r\n        const { row: displayRow, col: displayCol } = rotateCoordinates(row, col);\r\n        const x = displayCol * squareSize;\r\n        const y = displayRow * squareSize;\r\n        const color = (row + col) % 2 === 0 ? '#c3c2c2' : '#504d55';\r\n\r\n        squares.push(\r\n          <Rect\r\n            key={`square-${row}-${col}`}\r\n            x={x}\r\n            y={y}\r\n            width={squareSize}\r\n            height={squareSize}\r\n            fill={color}\r\n          />\r\n        );\r\n      }\r\n    }\r\n\r\n    return squares;\r\n  };\r\n\r\n  // Piece rendering\r\n  const renderPieces = () => {\r\n    const pieceComponents = [];\r\n\r\n    for (let row = 0; row < 8; row++) {\r\n      for (let col = 0; col < 8; col++) {\r\n        const piece = boardState[row][col];\r\n\r\n        if (piece) {\r\n          const { row: displayRow, col: displayCol } = rotateCoordinates(row, col);\r\n          const x = displayCol * squareSize;\r\n          const y = displayRow * squareSize;\r\n\r\n          pieceComponents.push(\r\n            <Image\r\n              key={`piece-${row}-${col}`}\r\n              source={pieces[piece]}\r\n              style={{ position: 'absolute', left: x, top: y, width: squareSize, height: squareSize}}\r\n            />\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    return pieceComponents;\r\n  };\r\n\r\n  return (\r\n    <View style={{ width: boardSize, height: boardSize }}>\r\n      <Svg width={boardSize} height={boardSize}>\r\n        {renderSquares()}\r\n      </Svg>\r\n\r\n      {renderPieces()}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst GameScreen: React.FC = () => {\r\n  const params = useLocalSearchParams();\r\n  const archive = params.archive;\r\n  const [validating, setValidating] = useState(true);\r\n  const [archivedGame, setArchivedGame] = useState<{ game: any; whitePlayer: any; blackPlayer: any, moves: any[] } | null>(null);\r\n  const [analysis, setAnalysis] = useState({bestmove: 'Press button to analyse', evaluation: ''});\r\n  const [analysing, setAnalysing] = useState(false);\r\n  const [currMove, setCurrMove] = useState(-1);\r\n  const [whiteUsername, setWhiteUsername] = useState('????');\r\n  const [whiteImageUrl, setWhiteImageUrl] = useState('https://' + server + '/uploads/_.png');\r\n  const [whiteRating, setWhiteRating] = useState('????');\r\n  const [blackUsername, setBlackUsername] = useState('????');\r\n  const [blackImageUrl, setBlackImageUrl] = useState('https://' + server + '/uploads/_.png');\r\n  const [blackRating, setBlackRating] = useState('????');\r\n  const { width, height } = useWindowDimensions();\r\n  const isLandscape = width > height;\r\n  const boardSize = isLandscape ? height * 0.9 : width * 0.9;\r\n  const files = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\r\n  const ranks = ['1', '2', '3', '4', '5', '6', '7', '8'].reverse();\r\n  const [fen, setFen] = useState('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1');\r\n  const [boardState, setBoardState] = useState<BoardState>(initialBoard);\r\n  const [fliped, setFlip] = useState<boolean>(false);\r\n  const router = useRouter();\r\n\r\n  const verifyToken = async () => {\r\n    let response;\r\n\r\n    try {\r\n      const token = await AsyncStorage.getItem('token');\r\n      response = await fetch('https://' + server + '/verify?token=' + token);\r\n      setValidating(false);\r\n    } catch (err) {\r\n      setValidating(false);\r\n\r\n      return;\r\n    }\r\n\r\n    response.json().then((code) => {\r\n      if (code.code === '1') {\r\n        resetApp();\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (validating) {\r\n      verifyToken();\r\n    }\r\n  }, []);\r\n\r\n  const resetApp = async () => {\r\n    if (Platform.OS === 'web') {\r\n      window.location.href = 'https://lorinpet.github.io/chessmate_web';\r\n    } else {\r\n      await Updates.reloadAsync();\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    const gameResponse = await fetch('https://' + server + '/game?gameId=' + archive);\r\n    const game = await gameResponse.json();\r\n    const whitePlayerId = await game.message.white_player;\r\n    const whitePlayerResponse = await fetch('https://' + server + '/player?playerId=' + whitePlayerId);\r\n    const whitePlayer = await whitePlayerResponse.json();\r\n    const blackPlayerId = await game.message.black_player;\r\n    const blackPlayerResponse = await fetch('https://' + server + '/player?playerId=' + blackPlayerId);\r\n    const blackPlayer = await blackPlayerResponse.json();\r\n    const whiteUsername = await whitePlayer.message.username;\r\n    setWhiteUsername(whiteUsername);\r\n    const blackUsername = await blackPlayer.message.username;\r\n    setBlackUsername(blackUsername);\r\n    const whiteProfile = await whitePlayer.message.profile_picture_url;\r\n    const whiteImage = await fetch('https://' + server + '/' + whiteProfile);\r\n    setWhiteImageUrl(whiteImage.url);\r\n    const blackProfile = await blackPlayer.message.profile_picture_url;\r\n    const blackImage = await fetch('https://' + server + '/' + blackProfile);\r\n    setBlackImageUrl(blackImage.url);\r\n    const timeControl = await game.message.time_control;\r\n\r\n    if (['60+0', '120+1', '180+0'].includes(timeControl)) {\r\n      const whiteBulletRating = await whitePlayer.message.bullet_rating;\r\n      setWhiteRating(whiteBulletRating);\r\n      const blackBulletRating = await blackPlayer.message.bullet_rating;\r\n      setBlackRating(blackBulletRating);\r\n    } else if (['180+2', '300+0', '300+3'].includes(timeControl)) {\r\n      const whiteBlitzRating = await whitePlayer.message.blitz_rating;\r\n      setWhiteRating(whiteBlitzRating);\r\n      const blackBlitzRating = await blackPlayer.message.blitz_rating;\r\n      setBlackRating(blackBlitzRating);\r\n    } else if (['600+0', '600+5', '900+0'].includes(timeControl)) {\r\n      const whiteRapidRating = await whitePlayer.message.rapid_rating;\r\n      setWhiteRating(whiteRapidRating);\r\n      const blackRapidRating = await blackPlayer.message.rapid_rating;\r\n      setBlackRating(blackRapidRating);\r\n    } else if (['900+10', '1800+0', '1800+20'].includes(timeControl)) {\r\n      const whiteClassicalRating = await whitePlayer.message.classical_rating;\r\n      setWhiteRating(whiteClassicalRating);\r\n      const blackClassicalRating = await blackPlayer.message.classical_rating;\r\n      setBlackRating(blackClassicalRating);\r\n    }\r\n\r\n    const fen = await game.message.starting_position;\r\n    setPosition(fen);\r\n  }\r\n\r\n  const setPosition = (fen: any) => {\r\n    setFen(fen);\r\n    const position = fen.split(' ')[0];\r\n\r\n    const board: BoardState = [\r\n      ['', '', '', '', '', '', '', ''],\r\n      ['', '', '', '', '', '', '', ''],\r\n      ['', '', '', '', '', '', '', ''],\r\n      ['', '', '', '', '', '', '', ''],\r\n      ['', '', '', '', '', '', '', ''],\r\n      ['', '', '', '', '', '', '', ''],\r\n      ['', '', '', '', '', '', '', ''],\r\n      ['', '', '', '', '', '', '', '']\r\n    ];\r\n\r\n    let i = 0;\r\n\r\n    for (let y = 0; y < 8; y++) {\r\n      for (let x = 0; x < 8; x++) {\r\n        if (['1', '2', '3', '4', '5', '6', '7', '8'].includes(position[i])) {\r\n          x += parseInt(position[i]);\r\n          x--;\r\n        } else if (whiteKeys.includes(position[i]) || blackKeys.includes(position[i])) {\r\n          board[y][x] = position[i];\r\n        }\r\n\r\n        i++;\r\n\r\n        if (position[i] === '/') {\r\n          i++;\r\n        }\r\n      }\r\n    }\r\n\r\n    initialBoard = board;\r\n    setBoardState(board);\r\n  }\r\n\r\n  const fetchArchive = async () => {\r\n    const response = await fetch('https://' + server + '/fetch?archive=' + archive);\r\n    response.json().then((item) => setArchivedGame(item.game));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (whiteUsername === '????' && blackUsername === '????') {\r\n      fetchData();\r\n      fetchArchive();\r\n    }\r\n  }, []);\r\n\r\n  const flipBoard = () => {\r\n    if (fliped) {\r\n      setFlip(false);\r\n    } else {\r\n      setFlip(true);\r\n    }\r\n  }\r\n\r\n  const responsiveFontSize = (size: any) => {\r\n    const scale = Math.min(height / 800, width / 400, 2);\r\n\r\n    return Math.max(size * scale, 2);\r\n  };\r\n\r\n  const buttonWidth = width * 0.25;\r\n\r\n  const handleStart = () => {\r\n    if (currMove !== -1) {\r\n      setAnalysis({bestmove: 'Press button to analyse', evaluation: ''});\r\n    }\r\n\r\n    const fen = initialBoard;\r\n    setCurrMove(-1);\r\n    setBoardState(fen);\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    if (currMove !== -1) {\r\n      setAnalysis({bestmove: 'Press button to analyse', evaluation: ''});\r\n      const fen = currMove - 1 !== -1 ? JSON.parse(archivedGame?.moves[currMove - 1].fen) : initialBoard;\r\n      setCurrMove(Math.max(currMove - 1, -1));\r\n      setBoardState(fen);\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const index = archivedGame?.moves.length ? archivedGame?.moves.length - 1 : -1;\r\n\r\n    if (index === -1) {\r\n      return;\r\n    }\r\n\r\n    if (currMove !== index) {\r\n      setAnalysis({bestmove: 'Press button to analyse', evaluation: ''});\r\n      const fen = JSON.parse(archivedGame?.moves[currMove + 1].fen);\r\n      setCurrMove(Math.min(currMove + 1, index));\r\n      setBoardState(fen);\r\n    }\r\n  };\r\n\r\n  const handleEnd = () => {\r\n    const index = archivedGame?.moves.length ? archivedGame?.moves.length - 1 : -1;\r\n\r\n    if (index === -1) {\r\n      return;\r\n    }\r\n\r\n    if (currMove !== index) {\r\n      setAnalysis({bestmove: 'Press button to analyse', evaluation: ''});\r\n    }\r\n\r\n    const fen = JSON.parse(archivedGame?.moves[index].fen);\r\n    setCurrMove(index);\r\n    setBoardState(fen);\r\n  };\r\n\r\n  const handleAnalyse = async () => {\r\n    const uci: string[] = [];\r\n    archivedGame?.moves.forEach((item) => {if (uci.length <= currMove) uci.push(item.uci);});\r\n    setAnalysing(true);\r\n    const analysis = await fetch('https://' + server + '/analyse?fen=' + fen + '&moves=' + uci.join(' '));\r\n    analysis.json().then((item) => setAnalysis(item));\r\n    setAnalysing(false);\r\n  };\r\n\r\n  return (\r\n    <ScrollView>\r\n      <View style={[styles.container, { minHeight: height }]}>\r\n        <View style={styles.topBar}>\r\n          <View style={styles.backArrow}>\r\n            <Link href=\"profile\">\r\n              <View>\r\n                <MaterialIcons name=\"arrow-back\" size={responsiveFontSize(30)} color=\"#ccc\" />\r\n              </View>\r\n            </Link>\r\n          </View>\r\n\r\n          <View style={styles.topCenter}>\r\n            <Text style={[styles.analysisIndicator, { fontSize: responsiveFontSize(20) }]}>\r\n              {analysis.bestmove.trim() === 'bestmove (none)' ? 'No possible move' : analysis.bestmove.trim()}\r\n            </Text>\r\n\r\n            <Text style={[styles.analysisIndicator, { fontSize: responsiveFontSize(20) }]}>\r\n              {analysis.bestmove.trim() === 'bestmove (none)' ? '' : analysis.evaluation.trim()}\r\n            </Text>\r\n          </View>\r\n\r\n          <View style={styles.topRight}>\r\n            <Image\r\n              source={{ uri: (!fliped ? blackImageUrl : whiteImageUrl) }}\r\n              style={[styles.profilePicture, { width: responsiveFontSize(50), height: responsiveFontSize(50) }]}\r\n            />\r\n\r\n            <Text style={[styles.userInfo, { fontSize: responsiveFontSize(18) }]}>{(!fliped ? blackUsername : whiteUsername)}</Text>\r\n            <Text style={[styles.rating, { fontSize: responsiveFontSize(14) }]}>{(!fliped ? blackRating : whiteRating)}</Text>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={[styles.fileLabelsContainer, { width: boardSize }]}>\r\n          {files.map((file, index) => (\r\n            <Text\r\n              key={`file-top-${file}`}\r\n              style={[styles.fileLabel, { fontSize: 12 }]}\r\n            >\r\n              {fliped ? files[files.length - 1 - index] : file}\r\n            </Text>\r\n          ))}\r\n        </View>\r\n\r\n        <View style={styles.boardWithLabelsContainer}>\r\n          <View style={styles.rankLabelsContainer}>\r\n            {ranks.map((rank, index) => (\r\n              <Text\r\n                key={`rank-${rank}`}\r\n                style={[styles.rankLabel, { marginVertical: boardSize / 26, fontSize: 12 }]}\r\n              >\r\n                {fliped ? ranks[ranks.length - 1 - index] : rank}\r\n              </Text>\r\n            ))}\r\n          </View>\r\n\r\n          <View>\r\n            <ChessBoard\r\n              boardSize={boardSize}\r\n              boardState={boardState}\r\n              fliped={fliped}\r\n            />\r\n          </View>\r\n\r\n          <View style={styles.rankLabelsContainer}>\r\n            {ranks.map((rank, index) => (\r\n              <Text\r\n                key={`rank-right-${rank}`}\r\n                style={[styles.rankLabel, { marginVertical: boardSize / 26, fontSize: 12 }]}\r\n              >\r\n                {fliped ? ranks[ranks.length - 1 - index] : rank}\r\n              </Text>\r\n            ))}\r\n          </View>\r\n        </View>\r\n\r\n        <View style={[styles.fileLabelsContainer, { width: boardSize }]}>\r\n          {files.map((file, index) => (\r\n            <Text\r\n              key={`file-bottom-${file}`}\r\n              style={[styles.fileLabel, { fontSize: 12 }]}\r\n            >\r\n              {fliped ? files[files.length - 1 - index] : file}\r\n            </Text>\r\n          ))}\r\n        </View>\r\n\r\n        <View style={styles.bottomBar}>\r\n          <View style={styles.bottomLeft}>\r\n            <Image\r\n              source={{ uri: (!fliped ? whiteImageUrl : blackImageUrl) }}\r\n              style={[styles.profilePicture, { width: responsiveFontSize(50), height: responsiveFontSize(50) }]}\r\n            />\r\n\r\n            <Text style={[styles.userInfo, { fontSize: responsiveFontSize(18) }]}>{(!fliped ? whiteUsername : blackUsername)}</Text>\r\n            <Text style={[styles.rating, { fontSize: responsiveFontSize(14) }]}>{(!fliped ? whiteRating : blackRating)}</Text>\r\n          </View>\r\n\r\n          <View style={styles.bottomCenter}>\r\n            <TouchableOpacity onPress={handleAnalyse} style={[styles.analyseButton, { width: buttonWidth }]}>\r\n              <Text style={[styles.analysisIndicator, { fontSize: responsiveFontSize(16) }]}>{analysing ? \"ANALYSING\" : \"ANALYSE\"}</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={[styles.moveIndicator, { fontSize: responsiveFontSize(16) }]}>{currMove === -1 ? 'Start position' : archivedGame?.moves[currMove].uci}</Text>\r\n          </View>\r\n\r\n          <View style={styles.flipBoard}>\r\n            <TouchableOpacity>\r\n              <MaterialIcons name=\"flip\" size={responsiveFontSize(30)} color=\"#ccc\" onPress={flipBoard} />\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.buttonContainer}>\r\n            <TouchableOpacity onPress={handleStart} style={[styles.button, { width: buttonWidth }]}>\r\n              <MaterialIcons name=\"keyboard-double-arrow-left\" size={responsiveFontSize(30)} color=\"#fff\" />\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity onPress={handlePrev} style={[styles.button, { width: buttonWidth }]}>\r\n              <MaterialIcons name=\"keyboard-arrow-left\" size={responsiveFontSize(30)} color=\"#fff\" />\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity onPress={handleNext} style={[styles.button, { width: buttonWidth }]}>\r\n              <MaterialIcons name=\"keyboard-arrow-right\" size={responsiveFontSize(30)} color=\"#fff\" />\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity onPress={handleEnd} style={[styles.button, { width: buttonWidth }]}>\r\n              <MaterialIcons name=\"keyboard-double-arrow-right\" size={responsiveFontSize(30)} color=\"#fff\" />\r\n            </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#444'\r\n  },\r\n  topBar: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    paddingHorizontal: 20,\r\n    marginTop: 20\r\n  },\r\n  backArrow: {\r\n    flex: 1,\r\n    alignItems: 'flex-start'\r\n  },\r\n  flipBoard: {\r\n    flex: 1,\r\n    alignItems: 'flex-end'\r\n  },\r\n  topCenter: {\r\n    flex: 2,\r\n    alignItems: 'center'\r\n  },\r\n  topRight: {\r\n    flex: 1,\r\n    alignItems: 'flex-end'\r\n  },\r\n  profilePicture: {\r\n    borderRadius: 25\r\n  },\r\n  analysisIndicator: {\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    color: '#ccc',\r\n    marginVertical: 5\r\n  },\r\n  moveIndicator: {\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    color: '#ccc',\r\n    marginTop: 10\r\n  },\r\n  userInfo: {\r\n    fontWeight: 'bold',\r\n    color: '#888'\r\n  },\r\n  rating: {\r\n    color: '#ccc'\r\n  },\r\n  boardWithLabelsContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center'\r\n  },\r\n  rankLabelsContainer: {\r\n    justifyContent: 'space-between',\r\n    marginHorizontal: 5\r\n  },\r\n  rankLabel: {\r\n    color: '#ccc'\r\n  },\r\n  fileLabelsContainer: {\r\n    flexDirection: 'row',\r\n    marginVertical: 5\r\n  },\r\n  fileLabel: {\r\n    color: '#ccc',\r\n    textAlign: \"center\",\r\n    flex: 1\r\n  },\r\n  bottomBar: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    paddingHorizontal: 20,\r\n    marginBottom: 10\r\n  },\r\n  bottomLeft: {\r\n    flex: 1,\r\n    alignItems: 'flex-start'\r\n  },\r\n  bottomCenter: {\r\n    flex: 2,\r\n    alignItems: 'center'\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginTop: 20\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    borderWidth: 2,\r\n    borderColor: '#ccc',\r\n    backgroundColor: '#888',\r\n    paddingVertical: 10,\r\n    borderRadius: 5\r\n  },\r\n  analyseButton: {\r\n    alignItems: 'center',\r\n    backgroundColor: '#000',\r\n    padding: 15,\r\n    borderRadius: 5\r\n  }\r\n});\r\n\r\nexport default GameScreen;","import { ScrollView, useWindowDimensions, View, Text, StyleSheet, Image } from 'react-native';\r\nimport { Link } from 'expo-router';\r\n\r\nconst NotFoundScreen = () => {\r\n  return (\r\n    <ScrollView>\r\n      <View style={[styles.container, { minHeight: useWindowDimensions().height }]}>\r\n        <Image source={require('../../pieces/cm.png')} style={styles.image} resizeMode=\"contain\"/>\r\n        <Text style={styles.title}>Oops! Page Not Found</Text>\r\n        <Text style={styles.subtitle}>The page you're looking for doesn't exist or has been moved.</Text>\r\n        \r\n        <Link href='login' style={styles.button}>\r\n          <Text style={styles.buttonText}>Go to Home</Text>\r\n        </Link>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    overflow: 'hidden',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n    backgroundColor: '#444'\r\n  },\r\n  image: {\r\n    width: 250,\r\n    height: 250,\r\n    marginBottom: 25\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    marginBottom: 15,\r\n    color: '#ccc',\r\n    textAlign: 'center'\r\n  },\r\n  subtitle: {\r\n    fontSize: 18,\r\n    color: '#ccc',\r\n    textAlign: 'center',\r\n    marginBottom: 30,\r\n    paddingHorizontal: 20\r\n  },\r\n  button: {\r\n    backgroundColor: '#08f',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 30,\r\n    borderRadius: 25,\r\n    marginBottom: 15,\r\n    textAlign: 'center',\r\n    width: '100%'\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontSize: 18\r\n  }\r\n});\r\n\r\nexport default NotFoundScreen;","import { Stack } from 'expo-router';\r\n\r\nexport const unstable_settings = {\r\n  initialRouteName: 'index',\r\n};\r\n\r\nexport default function Layout() {\r\n  return <Stack screenOptions={{ headerShown: false }} />;\r\n}\r\n\r\nexport const basePath = '/chessmate_web';","import LoginScreen from './(tabs)/login';\r\n\r\nexport default function Main() {\r\n    return LoginScreen();\r\n}","import { ScrollView, useWindowDimensions, StyleSheet, Text, View, TextInput, TouchableOpacity, Image } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Link, useRouter } from 'expo-router';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst RegisterScreen = () => {\r\n    const [validating, setValidating] = useState(true);\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [isValid, setIsValid] = useState({username: false, email: false, password: false, confirmPassword: false});\r\n    const [serverCode, setServerCode] = useState('-1');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const router = useRouter();\r\n    const server = 'chessmate-production.up.railway.app';\r\n\r\n    const verifyToken = async () => {\r\n        let response;\r\n\r\n        try {\r\n            const token = await AsyncStorage.getItem('token');\r\n            response = await fetch('https://' + server + '/verify?token=' + token);\r\n            setValidating(false);\r\n        } catch (err) {\r\n            setValidating(false);\r\n\r\n            return;\r\n        }\r\n\r\n        response.json().then((code) => {\r\n            if (code.code === '0') {\r\n                router.push('dashboard');\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (validating) {\r\n            verifyToken();\r\n        }\r\n    }, []);\r\n\r\n    const handleRegister = async () => {\r\n        const valid ={username: false, email: false, password: false, confirmPassword: false};\r\n        let invalid = false;\r\n        const usernameRegex = /^[A-Za-z][A-Za-z0-9_]{2,14}$/;\r\n\r\n        if (!usernameRegex.test(username)) {\r\n            valid.username = true;\r\n            setServerCode('-1');\r\n            invalid = true;\r\n        }\r\n\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n        if (!emailRegex.test(email)) {\r\n            valid.email = true;\r\n            setServerCode('-1');\r\n            invalid = true;\r\n        }\r\n\r\n        const passwordRegex = /^[A-Za-z0-9_]{8,32}$/;\r\n\r\n        if (!passwordRegex.test(password)) {\r\n            valid.password = true;\r\n            setServerCode('-1');\r\n            invalid = true;\r\n        } else if (confirmPassword !== password) {\r\n            valid.confirmPassword = true;\r\n            setServerCode('-1');\r\n            invalid = true;\r\n        }\r\n\r\n        setIsValid(valid);\r\n\r\n        if (invalid) return;\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await fetch('https://' + server + '/register', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ username, email, password })\r\n            });\r\n\r\n            if (response.ok) {\r\n                const message = await response.json();\r\n                setServerCode(message.message);\r\n            } else {\r\n                const error = await response.json();\r\n                setServerCode(error.error);\r\n            }\r\n        } catch (error) {\r\n            setServerCode('4');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ScrollView>\r\n            <View style={[styles.container, { minHeight: useWindowDimensions().height }]}>\r\n                <Text style={styles.title}>ChessMate</Text>\r\n                <Image source={require('../../pieces/cm.png')} style={styles.profileImage} />\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"USERNAME\"\r\n                    placeholderTextColor=\"#bbb\"\r\n                    value={username}\r\n                    onChangeText={setUsername}\r\n                />\r\n\r\n                {isValid.username && <Text style={styles.warning}>\r\n                    Invalid username. Username must start with a letter and contain only letters, numbers, or underscores. Length must be between 3 and 15 characters.\r\n                </Text>}\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"EMAIL\"\r\n                    placeholderTextColor=\"#bbb\"\r\n                    value={email}\r\n                    onChangeText={setEmail}\r\n                    keyboardType=\"email-address\"\r\n                />\r\n\r\n                {isValid.email && <Text style={styles.warning}>\r\n                    Invalid email address.\r\n                </Text>}\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"PASSWORD\"\r\n                    placeholderTextColor=\"#bbb\"\r\n                    value={password}\r\n                    onChangeText={setPassword}\r\n                    secureTextEntry={true}\r\n                />\r\n\r\n                {isValid.password && <Text style={styles.warning}>\r\n                    Invalid password. Password must contain only letters, numbers, or underscores. Length must be between 8 and 32 characters.\r\n                </Text>}\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"CONFIRM PASSWORD\"\r\n                    placeholderTextColor=\"#bbb\"\r\n                    value={confirmPassword}\r\n                    onChangeText={setConfirmPassword}\r\n                    secureTextEntry={true}\r\n                />\r\n\r\n                {isValid.confirmPassword && <Text style={styles.warning}>\r\n                    Passwords do not match.\r\n                </Text>}\r\n\r\n                <TouchableOpacity style={styles.button} onPress={handleRegister} disabled={isLoading}>\r\n                    <Text style={styles.buttonText}>{isLoading ? 'Registering...' : 'REGISTER'}</Text>\r\n                </TouchableOpacity>\r\n\r\n                {serverCode === '0' && <Text style={styles.success}>\r\n                    Registration successful! We've sent you a confirmation email to prove your identity.\r\n                </Text>}\r\n\r\n                {(serverCode !== '-1' && serverCode !== '0') && <Text style={styles.warning}>\r\n                    {serverCode === '1' ? 'Invalid credentials.' : (serverCode === '2' ? 'Username already taken.' : (serverCode === '3' ? 'Email already taken.' : 'Unknown error.'))}\r\n                </Text>}\r\n\r\n                <Link href=\"login\" style={styles.linkText}>\r\n                    <Text style={styles.linkText}>Already have an account? Login.</Text>\r\n                </Link>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        overflow: 'hidden',\r\n        backgroundColor: '#444'\r\n    },\r\n    title: {\r\n        fontSize: 32,\r\n        fontWeight: 'bold',\r\n        marginBottom: 40,\r\n        color: '#fff'\r\n    },\r\n    profileImage: {\r\n        width: 200,\r\n        height: 200,\r\n        borderRadius: 50,\r\n        marginBottom: 10\r\n    },\r\n    input: {\r\n        width: '80%',\r\n        height: 50,\r\n        backgroundColor: '#444',\r\n        color: '#ccc',\r\n        borderColor: '#ccc',\r\n        borderWidth: 2,\r\n        borderRadius: 2,\r\n        paddingHorizontal: 15,\r\n        marginBottom: 5,\r\n        fontSize: 18\r\n    },\r\n    success: {\r\n        width: '80%',\r\n        color: '#000',\r\n        marginBottom: 10,\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    },\r\n    warning: {\r\n        width: '80%',\r\n        color: '#f00',\r\n        marginBottom: 10,\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    },\r\n    button: {\r\n        width: '80%',\r\n        height: 50,\r\n        backgroundColor: '#fff',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 5,\r\n        marginBottom: 5\r\n    },\r\n    buttonText: {\r\n        color: '#08f',\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    },\r\n    linkText: {\r\n        color: '#08f',\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        marginVertical: 10\r\n    }\r\n});\r\n\r\nexport default RegisterScreen;","import { ScrollView, useWindowDimensions, StyleSheet, Text, View, TextInput, TouchableOpacity, Image } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Link, useRouter, useLocalSearchParams } from 'expo-router';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst ResetPasswordScreen = () => {\r\n    const { email } = useLocalSearchParams();\r\n    const [validating, setValidating] = useState(true);\r\n    const [resetCode, setResetCode] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [isValid, setIsValid] = useState({code: false, password: false, confirmPassword: false});\r\n    const [serverCode, setServerCode] = useState('-1');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const router = useRouter();\r\n    const server = 'chessmate-production.up.railway.app';\r\n\r\n    const verifyToken = async () => {\r\n        let response;\r\n\r\n        try {\r\n            const token = await AsyncStorage.getItem('token');\r\n            response = await fetch('https://' + server + '/verify?token=' + token);\r\n            setValidating(false);\r\n        } catch (err) {\r\n            setValidating(false);\r\n\r\n            return;\r\n        }\r\n\r\n        response.json().then((code) => {\r\n            if (code.code === '0') {\r\n                router.push('dashboard');\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (validating) {\r\n            verifyToken();\r\n        }\r\n    }, []);\r\n\r\n    const handleResetPassword = async () => {\r\n        const valid ={code: false, password: false, confirmPassword: false};\r\n        let invalid = false;\r\n\r\n        const codeRegex = /^\\d{6}$/;\r\n\r\n        if (!codeRegex.test(resetCode)) {\r\n            valid.code = true;\r\n            setServerCode('-1');\r\n            invalid = true;\r\n        }\r\n\r\n        const passwordRegex = /^[A-Za-z0-9_]{8,32}$/;\r\n\r\n        if (!passwordRegex.test(newPassword)) {\r\n            valid.password = true;\r\n            setServerCode('-1');\r\n            invalid = true;\r\n        } else if (confirmPassword !== newPassword) {\r\n            valid.confirmPassword = true;\r\n            setServerCode('-1');\r\n            invalid = true;\r\n        }\r\n\r\n        setIsValid(valid);\r\n\r\n        if (invalid) return;\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await fetch('https://' + server + '/reset', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ email, resetCode, newPassword })\r\n            });\r\n\r\n            if (response.ok) {\r\n                const message = await response.json();\r\n                setServerCode(message.message);\r\n            } else {\r\n                const error = await response.json();\r\n                setServerCode(error.error);\r\n            }\r\n        } catch (error) {\r\n            setServerCode('4');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ScrollView>\r\n            <View style={[styles.container, { minHeight: useWindowDimensions().height }]}>\r\n                <Text style={styles.title}>ChessMate</Text>\r\n                <Image source={require('../../pieces/cm.png')} style={styles.profileImage} />\r\n\r\n                <Text style={styles.success}>\r\n                    Please enter the code we've sent on given email address.\r\n                </Text>\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"RESET CODE\"\r\n                    placeholderTextColor=\"#bbb\"\r\n                    value={resetCode}\r\n                    onChangeText={setResetCode}\r\n                    keyboardType=\"numeric\"\r\n                />\r\n\r\n                {isValid.code && <Text style={styles.warning}>\r\n                    Invalid code.\r\n                </Text>}\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"NEW PASSWORD\"\r\n                    placeholderTextColor=\"#bbb\"\r\n                    value={newPassword}\r\n                    onChangeText={setNewPassword}\r\n                    secureTextEntry={true}\r\n                />\r\n\r\n                {isValid.password && <Text style={styles.warning}>\r\n                    Invalid password. Password must contain only letters, numbers, or underscores. Length must be between 8 and 32 characters.\r\n                </Text>}\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"CONFIRM PASSWORD\"\r\n                    placeholderTextColor=\"#bbb\"\r\n                    value={confirmPassword}\r\n                    onChangeText={setConfirmPassword}\r\n                    secureTextEntry={true}\r\n                />\r\n\r\n                {isValid.confirmPassword && <Text style={styles.warning}>\r\n                    Passwords do not match.\r\n                </Text>}\r\n\r\n                <TouchableOpacity\r\n                    style={styles.button}\r\n                    onPress={handleResetPassword}\r\n                    disabled={isLoading}\r\n                >\r\n                    <Text style={styles.buttonText}>\r\n                        {isLoading ? 'Resetting...' : 'RESET PASSWORD'}\r\n                    </Text>\r\n                </TouchableOpacity>\r\n\r\n                {serverCode === '0' && <Text style={styles.success}>\r\n                    Password reset successfully.\r\n                </Text>}\r\n\r\n                {(serverCode !== '-1' && serverCode !== '0') && <Text style={styles.warning}>\r\n                    {serverCode === '1' ? 'Invalid code.' : (serverCode === '2' ? 'Invalid email.' : (serverCode === '3' ? 'Invalid or expired code.' : 'Unknown error.'))}\r\n                </Text>}\r\n\r\n                <Link href=\"login\" style={styles.linkText}>\r\n                    <Text style={styles.linkText}>Back to Login</Text>\r\n                </Link>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        overflow: 'hidden',\r\n        backgroundColor: '#444'\r\n    },\r\n    title: {\r\n        fontSize: 32,\r\n        fontWeight: 'bold',\r\n        marginBottom: 40,\r\n        color: '#fff'\r\n    },\r\n    profileImage: {\r\n        width: 200,\r\n        height: 200,\r\n        borderRadius: 50,\r\n        marginBottom: 10\r\n    },\r\n    input: {\r\n        width: '80%',\r\n        height: 50,\r\n        backgroundColor: '#444',\r\n        color: '#ccc',\r\n        borderColor: '#ccc',\r\n        borderWidth: 2,\r\n        borderRadius: 2,\r\n        paddingHorizontal: 15,\r\n        marginBottom: 5,\r\n        fontSize: 18\r\n    },\r\n    success: {\r\n        width: '80%',\r\n        color: '#000',\r\n        marginBottom: 10,\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    },\r\n    warning: {\r\n        width: '80%',\r\n        color: '#f00',\r\n        marginBottom: 10,\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    },\r\n    button: {\r\n        width: '80%',\r\n        height: 50,\r\n        backgroundColor: '#fff',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 5,\r\n        marginBottom: 5\r\n    },\r\n    buttonText: {\r\n        color: '#08f',\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    },\r\n    linkText: {\r\n        color: '#08f',\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        marginVertical: 10\r\n    }\r\n});\r\n\r\nexport default ResetPasswordScreen;","import { View, Text, StyleSheet, Image, TouchableOpacity, ScrollView, TextInput, Platform } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { Link, useRouter } from 'expo-router';\r\nimport { useState, useEffect } from 'react';\r\nimport * as Updates from 'expo-updates';\r\n\r\nconst SettingsScreen = () => {\r\n  const [validating, setValidating] = useState(true);\r\n  const [token, setToken] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [profileImage, setProfileImage]: any = useState('');\r\n  const [serverCode, setServerCode] = useState('0');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const router = useRouter();\r\n  const server = 'chessmate-production.up.railway.app';\r\n  \r\n  const verifyToken = async () => {\r\n    let response;\r\n\r\n    try {\r\n      const token = await AsyncStorage.getItem('token');\r\n      response = await fetch('https://' + server + '/verify?token=' + token);\r\n      setValidating(false);\r\n    } catch (err) {\r\n      setValidating(false);\r\n\r\n      return;\r\n    }\r\n\r\n    response.json().then((code) => {\r\n      if (code.code === '1') {\r\n        resetApp();\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (validating) {\r\n      verifyToken();\r\n    }\r\n  }, []);\r\n\r\n  const resetApp = async () => {\r\n    if (Platform.OS === 'web') {\r\n      window.location.href = 'https://lorinpet.github.io/chessmate_web';\r\n    } else {\r\n      await Updates.reloadAsync();\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    let tokenString = await AsyncStorage.getItem('token');\r\n    setToken(tokenString ? tokenString : '');\r\n    const dataResponse = await fetch('https://' + server + '/data?token=' + tokenString);\r\n    const data = await dataResponse.json();\r\n    const username = await data.message.username;\r\n    const profile_picture_url = await data.message.profile_picture_url;\r\n    setUsername(username);\r\n    const imageResponse = await fetch('https://' + server + '/' + profile_picture_url);\r\n    setImageUrl(imageResponse.url);\r\n    const description = await data.message.description;\r\n    setDescription(description);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!username) {\r\n      fetchData();\r\n    }\r\n  }, []);\r\n\r\n  const pickImage = async () => {\r\n    try {\r\n      const result = await ImagePicker.launchImageLibraryAsync({mediaTypes: 'images', allowsEditing: true, quality: 0.8, base64: true});\r\n\r\n      if (result.assets) {\r\n        setProfileImage(result.assets[0]);\r\n      }\r\n    } catch (error) {\r\n      alert('Invalid image!');\r\n    }\r\n  };\r\n\r\n  const uploadImage = async () => {\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      if (!profileImage.base64) {\r\n        setServerCode('1');\r\n      }\r\n  \r\n      let fileExt = 'jpg';\r\n\r\n      if (profileImage.uri) {\r\n        fileExt = profileImage.uri.split('/')[1].split(';')[0].toLowerCase();\r\n      }\r\n\r\n      const validTypes = ['jpg', 'jpeg', 'png'];\r\n\r\n      if (!validTypes.includes(fileExt)) {\r\n        setServerCode('1');\r\n      }\r\n  \r\n      const response = await fetch('https://' + server + '/update', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          token: token,\r\n          image: profileImage.base64,\r\n          filename: `image_${Date.now()}.${fileExt}`,\r\n          description\r\n        })\r\n      });\r\n  \r\n      const message = await response.json();\r\n  \r\n      if (response.ok) {\r\n        setServerCode(message.message);\r\n      } else {\r\n        setServerCode(message.error);\r\n      }\r\n    } catch (error) {\r\n      setServerCode('3');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Link href=\"profile\">\r\n          <View>\r\n            <Ionicons name=\"arrow-back\" size={24} color=\"#ccc\" />\r\n          </View>\r\n        </Link>\r\n\r\n        <Text style={styles.headerText}>Settings</Text>\r\n\r\n        <Link href=\"dashboard\">\r\n          <View>\r\n            <Ionicons name=\"menu\" size={24} color=\"#ccc\" />\r\n          </View>\r\n        </Link>\r\n      </View>\r\n\r\n      <View style={styles.profileSection}>\r\n        <TouchableOpacity onPress={pickImage}>\r\n          <Image source={profileImage ? profileImage : { uri: imageUrl }} style={styles.profileImage} />\r\n          <Ionicons name=\"camera\" size={24} color=\"#ccc\" style={styles.cameraIcon} />\r\n        </TouchableOpacity>\r\n\r\n        <Text style={styles.userName}>{username}</Text>\r\n      </View>\r\n\r\n      <View style={styles.inputContainer}>\r\n        <Text style={styles.label}>Description</Text>\r\n\r\n        <TextInput\r\n          style={styles.input}\r\n          multiline\r\n          numberOfLines={4}\r\n          value={description}\r\n          onChangeText={setDescription}\r\n        />\r\n      </View>\r\n\r\n      {(serverCode !== '0') && <Text style={styles.warning}>\r\n          {serverCode === '1' ? 'Invalid image.' : (serverCode === '2' ? 'Unable to save image.' : 'Unknown error.')}\r\n      </Text>}\r\n\r\n      <TouchableOpacity onPress={uploadImage} style={styles.saveButton} disabled={isLoading}>\r\n        <Text style={styles.saveButtonText}>{isLoading ? 'Saving...' : 'SAVE'}</Text>\r\n      </TouchableOpacity>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 16,\r\n    backgroundColor: '#444'\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 20\r\n  },\r\n  headerText: {\r\n    fontSize: 24,\r\n    color: '#fff',\r\n    fontWeight: 'bold'\r\n  },\r\n  profileSection: {\r\n    alignItems: 'center',\r\n    marginBottom: 20\r\n  },\r\n  profileImage: {\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 50,\r\n    marginBottom: 10\r\n  },\r\n  cameraIcon: {\r\n    position: 'absolute',\r\n    bottom: 10,\r\n    right: 10,\r\n    backgroundColor: '#0008',\r\n    borderRadius: 12,\r\n    padding: 4\r\n  },\r\n  userName: {\r\n    fontSize: 20,\r\n    color: '#fff',\r\n    fontWeight: 'bold'\r\n  },\r\n  inputContainer: {\r\n    marginBottom: 20\r\n  },\r\n  label: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    marginBottom: 8\r\n  },\r\n  input: {\r\n    backgroundColor: '#888',\r\n    borderRadius: 8,\r\n    padding: 16,\r\n    color: '#fff',\r\n    fontSize: 18\r\n  },\r\n  warning: {\r\n    width: '80%',\r\n    color: '#f00',\r\n    marginBottom: 10,\r\n    fontSize: 18,\r\n    fontWeight: 'bold'\r\n  },\r\n  saveButton: {\r\n    backgroundColor: '#00f',\r\n    borderRadius: 8,\r\n    padding: 16,\r\n    alignItems: 'center'\r\n  },\r\n  saveButtonText: {\r\n    color: '#fff',\r\n    fontSize: 18,\r\n    fontWeight: 'bold'\r\n  }\r\n});\r\n\r\nexport default SettingsScreen;","import { View, Text, StyleSheet, Image, TouchableOpacity, ScrollView, FlatList, Platform } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport RNPickerSelect from 'react-native-picker-select';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { Link, useRouter } from 'expo-router';\r\nimport { useState, useEffect } from 'react';\r\nimport * as Updates from 'expo-updates';\r\n\r\nconst ProfileScreen = () => {\r\n  const [validating, setValidating] = useState(true);\r\n  const [token, setToken] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [rating, setRating] = useState({bullet: 0, blitz: 0, rapid: 0, classical: 0, all: 0});\r\n  const [games, setGames] = useState({\r\n    bulletWins: 0, bulletLosses: 0, bulletDraws: 0, bulletGames: 0,\r\n    blitzWins: 0, blitzLosses: 0, blitzDraws: 0, blitzGames: 0,\r\n    rapidWins: 0, rapidLosses: 0, rapidDraws: 0, rapidGames: 0,\r\n    classicalWins: 0, classicalLosses: 0, classicalDraws: 0, classicalGames: 0,\r\n    allWins: 0, allLosses: 0, allDraws: 0, allGames: 0\r\n  });\r\n  const [archivedGames, setArchivedGames] = useState([]);\r\n  // Dropdown stat states\r\n  const [showStats, setShowStats] = useState(true);\r\n  const [selectedValue, setSelectedValue] = useState(null);\r\n  const router = useRouter();\r\n  const server = 'chessmate-production.up.railway.app';\r\n  \r\n  const verifyToken = async () => {\r\n    let response;\r\n\r\n    try {\r\n      const token = await AsyncStorage.getItem('token');\r\n      response = await fetch('https://' + server + '/verify?token=' + token);\r\n      setValidating(false);\r\n    } catch (err) {\r\n      setValidating(false);\r\n\r\n      return;\r\n    }\r\n\r\n    response.json().then((code) => {\r\n      if (code.code === '1') {\r\n        resetApp();\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (validating) {\r\n      verifyToken();\r\n    }\r\n  }, []);\r\n\r\n  const resetApp = async () => {\r\n    if (Platform.OS === 'web') {\r\n      window.location.href = 'https://lorinpet.github.io/chessmate_web';\r\n    } else {\r\n      await Updates.reloadAsync();\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    let tokenString = await AsyncStorage.getItem('token');\r\n    setToken(tokenString ? tokenString : '');\r\n    const dataResponse = await fetch('https://' + server + '/data?token=' + tokenString);\r\n    const data = await dataResponse.json();\r\n    const username = await data.message.username;\r\n    const profile_picture_url = await data.message.profile_picture_url;\r\n    setUsername(username);\r\n    const imageResponse = await fetch('https://' + server + '/' + profile_picture_url);\r\n    setImageUrl(imageResponse.url);\r\n    const description = await data.message.description;\r\n    setDescription(description);\r\n    const bullet_rating = await data.message.bullet_rating;\r\n    const blitz_rating = await data.message.blitz_rating;\r\n    const rapid_rating = await data.message.rapid_rating;\r\n    const classical_rating = await data.message.classical_rating;\r\n    setRating({bullet: bullet_rating, blitz: blitz_rating, rapid: rapid_rating, classical: classical_rating,\r\n      all: Math.round((bullet_rating + blitz_rating + rapid_rating + classical_rating) / 4)});\r\n    const bullet_wins = await data.message.bullet_wins;\r\n    const bullet_losses = await data.message.bullet_losses;\r\n    const bullet_draws = await data.message.bullet_draws;\r\n    const blitz_wins = await data.message.blitz_wins;\r\n    const blitz_losses = await data.message.blitz_losses;\r\n    const blitz_draws = await data.message.blitz_draws;\r\n    const rapid_wins = await data.message.rapid_wins;\r\n    const rapid_losses = await data.message.rapid_losses;\r\n    const rapid_draws = await data.message.rapid_draws;\r\n    const classical_wins = await data.message.classical_wins;\r\n    const classical_losses = await data.message.classical_losses;\r\n    const classical_draws = await data.message.classical_draws;\r\n    setGames({\r\n      bulletWins: bullet_wins, bulletLosses: bullet_losses, bulletDraws: bullet_draws,\r\n      bulletGames: bullet_wins + bullet_losses + bullet_draws,\r\n      blitzWins: blitz_wins, blitzLosses: blitz_losses, blitzDraws: blitz_draws,\r\n      blitzGames: blitz_wins + blitz_losses + blitz_draws,\r\n      rapidWins: rapid_wins, rapidLosses: rapid_losses, rapidDraws: rapid_draws,\r\n      rapidGames: rapid_wins + rapid_losses + rapid_draws,\r\n      classicalWins: classical_wins, classicalLosses: classical_losses, classicalDraws: classical_draws,\r\n      classicalGames: classical_wins + classical_losses + classical_draws,\r\n      allWins: bullet_wins + blitz_wins + rapid_wins + classical_wins,\r\n      allLosses: bullet_losses + blitz_losses + rapid_losses + classical_losses,\r\n      allDraws: bullet_draws + blitz_draws + rapid_draws + classical_draws,\r\n      allGames: bullet_wins + blitz_wins + rapid_wins + classical_wins +\r\n      bullet_losses + blitz_losses + rapid_losses + classical_losses +\r\n      bullet_draws + blitz_draws + rapid_draws + classical_draws\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!username) {\r\n      fetchData();\r\n    }\r\n  }, []);\r\n\r\n  const fetchArchives = async () => {\r\n    const response = await fetch('https://' + server + '/archives?token=' + token);\r\n\r\n    response.json().then((games) => {\r\n      games.sort((a: any, b: any) => b.completed_at.localeCompare(a.completed_at));\r\n      setArchivedGames(games);\r\n    });\r\n  }\r\n\r\n  const spectateGame = (gameId: string) => {\r\n    router.push(`archive?archive=${gameId}`);\r\n  };\r\n\r\n  // Dropdown item values\r\n  const dropdownItems = [\r\n    { label: 'Bullet', value: 'bullet' },\r\n    { label: 'Blitz', value: 'blitz' },\r\n    { label: 'Rapid', value: 'rapid' },\r\n    { label: 'Classical', value: 'classical' }\r\n  ];\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Link href=\"dashboard\">\r\n          <View>\r\n            <Ionicons name=\"arrow-back\" size={24} color=\"#ccc\" />\r\n          </View>\r\n        </Link>\r\n\r\n        <Text style={styles.headerText}>Profile</Text>\r\n\r\n        <Link href=\"settings\">\r\n          <View>\r\n            <Ionicons name=\"settings\" size={24} color=\"#ccc\" />\r\n          </View>\r\n        </Link>\r\n      </View>\r\n\r\n      <View style={styles.profileSection}>\r\n        <Image source={{ uri: imageUrl }} style={styles.profileImage} />\r\n        <Text style={styles.userName}>{username}</Text>\r\n      </View>\r\n\r\n      <Text style={styles.userDescription}>{description}</Text>\r\n\r\n      <View style={styles.buttonContainer}>\r\n        <TouchableOpacity style={styles.button} onPress={() => {setShowStats(true);}}>\r\n          <Text style={styles.buttonText}>Stats</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity style={styles.button} onPress={() => {fetchArchives(); setShowStats(false);}}>\r\n          <Text style={styles.buttonText}>Games</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {showStats ? (\r\n        <View style={styles.statContainer}>\r\n          <View style={styles.dropdownContainer}>\r\n            <RNPickerSelect\r\n              onValueChange={(value) => setSelectedValue(value)}\r\n              items={dropdownItems}\r\n              placeholder={{ label: 'All', value: 'all' }}\r\n            />\r\n          </View>\r\n\r\n          <View style={styles.statRow}>\r\n            <Text style={styles.statLabel}>Rating</Text>\r\n            <Text style={styles.statValue}>{\r\n              selectedValue === 'bullet' ? rating.bullet : (\r\n              selectedValue === 'blitz' ? rating.blitz : (\r\n              selectedValue === 'rapid' ? rating.rapid : (\r\n              selectedValue === 'classical' ? rating.classical : (\r\n              rating.all))))\r\n            }</Text>\r\n          </View>\r\n\r\n          <View style={styles.statRow}>\r\n            <Text style={styles.statLabel}>Games Played</Text>\r\n            <Text style={styles.statValue}>{\r\n              selectedValue === 'bullet' ? games.bulletGames : (\r\n              selectedValue === 'blitz' ? games.blitzGames : (\r\n              selectedValue === 'rapid' ? games.rapidGames : (\r\n              selectedValue === 'classical' ? games.classicalGames : (\r\n              games.allGames))))\r\n            }</Text>\r\n          </View>\r\n\r\n          <View style={styles.statRow}>\r\n            <Text style={styles.statLabel}>Wins</Text>\r\n            <Text style={styles.statValue}>{\r\n              selectedValue === 'bullet' ? games.bulletWins : (\r\n              selectedValue === 'blitz' ? games.blitzWins : (\r\n              selectedValue === 'rapid' ? games.rapidWins : (\r\n              selectedValue === 'classical' ? games.classicalWins : (\r\n              games.allWins))))\r\n            }</Text>\r\n          </View>\r\n\r\n          <View style={styles.statRow}>\r\n            <Text style={styles.statLabel}>Losses</Text>\r\n            <Text style={styles.statValue}>{\r\n              selectedValue === 'bullet' ? games.bulletLosses : (\r\n              selectedValue === 'blitz' ? games.blitzLosses : (\r\n              selectedValue === 'rapid' ? games.rapidLosses : (\r\n              selectedValue === 'classical' ? games.classicalLosses : (\r\n              games.allLosses))))\r\n            }</Text>\r\n          </View>\r\n\r\n          <View style={styles.statRow}>\r\n            <Text style={styles.statLabel}>Draws</Text>\r\n            <Text style={styles.statValue}>{\r\n              selectedValue === 'bullet' ? games.bulletDraws : (\r\n              selectedValue === 'blitz' ? games.blitzDraws : (\r\n              selectedValue === 'rapid' ? games.rapidDraws : (\r\n              selectedValue === 'classical' ? games.classicalDraws : (\r\n              games.allDraws))))\r\n            }</Text>\r\n          </View>\r\n\r\n          <View style={styles.statRow}>\r\n            <Text style={styles.statLabel}>Win Rate</Text>\r\n            <Text style={styles.statValue}>{\r\n              selectedValue === 'bullet' ? (Number(games.bulletGames) === 0 ? 0 : (Number(games.bulletWins) * 100 / Number(games.bulletGames)).toFixed(2)) : (\r\n              selectedValue === 'blitz' ? (Number(games.blitzGames) === 0 ? 0 : (Number(games.blitzWins) * 100 / Number(games.blitzGames)).toFixed(2)) : (\r\n              selectedValue === 'rapid' ? (Number(games.rapidGames) === 0 ? 0 : (Number(games.rapidWins) * 100 / Number(games.rapidGames)).toFixed(2)) : (\r\n              selectedValue === 'classical' ? (Number(games.classicalGames) === 0 ? 0 : (Number(games.classicalWins) * 100 / Number(games.classicalGames)).toFixed(2)) : (\r\n              Number(games.allGames) === 0 ? 0 : (Number(games.allWins) * 100 / Number(games.allGames)).toFixed(2)))))\r\n            }%</Text>\r\n          </View>\r\n        </View>\r\n      ) : (\r\n        <FlatList\r\n          data={archivedGames}\r\n          keyExtractor={(item: any) => item.id}\r\n          renderItem={({ item }) => (\r\n            <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n              <TouchableOpacity style={styles.gameItem} onPress={() => {spectateGame(item.id)}}>\r\n                <Text style={styles.gameText}>{item.user}</Text>\r\n                <Text style={styles.gameText}>{item.rating}</Text>\r\n                <Text style={styles.gameText}>{item.color}</Text>\r\n                <Text style={styles.gameText}>{item.starting_position === 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1' ? 'Standard' : 'Custom'}</Text>\r\n                <Text style={styles.gameText}>{item.time_control}</Text>\r\n                <Text style={styles.gameText}>{item.result === 'white' ? 'White\\u00A0won' : (item.result === 'black' ? 'Black\\u00A0won' : 'Draw')}</Text>\r\n                <Text style={styles.gameText}>{item.completed_at.substring(0, 10).replace('-', '\\u2011').replace('-', '\\u2011')}</Text>\r\n              </TouchableOpacity>\r\n            </ScrollView>\r\n          )}\r\n          ListEmptyComponent={ <Text style={styles.emptyText}>No games in the archive</Text> }\r\n        />\r\n      )}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    backgroundColor: '#444'\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 20\r\n  },\r\n  headerText: {\r\n    fontSize: 24,\r\n    color: '#fff',\r\n    fontWeight: 'bold'\r\n  },\r\n  profileSection: {\r\n    alignItems: 'center',\r\n    marginBottom: 20\r\n  },\r\n  profileImage: {\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 50,\r\n    marginBottom: 10\r\n  },\r\n  userName: {\r\n    fontSize: 20,\r\n    color: '#fff',\r\n    fontWeight: 'bold'\r\n  },\r\n  userDescription: {\r\n    fontSize: 18,\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    marginBottom: 20\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    backgroundColor: '#888',\r\n    borderRadius: 5,\r\n    marginBottom: 20\r\n  },\r\n  button: {\r\n    backgroundColor: '#ccc',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    marginHorizontal: 20,\r\n    borderRadius: 5\r\n  },\r\n  buttonText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold'\r\n  },\r\n  statContainer: {\r\n    backgroundColor: '#888',\r\n    borderRadius: 8,\r\n    padding: 16\r\n  },\r\n  statRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 8\r\n  },\r\n  statLabel: {\r\n    fontSize: 18\r\n  },\r\n  statValue: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold'\r\n  },\r\n  dropdownContainer: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 8,\r\n    padding: 16,\r\n    marginBottom: 16,\r\n    alignItems: 'center'\r\n  },\r\n  gameItem: {\r\n    flexDirection: 'row',\r\n    padding: 10,\r\n    marginVertical: 5,\r\n    backgroundColor: '#ccc',\r\n    borderRadius: 5,\r\n    justifyContent: 'space-between'\r\n  },\r\n  gameText: {\r\n    backgroundColor: '#888',\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    margin: 5\r\n  },\r\n  emptyText: {\r\n    color: '#ccc',\r\n    textAlign: 'center',\r\n    marginVertical: 20\r\n  }\r\n});\r\n\r\nexport default ProfileScreen;","import { ScrollView, useWindowDimensions, View, Text, StyleSheet, Image } from 'react-native';\r\nimport { Link } from 'expo-router';\r\n\r\nconst NotFoundScreen = () => {\r\n  return (\r\n    <ScrollView>\r\n      <View style={[styles.container, { minHeight: useWindowDimensions().height }]}>\r\n        <Image source={require('../pieces/cm.png')} style={styles.image} resizeMode=\"contain\"/>\r\n        <Text style={styles.title}>Oops! Page Not Found</Text>\r\n        <Text style={styles.subtitle}>The page you're looking for doesn't exist or has been moved.</Text>\r\n        \r\n        <Link href='login' style={styles.button}>\r\n          <Text style={styles.buttonText}>Go to Home</Text>\r\n        </Link>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    overflow: 'hidden',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n    backgroundColor: '#444'\r\n  },\r\n  image: {\r\n    width: 250,\r\n    height: 250,\r\n    marginBottom: 25\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    marginBottom: 15,\r\n    color: '#ccc',\r\n    textAlign: 'center'\r\n  },\r\n  subtitle: {\r\n    fontSize: 18,\r\n    color: '#ccc',\r\n    textAlign: 'center',\r\n    marginBottom: 30,\r\n    paddingHorizontal: 20\r\n  },\r\n  button: {\r\n    backgroundColor: '#08f',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 30,\r\n    borderRadius: 25,\r\n    marginBottom: 15,\r\n    textAlign: 'center',\r\n    width: '100%'\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontSize: 18\r\n  }\r\n});\r\n\r\nexport default NotFoundScreen;","import { ScrollView, useWindowDimensions, StyleSheet, Text, View, TextInput, TouchableOpacity, Image } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Link, useRouter } from 'expo-router';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst ForgotPasswordScreen = () => {\r\n    const [validating, setValidating] = useState(true);\r\n    const [email, setEmail] = useState('');\r\n    const [emailIsInvalid, setEmailIsInvalid] = useState(false);\r\n    const [serverCode, setServerCode] = useState('0');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const router = useRouter();\r\n    const server = 'chessmate-production.up.railway.app';\r\n\r\n    const verifyToken = async () => {\r\n        let response;\r\n\r\n        try {\r\n            const token = await AsyncStorage.getItem('token');\r\n            response = await fetch('https://' + server + '/verify?token=' + token);\r\n            setValidating(false);\r\n        } catch (err) {\r\n            setValidating(false);\r\n\r\n            return;\r\n        }\r\n\r\n        response.json().then((code) => {\r\n            if (code.code === '0') {\r\n                router.push('dashboard');\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (validating) {\r\n            verifyToken();\r\n        }\r\n    }, []);\r\n\r\n    const handleResetPassword = async () => {\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n        if (!emailRegex.test(email)) {\r\n            setEmailIsInvalid(true);\r\n            setServerCode('0');\r\n            return;\r\n        } else {\r\n            setEmailIsInvalid(false);\r\n        }\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await fetch('https://' + server + '/forgot', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ email })\r\n            });\r\n\r\n            if (response.ok) {\r\n                router.push({ pathname: 'reset', params: { email } });\r\n            } else {\r\n                const error = await response.json();\r\n                setServerCode(error.error);\r\n            }\r\n        } catch (error) {\r\n            setServerCode('2');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ScrollView>\r\n            <View style={[styles.container, { minHeight: useWindowDimensions().height }]}>\r\n                <Text style={styles.title}>ChessMate</Text>\r\n                <Image source={require('../../pieces/cm.png')} style={styles.profileImage} />\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"EMAIL\"\r\n                    placeholderTextColor=\"#bbb\"\r\n                    value={email}\r\n                    onChangeText={setEmail}\r\n                    keyboardType=\"email-address\"\r\n                />\r\n\r\n                {emailIsInvalid && <Text style={styles.warning}>\r\n                    Invalid email address.\r\n                </Text>}\r\n\r\n                <TouchableOpacity style={styles.button} onPress={handleResetPassword} disabled={isLoading}>\r\n                    <Text style={styles.buttonText}>\r\n                        {isLoading ? 'Sending...' : 'RESET PASSWORD'}\r\n                    </Text>\r\n                </TouchableOpacity>\r\n\r\n                {(serverCode !== '0') && <Text style={styles.warning}>\r\n                    {serverCode === '1' ? 'We don\\'t have a record of this email on our database.' : 'Unknown error.'}\r\n                </Text>}\r\n\r\n                <Link href=\"login\" style={styles.linkText}>\r\n                    <Text style={styles.linkText}>Back to Login</Text>\r\n                </Link>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        overflow: 'hidden',\r\n        backgroundColor: '#444'\r\n    },\r\n    title: {\r\n        fontSize: 32,\r\n        fontWeight: 'bold',\r\n        marginBottom: 40,\r\n        color: '#fff'\r\n    },\r\n    profileImage: {\r\n        width: 200,\r\n        height: 200,\r\n        borderRadius: 50,\r\n        marginBottom: 10\r\n    },\r\n    input: {\r\n        width: '80%',\r\n        height: 50,\r\n        backgroundColor: '#444',\r\n        color: '#ccc',\r\n        borderColor: '#ccc',\r\n        borderWidth: 2,\r\n        borderRadius: 2,\r\n        paddingHorizontal: 15,\r\n        marginBottom: 5,\r\n        fontSize: 18\r\n    },\r\n    warning: {\r\n        width: '80%',\r\n        color: '#f00',\r\n        marginBottom: 10,\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    },\r\n    button: {\r\n        width: '80%',\r\n        height: 50,\r\n        backgroundColor: '#fff',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 5,\r\n        marginBottom: 5\r\n    },\r\n    buttonText: {\r\n        color: '#08f',\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    },\r\n    linkText: {\r\n        color: '#08f',\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        marginVertical: 10\r\n    }\r\n});\r\n\r\nexport default ForgotPasswordScreen;","import { View, Text, TextInput, TouchableOpacity, StyleSheet, ScrollView, useWindowDimensions, Image, Modal, FlatList, Platform } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport Slider from '@react-native-community/slider';\r\nimport { Link, useRouter } from 'expo-router';\r\nimport { useState, useEffect } from 'react';\r\nimport * as Updates from 'expo-updates';\r\n\r\nconst DashboardScreen = () => {\r\n  const [validating, setValidating] = useState(true);\r\n  const [username, setUsername] = useState('');\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [rating, setRating] = useState({bullet: 0, blitz: 0, rapid: 0, classical: 0});\r\n  const [showGameModal, setShowGameModal] = useState(false);\r\n  const [isCreating, setIsCreating] = useState(false);\r\n  const [time, setTime] = useState('');\r\n  const [mode, setMode] = useState('');\r\n  const [activeGames, setActiveGames] = useState([]);\r\n  const [gameType, setGameType] = useState('player');\r\n  const [position, setPosition] = useState('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR');\r\n  const [invalid, setInvalid] = useState(false);\r\n  const [playerColor, setPlayerColor] = useState('random');\r\n  const [difficulty, setDifficulty] = useState(5);\r\n  const [positionType, setPositionType] = useState('standard');\r\n  const router = useRouter();\r\n  const server = 'chessmate-production.up.railway.app';\r\n  let token;\r\n\r\n  const verifyToken = async () => {\r\n    let response;\r\n\r\n    try {\r\n      const token = await AsyncStorage.getItem('token');\r\n      response = await fetch('https://' + server + '/verify?token=' + token);\r\n      setValidating(false);\r\n    } catch (err) {\r\n      setValidating(false);\r\n\r\n      return;\r\n    }\r\n\r\n    response.json().then((code) => {\r\n      if (code.code === '1') {\r\n        setShowGameModal(false);\r\n        resetApp();\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (validating) {\r\n      verifyToken();\r\n    }\r\n  }, []);\r\n\r\n  const resetApp = async () => {\r\n    if (Platform.OS === 'web') {\r\n      window.location.href = 'https://lorinpet.github.io/chessmate_web';\r\n    } else {\r\n      await Updates.reloadAsync();\r\n    }\r\n  }\r\n\r\n  const logoff = async () => {\r\n    await AsyncStorage.clear();\r\n    setShowGameModal(false);\r\n    resetApp();\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    token = await AsyncStorage.getItem('token');\r\n    const dataResponse = await fetch('https://' + server + '/data?token=' + token);\r\n    const data = await dataResponse.json();\r\n    const username = await data.message.username;\r\n    const profile_picture_url = await data.message.profile_picture_url;\r\n    setUsername(username);\r\n    const imageResponse = await fetch('https://' + server + '/' + profile_picture_url);\r\n    setImageUrl(imageResponse.url);\r\n    const bullet_rating = await data.message.bullet_rating;\r\n    const blitz_rating = await data.message.blitz_rating;\r\n    const rapid_rating = await data.message.rapid_rating;\r\n    const classical_rating = await data.message.classical_rating;\r\n    setRating({bullet: bullet_rating, blitz: blitz_rating, rapid: rapid_rating, classical: classical_rating});\r\n  }\r\n\r\n  const fetchActiveGames = async () => {\r\n    try {\r\n      const response = await fetch('https://' + server + '/games?mode=' + mode);\r\n      const games = await response.json();\r\n      setActiveGames(games);\r\n    } catch (error) {\r\n      console.error('Error fetching active games: ' + error);\r\n    }\r\n  };\r\n\r\n  const createNewGame = async () => {\r\n    try {\r\n      setIsCreating(true);\r\n\r\n      const response = await fetch('https://' + server + '/create', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ position: (positionType === 'standard' ? 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR' : position),\r\n          type: gameType, timeControl: time, gameMode: mode, difficulty: difficulty })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        setInvalid(true);\r\n        setIsCreating(false);\r\n        return;\r\n      }\r\n      \r\n      const gameId = await response.json();\r\n      setShowGameModal(false);\r\n      setIsCreating(false);\r\n      router.push(`game?gameId=${gameId}&color=${playerColor}&name=${username}&image=${imageUrl}&rating=${\r\n        mode === 'bullet' ? rating.bullet : (mode === 'blitz' ? rating.blitz : (mode === 'rapid' ? rating.rapid : rating.classical))}`);\r\n    } catch (error) {\r\n      console.error('Error creating new game: ' + error);\r\n    }\r\n  };\r\n\r\n  const joinGame = (gameId: string) => {\r\n    setShowGameModal(false);\r\n    router.push(`game?gameId=${gameId}&color=${playerColor}&name=${username}&image=${imageUrl}&rating=${\r\n      mode === 'bullet' ? rating.bullet : (mode === 'blitz' ? rating.blitz : (mode === 'rapid' ? rating.rapid : rating.classical))}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!username) {\r\n      fetchData();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (showGameModal) {\r\n      fetchActiveGames();\r\n    }\r\n  }, [showGameModal]);\r\n\r\n  const openGameModal = (time: string, mode: string) => {\r\n    setTime(time);\r\n    setMode(mode);\r\n    setShowGameModal(true);\r\n  };\r\n\r\n  const getDifficultyLabel = (level: number) => {\r\n    if (level <= 3) return 'Beginner';\r\n    if (level <= 6) return 'Intermediate';\r\n    if (level <= 9) return 'Advanced';\r\n    if (level <= 12) return 'Master';\r\n    if (level <= 15) return 'Grandmaster';\r\n    return 'Impossible';\r\n  };\r\n\r\n  const GameModal = () => (\r\n    <Modal\r\n      animationType=\"fade\"\r\n      transparent={true}\r\n      visible={showGameModal}\r\n      onRequestClose={() => setShowGameModal(false)}\r\n    >\r\n      <ScrollView>\r\n        <View style={[styles.modalContainer, { minHeight: useWindowDimensions().height }]}>\r\n          <View style={styles.modalContent}>\r\n            <Text style={styles.modalTitle}>Game Options</Text>\r\n            <Text style={styles.sectionHeader}>Game Type</Text>\r\n\r\n            <View style={styles.optionRow}>\r\n              <TouchableOpacity \r\n                style={[styles.optionButton, gameType === 'player' && styles.selectedOption]}\r\n                onPress={() => setGameType('player')}\r\n              >\r\n                <Text style={styles.optionText}>Play vs Player</Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity \r\n                style={[styles.optionButton, gameType === 'ai' && styles.selectedOption]}\r\n                onPress={() => setGameType('ai')}\r\n              >\r\n                <Text style={styles.optionText}>Play vs AI</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n\r\n            <Text style={styles.sectionHeader}>Your Color</Text>\r\n\r\n            <View style={styles.optionRow}>\r\n              <TouchableOpacity \r\n                style={[styles.optionButton, playerColor === 'white' && styles.selectedOption]}\r\n                onPress={() => setPlayerColor('white')}\r\n              >\r\n                <Text style={styles.optionText}>White</Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity \r\n                style={[styles.optionButton, playerColor === 'black' && styles.selectedOption]}\r\n                onPress={() => setPlayerColor('black')}\r\n              >\r\n                <Text style={styles.optionText}>Black</Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity \r\n                style={[styles.optionButton, playerColor === 'random' && styles.selectedOption]}\r\n                onPress={() => setPlayerColor('random')}\r\n              >\r\n                <Text style={styles.optionText}>Random</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n\r\n            <Text style={styles.sectionHeader}>{gameType === 'player' ? 'Active Games' : 'AI Difficulty'}</Text>\r\n\r\n            {gameType === 'player' ? (\r\n              <FlatList\r\n                data={activeGames}\r\n                keyExtractor={(item: any) => item.id}\r\n                renderItem={({ item }) => (\r\n                  <ScrollView horizontal={true} showsHorizontalScrollIndicator={false}>\r\n                    <TouchableOpacity style={styles.gameItem} onPress={() => joinGame(item.id)}>\r\n                      <Text style={styles.gameText}>{item.opponent}</Text>\r\n                      <Text style={styles.gameText}>{item.rating}</Text>\r\n                      <Text style={styles.gameText}>{item.position}</Text>\r\n                      <Text style={styles.gameText}>{item.time}</Text>\r\n                      <Text style={styles.gameText}>{item.color}</Text>\r\n                    </TouchableOpacity>\r\n                  </ScrollView>\r\n                )}\r\n                ListEmptyComponent={\r\n                  <Text style={styles.emptyText}>No games to join</Text>\r\n                }\r\n              />\r\n            ) : (\r\n              <View>\r\n                <Slider\r\n                  minimumValue={0}\r\n                  maximumValue={20}\r\n                  step={1}\r\n                  value={difficulty}\r\n                  onValueChange={setDifficulty}\r\n                  minimumTrackTintColor='#08f'\r\n                  maximumTrackTintColor='#888'\r\n                />\r\n\r\n                <Text style={styles.difficultyText}>\r\n                  Level: {difficulty} ({getDifficultyLabel(difficulty)})\r\n                </Text>\r\n              </View>\r\n            )}\r\n\r\n            {positionType === 'custom' && invalid && <Text style={styles.warning}>Your fen string is invalid!</Text>}\r\n\r\n            <View style={styles.modalButtons}>\r\n              <TouchableOpacity \r\n                style={styles.createButton}\r\n                onPress={createNewGame}\r\n              >\r\n                <Text style={styles.buttonText}>{isCreating ? 'Creating...' : 'Create a game'}</Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity \r\n                style={styles.cancelButton}\r\n                onPress={() => {setShowGameModal(false); setInvalid(false)}}\r\n              >\r\n                <Text style={styles.buttonText}>Cancel</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </Modal>\r\n  );\r\n\r\n  const ModeButton = ({ time, label }: any) => (\r\n    <TouchableOpacity \r\n      style={styles.modeButton}\r\n      onPress={() => openGameModal(time, label)}\r\n    >\r\n      <Text style={styles.modeText}>{time}</Text>\r\n      <Text style={styles.modeLabel}>{label}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  return (\r\n    <ScrollView>\r\n      <View style={[styles.container, { minHeight: useWindowDimensions().height }]}>\r\n        <View style={styles.header}>\r\n          <TouchableOpacity onPress={() => logoff()}>\r\n            <View style={styles.profileSection}>\r\n              <Text style={styles.menuText}>Logout</Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n\r\n          <Text style={styles.title}>ChessMate</Text>\r\n\r\n          <Link href=\"profile\">\r\n            <View style={styles.profileSection}>\r\n              <Image source={{ uri: imageUrl }} style={styles.profile} />\r\n              <Text style={styles.menuText}>{username}</Text>\r\n            </View>\r\n          </Link>\r\n        </View>\r\n\r\n        <Text style={styles.fenLabel}>Starting Position {'('}fen notation{')'}</Text>\r\n\r\n        <View style={styles.optionRow}>\r\n          <TouchableOpacity \r\n            style={[styles.optionButton, positionType === 'standard' && styles.selectedOption]}\r\n            onPress={() => setPositionType('standard')}\r\n          >\r\n            <Text style={styles.optionText}>Standard</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity \r\n            style={[styles.optionButton, positionType === 'custom' && styles.selectedOption]}\r\n            onPress={() => setPositionType('custom')}\r\n          >\r\n            <Text style={styles.optionText}>Custom</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        {positionType === 'custom' && <View style={styles.optionRow}>\r\n          <TextInput\r\n            style={styles.position}\r\n            value={position}\r\n            onChangeText={setPosition}\r\n          />\r\n        </View>}\r\n\r\n        <Text style={styles.sectionTitle}>Select Chess Mode to Play</Text>\r\n\r\n        <View style={styles.modeRow}>\r\n          <View style={styles.link}>\r\n            <ModeButton time=\"1+0\" label=\"Bullet\" />\r\n          </View>\r\n\r\n          <View style={styles.link}>\r\n            <ModeButton time=\"2+1\" label=\"Bullet\" />\r\n          </View>\r\n\r\n          <View style={styles.link}>\r\n            <ModeButton time=\"3+0\" label=\"Bullet\" />\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.modeRow}>\r\n          <View style={styles.link}>\r\n            <ModeButton time=\"3+2\" label=\"Blitz\" />\r\n          </View>\r\n\r\n          <View style={styles.link}>\r\n            <ModeButton time=\"5+0\" label=\"Blitz\" />\r\n          </View>\r\n          \r\n          <View style={styles.link}>\r\n            <ModeButton time=\"5+3\" label=\"Blitz\" />\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.modeRow}>\r\n          <View style={styles.link}>\r\n            <ModeButton time=\"10+0\" label=\"Rapid\" />\r\n          </View>\r\n\r\n          <View style={styles.link}>\r\n            <ModeButton time=\"10+5\" label=\"Rapid\" />\r\n          </View>\r\n          \r\n          <View style={styles.link}>\r\n            <ModeButton time=\"15+0\" label=\"Rapid\" />\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.modeRow}>\r\n          <View style={styles.link}>\r\n            <ModeButton time=\"15+10\" label=\"Classical\" />\r\n          </View>\r\n\r\n          <View style={styles.link}>\r\n            <ModeButton time=\"30+0\" label=\"Classical\" />\r\n          </View>\r\n          \r\n          <View style={styles.link}>\r\n            <ModeButton time=\"30+20\" label=\"Classical\" />\r\n          </View>\r\n        </View>\r\n\r\n        <GameModal />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    backgroundColor: '#444'\r\n  },\r\n  header: {\r\n    overflow: 'hidden',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginTop: 32,\r\n    marginBottom: 16,\r\n    borderRadius: 4,\r\n    backgroundColor: '#888'\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#fff'\r\n  },\r\n  profileSection: {\r\n    flexShrink: 1,\r\n    overflow: 'hidden',\r\n    flexDirection: 'row',\r\n    padding: 8,\r\n    borderRadius: 4,\r\n    backgroundColor: '#000'\r\n  },\r\n  profile: {\r\n    width: 20,\r\n    height: 20,\r\n    borderRadius: 20,\r\n    marginRight: 5\r\n  },\r\n  menuText: {\r\n    color: '#fff',\r\n    fontSize: 18\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    marginBottom: 16\r\n  },\r\n  modeRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 8\r\n  },\r\n  link: {\r\n    flex: 1\r\n  },\r\n  modeButton: {\r\n    padding: 16,\r\n    backgroundColor: '#888',\r\n    borderRadius: 4,\r\n    marginHorizontal: 4,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  modeText: {\r\n    fontSize: 18,\r\n    color: '#fff'\r\n  },\r\n  modeLabel: {\r\n    fontSize: 14,\r\n    color: '#fff'\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#0008'\r\n  },\r\n  modalContent: {\r\n    width: '80%',\r\n    backgroundColor: '#444',\r\n    borderRadius: 10,\r\n    padding: 20\r\n  },\r\n  modalTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    marginBottom: 20,\r\n    textAlign: 'center'\r\n  },\r\n  position: {\r\n    width: '100%',\r\n    backgroundColor: '#888',\r\n    borderRadius: 8,\r\n    padding: 16,\r\n    color: '#fff',\r\n    fontSize: 18\r\n  },\r\n  warning: {\r\n    width: '80%',\r\n    color: '#f00',\r\n    marginBottom: 10,\r\n    fontSize: 18,\r\n    fontWeight: 'bold'\r\n  },\r\n  fenLabel: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    marginTop: 15,\r\n    marginBottom: 10\r\n  },\r\n  sectionHeader: {\r\n    fontSize: 18,\r\n    color: '#fff',\r\n    marginTop: 15,\r\n    marginBottom: 10\r\n  },\r\n  optionRow: {\r\n    flexDirection: 'row',\r\n    marginBottom: 10\r\n  },\r\n  optionButton: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginHorizontal: 5,\r\n    borderRadius: 5,\r\n    backgroundColor: '#888',\r\n    alignItems: 'center'\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: '#08f'\r\n  },\r\n  optionText: {\r\n    color: '#fff'\r\n  },\r\n  gameItem: {\r\n    flexDirection: 'row',\r\n    padding: 10,\r\n    marginVertical: 5,\r\n    backgroundColor: '#ccc',\r\n    borderRadius: 5,\r\n    justifyContent: 'space-between'\r\n  },\r\n  gameText: {\r\n    backgroundColor: '#888',\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    margin: 5\r\n  },\r\n  emptyText: {\r\n    color: '#ccc',\r\n    textAlign: 'center',\r\n    marginVertical: 20\r\n  },\r\n  modalButtons: {\r\n    flexDirection: 'row',\r\n    marginTop: 20\r\n  },\r\n  createButton: {\r\n    flex: 1,\r\n    padding: 10,\r\n    backgroundColor: '#08f',\r\n    borderRadius: 5,\r\n    marginRight: 10,\r\n    alignItems: 'center'\r\n  },\r\n  cancelButton: {\r\n    flex: 1,\r\n    padding: 10,\r\n    backgroundColor: '#888',\r\n    borderRadius: 5,\r\n    alignItems: 'center'\r\n  },\r\n  buttonText: {\r\n    color: '#fff'\r\n  },\r\n  difficultyText: {\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n    marginTop: 8,\r\n    fontSize: 18\r\n  }\r\n});\r\n\r\nexport default DashboardScreen;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/chessmate_web/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [321], () => (__webpack_require__(1697)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","styles","StyleSheet","create","container","flex","justifyContent","alignItems","overflow","backgroundColor","title","fontSize","fontWeight","marginBottom","color","profileImage","width","height","borderRadius","input","borderColor","borderWidth","paddingHorizontal","warning","button","buttonText","linkText","marginVertical","LoginScreen","validating","setValidating","useState","username","setUsername","password","setPassword","isValid","setIsValid","serverCode","setServerCode","isLoading","setIsLoading","router","useRouter","pathname","usePathname","server","useEffect","async","response","token","AsyncStorage","getItem","fetch","err","json","then","push","verifyToken","_jsx","ScrollView","children","_jsxs","View","style","minHeight","useWindowDimensions","Text","Image","source","require","TextInput","placeholder","placeholderTextColor","value","onChangeText","secureTextEntry","TouchableOpacity","onPress","valid","invalid","test","method","headers","body","JSON","stringify","ok","data","setItem","message","error","disabled","Link","href","pieces","whiteKeys","blackKeys","initialBoard","isSquareUnderAttack","row","col","boardState","isWhite","epFlags","castleFlags","r","c","piece","includes","getLegalMoves","some","move","capture","check","moves","toUpperCase","isWithinBoard","canMoveTo","targetPiece","toLowerCase","addMove","direction","startRow","start","target","from","to","Math","abs","forEach","i","whiteKingside","blackKingside","whiteQueenside","blackQueenside","legalMoves","filter","newBoard","simulateMove","isInCheck","king","kingRow","kingCol","ChessBoard","React","boardSize","onSquarePress","selectedPiece","fliped","currentMoves","squareSize","rowArray","displayRow","displayCol","rotateCoordinates","isSelected","isCurrent","isLegal","m","Pressable","position","left","top","resizeMode","PromotionMenu","onSelect","promotionPieces","promotionMenu","transform","translateX","translateY","promotionOption","topBar","flexDirection","marginTop","backArrow","flipBoard","topCenter","topRight","profilePicture","timer","moveIndicator","userInfo","rating","boardWithLabelsContainer","rankLabelsContainer","marginHorizontal","rankLabel","fileLabelsContainer","fileLabel","textAlign","bottomBar","bottomLeft","bottomCenter","buttonContainer","paddingVertical","capturedPiecesContainer","capturedWhite","capturedBlack","chatContainer","bottom","right","padding","chatMessage","chatInputContainer","chatInput","marginRight","sendButton","gameOverText","GameScreen","params","useLocalSearchParams","gameId","playerColor","playerName","name","playerImage","image","playerRating","whiteUsername","setWhiteUsername","whiteImageUrl","setWhiteImageUrl","whiteRating","setWhiteRating","blackUsername","setBlackUsername","blackImageUrl","setBlackImageUrl","blackRating","setBlackRating","files","ranks","reverse","setBoardState","setSelectedPiece","promotionSquare","setPromotionSquare","setCapturedWhite","setCapturedBlack","isWhiteTurn","setIsWhiteTurn","setEpFlags","setCastleFlags","setColor","setFlip","ws","setWs","whiteTimer","setWhiteTimer","blackTimer","setBlackTimer","result","setResult","chatMessages","setChatMessages","setChatInput","isChatVisible","setIsChatVisible","resetApp","window","location","setImage","url","white","imageResponse","websocket","WebSocket","onopen","console","log","onmessage","parse","type","whiteName","whiteImage","blackName","blackImage","gameState","board","currentTurn","lastMoveStart","lastMoveTarget","winner","prevMessages","onclose","onerror","close","useMemo","useCallback","promotionRow","handleMove","promotion","send","renderCapturedPieces","capturedPieces","pieceHeight","pieceWidth","index","responsiveFontSize","size","scale","min","max","buttonWidth","formatTime","seconds","remainingSeconds","floor","MaterialIcons","uri","file","length","rank","handleOfferDraw","handleResign","toggleChat","msg","handleSendMessage","trim","Svg","renderSquares","squares","x","y","Rect","fill","renderPieces","pieceComponents","analysisIndicator","analyseButton","archive","archivedGame","setArchivedGame","analysis","setAnalysis","bestmove","evaluation","analysing","setAnalysing","currMove","setCurrMove","fen","setFen","setPosition","split","parseInt","gameResponse","game","whitePlayerId","white_player","whitePlayerResponse","whitePlayer","blackPlayerId","black_player","blackPlayerResponse","blackPlayer","whiteProfile","profile_picture_url","blackProfile","timeControl","time_control","whiteBulletRating","bullet_rating","blackBulletRating","whiteBlitzRating","blitz_rating","blackBlitzRating","whiteRapidRating","rapid_rating","blackRapidRating","whiteClassicalRating","classical_rating","blackClassicalRating","starting_position","fetchData","item","fetchArchive","uci","join","handleStart","handlePrev","handleNext","handleEnd","subtitle","NotFoundScreen","unstable_settings","initialRouteName","Layout","Stack","screenOptions","headerShown","basePath","Main","success","RegisterScreen","email","setEmail","confirmPassword","setConfirmPassword","keyboardType","ResetPasswordScreen","resetCode","setResetCode","newPassword","setNewPassword","header","headerText","profileSection","cameraIcon","userName","inputContainer","label","saveButton","saveButtonText","SettingsScreen","setToken","imageUrl","setImageUrl","description","setDescription","setProfileImage","tokenString","dataResponse","Ionicons","ImagePicker","mediaTypes","allowsEditing","quality","base64","assets","alert","multiline","numberOfLines","fileExt","filename","Date","now","userDescription","statContainer","statRow","statLabel","statValue","dropdownContainer","gameItem","gameText","margin","emptyText","ProfileScreen","setRating","bullet","blitz","rapid","classical","all","games","setGames","bulletWins","bulletLosses","bulletDraws","bulletGames","blitzWins","blitzLosses","blitzDraws","blitzGames","rapidWins","rapidLosses","rapidDraws","rapidGames","classicalWins","classicalLosses","classicalDraws","classicalGames","allWins","allLosses","allDraws","allGames","archivedGames","setArchivedGames","showStats","setShowStats","selectedValue","setSelectedValue","round","bullet_wins","bullet_losses","bullet_draws","blitz_wins","blitz_losses","blitz_draws","rapid_wins","rapid_losses","rapid_draws","classical_wins","classical_losses","classical_draws","sort","a","b","completed_at","localeCompare","fetchArchives","RNPickerSelect","onValueChange","items","Number","toFixed","FlatList","keyExtractor","renderItem","horizontal","showsHorizontalScrollIndicator","user","substring","replace","ListEmptyComponent","ForgotPasswordScreen","emailIsInvalid","setEmailIsInvalid","flexShrink","profile","menuText","sectionTitle","modeRow","link","modeButton","modeText","modeLabel","modalContainer","modalContent","modalTitle","fenLabel","sectionHeader","optionRow","optionButton","selectedOption","optionText","modalButtons","createButton","cancelButton","difficultyText","DashboardScreen","showGameModal","setShowGameModal","isCreating","setIsCreating","time","setTime","mode","setMode","activeGames","setActiveGames","gameType","setGameType","setInvalid","setPlayerColor","difficulty","setDifficulty","positionType","setPositionType","createNewGame","gameMode","fetchActiveGames","ModeButton","openGameModal","clear","logoff","GameModal","Modal","animationType","transparent","visible","onRequestClose","joinGame","opponent","Slider","minimumValue","maximumValue","step","minimumTrackTintColor","maximumTrackTintColor","level","__webpack_module_cache__","moduleId","cachedModule","undefined","loaded","__webpack_modules__","call","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","key","splice","n","getter","__esModule","d","definition","defineProperty","enumerable","get","g","globalThis","this","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}